"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6257],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(96540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}},95636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"core-library/tutorials/tutorial-claude-automator/intro","title":"Claude Automator Tutorial","description":"This tutorial demonstrates the latest Brobot patterns and features for version 1.1.0+, including:","source":"@site/docs/03-core-library/tutorials/tutorial-claude-automator/intro.md","sourceDirName":"03-core-library/tutorials/tutorial-claude-automator","slug":"/core-library/tutorials/tutorial-claude-automator/intro","permalink":"/brobot/docs/core-library/tutorials/tutorial-claude-automator/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/tutorials/tutorial-claude-automator/intro.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Spring Configuration and Wiring","permalink":"/brobot/docs/core-library/tutorials/tutorial-claude-automator/configuration"},"next":{"title":"Project Setup","permalink":"/brobot/docs/core-library/tutorials/tutorial-claude-automator/project-setup"}}');var r=n(74848),o=n(28453);const s={},a="Claude Automator Tutorial",l={},c=[{value:"Overview",id:"overview",level:2},{value:"What You&#39;ll Build",id:"what-youll-build",level:2},{value:"Key Concepts Demonstrated",id:"key-concepts-demonstrated",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Tutorial Structure",id:"tutorial-structure",level:2}];function d(e){const t={admonition:"admonition",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"claude-automator-tutorial",children:"Claude Automator Tutorial"})}),"\n",(0,r.jsxs)(t.admonition,{title:"Version Note",type:"info",children:[(0,r.jsx)(t.p,{children:"This tutorial demonstrates the latest Brobot patterns and features for version 1.1.0+, including:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Modern ActionConfig classes and fluent API"}),"\n",(0,r.jsx)(t.li,{children:"Automatic startup verification (no custom startup code needed!)"}),"\n",(0,r.jsx)(t.li,{children:"Enhanced developer experience improvements"}),"\n",(0,r.jsx)(t.li,{children:"Configuration-driven initialization"}),"\n"]})]}),"\n",(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(t.p,{children:"This tutorial walks through creating a complete Brobot automation that monitors and interacts with Claude AI. It demonstrates:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Modern state creation patterns with direct component access"}),"\n",(0,r.jsx)(t.li,{children:"JavaStateTransition for code-based transitions"}),"\n",(0,r.jsx)(t.li,{children:"Fluent API with action chaining"}),"\n",(0,r.jsx)(t.li,{children:"Spring Boot dependency injection"}),"\n",(0,r.jsx)(t.li,{children:"Continuous monitoring automation"}),"\n",(0,r.jsx)(t.li,{children:"Enhanced developer experience features"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"what-youll-build",children:"What You'll Build"}),"\n",(0,r.jsx)(t.p,{children:"The Claude Automator application:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Monitors Claude AI Interface"}),": Watches for Claude's response icon to appear/disappear"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Manages Conversation Flow"}),": Automatically reopens the Working state when Claude finishes responding"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Handles Prompt Interaction"}),': Clicks on prompts and types "continue" to maintain conversation flow']}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"key-concepts-demonstrated",children:"Key Concepts Demonstrated"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"State-based Architecture"}),": Two states representing different UI screens"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Modern Transitions"}),": Using JavaStateTransition for flexible state navigation"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Action Chaining"}),": Combining find, click, and type actions in a single fluent call"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Active State Management"}),": Using StateMemory to track and manage active states"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Automatic Startup Verification"}),": Zero-code image and state verification"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Convenience Methods"}),": Leveraging new API improvements for cleaner code"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Java 21 or higher"}),"\n",(0,r.jsx)(t.li,{children:"Gradle"}),"\n",(0,r.jsx)(t.li,{children:"Basic understanding of Brobot concepts (States, Transitions, Actions)"}),"\n",(0,r.jsx)(t.li,{children:"Claude AI interface for testing"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"tutorial-structure",children:"Tutorial Structure"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Project Setup"}),": Configure Gradle with local Brobot library"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"State Implementation"}),": Create Working and Prompt states with modern patterns"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Transitions"}),": Implement state transitions using JavaStateTransition"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Automation Logic"}),": Build continuous monitoring system"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Configuration"}),": Wire everything together with Spring Boot"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Running the Application"}),": Test the complete automation"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Let's begin!"})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
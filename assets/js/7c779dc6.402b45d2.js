"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3359],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var t=i(96540);const o={},s=t.createContext(o);function c(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(s.Provider,{value:n},e.children)}},55448:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"core-library/guides/action-config-factory","title":"ActionConfig Factory","description":"Brobot provides powerful patterns for creating and managing action configurations through the ActionConfigFactory and ActionChainBuilder classes. These tools simplify the creation of action configurations and make complex action sequences more readable and maintainable.","source":"@site/docs/03-core-library/guides/action-config-factory.md","sourceDirName":"03-core-library/guides","slug":"/core-library/guides/action-config-factory","permalink":"/brobot/docs/core-library/guides/action-config-factory","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/guides/action-config-factory.md","tags":[],"version":"current","sidebarPosition":21,"frontMatter":{"sidebar_position":21,"title":"ActionConfig Factory"},"sidebar":"docSidebar","previous":{"title":"Runtime Delegation Migration Guide","permalink":"/brobot/docs/core-library/guides/runtime-delegation-migration"},"next":{"title":"ActionHistory Migration Plan","permalink":"/brobot/docs/core-library/guides/actionhistory-migration-plan"}}');var o=i(74848),s=i(28453);const c={sidebar_position:21,title:"ActionConfig Factory"},r="Action Configuration Factory",a={},l=[{value:"ActionConfigFactory",id:"actionconfigfactory",level:2},{value:"Benefits",id:"benefits",level:3},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Supported Action Types",id:"supported-action-types",level:3},{value:"Common Overrides",id:"common-overrides",level:3},{value:"Type-Specific Overrides",id:"type-specific-overrides",level:3},{value:"Click Actions",id:"click-actions",level:4},{value:"Drag Actions",id:"drag-actions",level:4},{value:"Type Actions",id:"type-actions",level:4},{value:"ActionChainBuilder",id:"actionchainbuilder",level:2},{value:"Related Documentation",id:"related-documentation",level:3},{value:"Benefits",id:"benefits-1",level:3},{value:"Basic Usage",id:"basic-usage-1",level:3},{value:"Chaining Strategies",id:"chaining-strategies",level:3},{value:"NESTED Strategy (Default)",id:"nested-strategy-default",level:4},{value:"CONFIRM Strategy",id:"confirm-strategy",level:4},{value:"Complex Example: Drag Operation",id:"complex-example-drag-operation",level:3},{value:"Builder Methods",id:"builder-methods",level:3},{value:"Chain Construction",id:"chain-construction",level:4},{value:"Configuration",id:"configuration",level:4},{value:"Static Factory Methods",id:"static-factory-methods",level:4},{value:"Integration Example",id:"integration-example",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Use the Factory for Consistency",id:"use-the-factory-for-consistency",level:3},{value:"Build Readable Chains",id:"build-readable-chains",level:3},{value:"Reuse Common Configurations",id:"reuse-common-configurations",level:3},{value:"Handle Chain Results",id:"handle-chain-results",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"action-configuration-factory",children:"Action Configuration Factory"})}),"\n",(0,o.jsxs)(n.p,{children:["Brobot provides powerful patterns for creating and managing action configurations through the ",(0,o.jsx)(n.code,{children:"ActionConfigFactory"})," and ",(0,o.jsx)(n.code,{children:"ActionChainBuilder"})," classes. These tools simplify the creation of action configurations and make complex action sequences more readable and maintainable."]}),"\n",(0,o.jsx)(n.h2,{id:"actionconfigfactory",children:"ActionConfigFactory"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"ActionConfigFactory"})," is a Spring component that centralizes the creation of all ",(0,o.jsx)(n.code,{children:"ActionConfig"})," subclasses. It provides a single point of configuration and reduces coupling between actions and their configuration creation."]}),"\n",(0,o.jsx)(n.h3,{id:"benefits",children:"Benefits"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type Safety"}),": Eliminates unsafe casting and ",(0,o.jsx)(n.code,{children:"instanceof"})," checks in action implementations"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Centralized Logic"}),": All configuration creation logic in one place"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Consistent API"}),": Uniform way to create any action configuration"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Override Support"}),": Easy application of custom settings"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Autowired\nprivate ActionConfigFactory factory;\n\n// Create with defaults\nActionConfig clickConfig = factory.create(ActionInterface.Type.CLICK);\n\n// Create with overrides\nMap<String, Object> overrides = new HashMap<>();\noverrides.put("numberOfClicks", 2);\noverrides.put("pauseAfterEnd", 1.0);\nActionConfig doubleClick = factory.create(ActionInterface.Type.CLICK, overrides);\n'})}),"\n",(0,o.jsx)(n.h3,{id:"supported-action-types",children:"Supported Action Types"}),"\n",(0,o.jsx)(n.p,{children:"The factory supports all Brobot action types:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CLICK"})," - Creates ",(0,o.jsx)(n.code,{children:"ClickOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"DRAG"})," - Creates ",(0,o.jsx)(n.code,{children:"DragOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"FIND"})," - Creates ",(0,o.jsx)(n.code,{children:"PatternFindOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"TYPE"})," - Creates ",(0,o.jsx)(n.code,{children:"TypeOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"MOVE"})," - Creates ",(0,o.jsx)(n.code,{children:"MouseMoveOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"VANISH"})," - Creates ",(0,o.jsx)(n.code,{children:"VanishOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"HIGHLIGHT"})," - Creates ",(0,o.jsx)(n.code,{children:"HighlightOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SCROLL_MOUSE_WHEEL"})," - Creates ",(0,o.jsx)(n.code,{children:"ScrollOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"MOUSE_DOWN"})," - Creates ",(0,o.jsx)(n.code,{children:"MouseDownOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"MOUSE_UP"})," - Creates ",(0,o.jsx)(n.code,{children:"MouseUpOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"KEY_DOWN"})," - Creates ",(0,o.jsx)(n.code,{children:"KeyDownOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"KEY_UP"})," - Creates ",(0,o.jsx)(n.code,{children:"KeyUpOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CLASSIFY"})," - Creates ",(0,o.jsx)(n.code,{children:"ColorFindOptions"})," with classification strategy"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CLICK_UNTIL"})," - Creates ",(0,o.jsx)(n.code,{children:"ClickUntilOptions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"DEFINE"})," - Creates ",(0,o.jsx)(n.code,{children:"DefineRegionOptions"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"common-overrides",children:"Common Overrides"}),"\n",(0,o.jsx)(n.p,{children:"All action configurations support these common overrides:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'Map<String, Object> overrides = new HashMap<>();\noverrides.put("pauseBeforeBegin", 2.0);    // Pause before action starts\noverrides.put("pauseAfterEnd", 1.0);       // Pause after action completes\noverrides.put("illustrate", ActionConfig.Illustrate.YES);  // Force illustration\noverrides.put("logType", LogEventType.ACTION);  // Set log event type\noverrides.put("successCriteria", result -> result.isSuccess());  // Custom success logic\n'})}),"\n",(0,o.jsx)(n.h3,{id:"type-specific-overrides",children:"Type-Specific Overrides"}),"\n",(0,o.jsx)(n.p,{children:"Each action type supports its own specific overrides:"}),"\n",(0,o.jsx)(n.h4,{id:"click-actions",children:"Click Actions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'overrides.put("numberOfClicks", 2);  // Double-click\noverrides.put("mousePressOptions", new MousePressOptions.Builder()\n    .setButton(MouseButton.RIGHT)\n    .build());\n'})}),"\n",(0,o.jsx)(n.h4,{id:"drag-actions",children:"Drag Actions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'overrides.put("delayBetweenMouseDownAndMove", 0.3);\noverrides.put("delayAfterDrag", 0.7);\n'})}),"\n",(0,o.jsx)(n.h4,{id:"type-actions",children:"Type Actions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'overrides.put("typeDelay", 0.1);\noverrides.put("modifiers", "CTRL+SHIFT");\n'})}),"\n",(0,o.jsx)(n.h2,{id:"actionchainbuilder",children:"ActionChainBuilder"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"ActionChainBuilder"})," provides a fluent API for creating complex action sequences. It transforms verbose manual chain construction into readable, declarative code."]}),"\n",(0,o.jsx)(n.h3,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/brobot/docs/core-library/guides/finding-objects/combining-finds",children:"Combining Find Operations"})})," - Learn about nested and confirmed find strategies"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/getting-started/ai-brobot-project-creation#conditional-action-chains",children:"Conditional Action Chaining"})})," - Advanced conditional execution patterns"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/getting-started/ai-brobot-project-creation",children:"AI Project Creation Guide"})})," - Complete guide with chaining examples"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"benefits-1",children:"Benefits"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Readability"}),": Clear, self-documenting action sequences"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type Safety"}),": Compile-time checking of chain construction"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Flexibility"}),": Easy modification and extension of chains"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Reduced Errors"}),": Eliminates manual list building mistakes"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"basic-usage-1",children:"Basic Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Simple find-and-click chain\nActionChainOptions chain = ActionChainBuilder\n    .of(new PatternFindOptions.Builder().build())\n    .then(new ClickOptions.Builder().build())\n    .build();\n\n// Using action types for clarity\nActionChainOptions chain = ActionChainBuilder\n    .of(ActionInterface.Type.FIND, findOptions)\n    .then(ActionInterface.Type.CLICK, clickOptions)\n    .then(ActionInterface.Type.TYPE, typeOptions)\n    .build();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"chaining-strategies",children:"Chaining Strategies"}),"\n",(0,o.jsx)(n.p,{children:"Action chains support two strategies that control how results flow between actions:"}),"\n",(0,o.jsx)(n.h4,{id:"nested-strategy-default",children:"NESTED Strategy (Default)"}),"\n",(0,o.jsx)(n.p,{children:"Each action searches within the results of the previous action. Perfect for hierarchical searches."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"ActionChainOptions nestedChain = ActionChainBuilder\n    .of(dialogFindOptions)      // Find dialog\n    .then(buttonFindOptions)    // Find button within dialog\n    .then(clickOptions)         // Click the button\n    .nested()  // or .withStrategy(ActionChainOptions.ChainingStrategy.NESTED)\n    .build();\n"})}),"\n",(0,o.jsx)(n.h4,{id:"confirm-strategy",children:"CONFIRM Strategy"}),"\n",(0,o.jsx)(n.p,{children:"Each action validates the results of the previous action. Ideal for eliminating false positives."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"ActionChainOptions confirmChain = ActionChainBuilder\n    .of(patternFindOptions)     // Find by pattern\n    .then(colorFindOptions)     // Confirm by color\n    .then(textFindOptions)      // Confirm by text\n    .confirm()  // or .withStrategy(ActionChainOptions.ChainingStrategy.CONFIRM)\n    .build();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"complex-example-drag-operation",children:"Complex Example: Drag Operation"}),"\n",(0,o.jsx)(n.p,{children:"Here's how the ActionChainBuilder simplifies a complex drag operation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Before: Verbose manual construction\nPatternFindOptions findSource = new PatternFindOptions.Builder().build();\nPatternFindOptions findTarget = new PatternFindOptions.Builder().build();\nMouseMoveOptions moveToSource = new MouseMoveOptions.Builder().build();\nMouseDownOptions mouseDown = new MouseDownOptions.Builder()\n    .setPauseAfterEnd(0.5).build();\nMouseMoveOptions moveToTarget = new MouseMoveOptions.Builder().build();\nMouseUpOptions mouseUp = new MouseUpOptions.Builder()\n    .setPauseAfterEnd(0.5).build();\n\nList<ActionConfig> actions = new ArrayList<>();\nactions.add(findSource);\nactions.add(findTarget);\n// ... etc\n\n// After: Clean, declarative chain\nActionChainOptions dragChain = ActionChainBuilder\n    .of(ActionInterface.Type.FIND, findSourceOptions)      // Find source\n    .then(ActionInterface.Type.FIND, findTargetOptions)    // Find target\n    .then(ActionInterface.Type.MOVE, moveToSourceOptions)  // Move to source\n    .then(ActionInterface.Type.MOUSE_DOWN, mouseDownOptions)\n    .then(ActionInterface.Type.MOVE, moveToTargetOptions)  // Move to target\n    .then(ActionInterface.Type.MOUSE_UP, mouseUpOptions)\n    .withStrategy(ActionChainOptions.ChainingStrategy.NESTED)\n    .pauseAfterEnd(1.0)\n    .build();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"builder-methods",children:"Builder Methods"}),"\n",(0,o.jsx)(n.h4,{id:"chain-construction",children:"Chain Construction"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"of(ActionConfig)"})," - Start chain with initial action"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"of(ActionInterface.Type, ActionConfig)"})," - Start with type and config"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"then(ActionConfig)"})," - Add next action"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"then(ActionInterface.Type, ActionConfig)"})," - Add with type"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"thenAll(ActionConfig...)"})," - Add multiple actions at once"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"withStrategy(ChainingStrategy)"})," - Set chaining strategy"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"nested()"})," - Use NESTED strategy"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"confirm()"})," - Use CONFIRM strategy"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"pauseBeforeBegin(double)"})," - Pause before chain starts"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"pauseAfterEnd(double)"})," - Pause after chain completes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"illustrate(Illustrate)"})," - Set illustration behavior"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"logEventType(LogEventType)"})," - Set logging type"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"static-factory-methods",children:"Static Factory Methods"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"simple(first, second)"})," - Create two-action chain"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"fromList(actions)"})," - Create from action list"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"integration-example",children:"Integration Example"}),"\n",(0,o.jsx)(n.p,{children:"Here's how the factory and builder work together:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Component\npublic class LoginAutomation {\n    \n    @Autowired\n    private ActionConfigFactory factory;\n    \n    @Autowired\n    private ActionChainExecutor executor;\n    \n    public void performLogin(String username, String password) {\n        // Create configurations using factory\n        ActionConfig findUsername = factory.create(ActionInterface.Type.FIND, \n            Map.of("pauseAfterEnd", 0.5));\n        \n        ActionConfig clickUsername = factory.create(ActionInterface.Type.CLICK);\n        \n        ActionConfig typeUsername = factory.create(ActionInterface.Type.TYPE,\n            Map.of("typeDelay", 0.05));\n        \n        ActionConfig findPassword = factory.create(ActionInterface.Type.FIND);\n        \n        ActionConfig clickPassword = factory.create(ActionInterface.Type.CLICK);\n        \n        ActionConfig typePassword = factory.create(ActionInterface.Type.TYPE,\n            Map.of("typeDelay", 0.05, "modifiers", ""));\n        \n        ActionConfig findSubmit = factory.create(ActionInterface.Type.FIND);\n        \n        ActionConfig clickSubmit = factory.create(ActionInterface.Type.CLICK,\n            Map.of("pauseAfterEnd", 2.0));\n        \n        // Build the login sequence\n        ActionChainOptions loginChain = ActionChainBuilder\n            .of(findUsername)\n            .then(clickUsername)\n            .then(typeUsername)\n            .then(findPassword)\n            .then(clickPassword)\n            .then(typePassword)\n            .then(findSubmit)\n            .then(clickSubmit)\n            .withStrategy(ActionChainOptions.ChainingStrategy.NESTED)\n            .illustrate(ActionConfig.Illustrate.YES)\n            .build();\n        \n        // Execute the chain\n        ActionResult result = executor.execute(loginChain, \n            usernameField, username, passwordField, password, submitButton);\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"use-the-factory-for-consistency",children:"Use the Factory for Consistency"}),"\n",(0,o.jsxs)(n.p,{children:["Always use ",(0,o.jsx)(n.code,{children:"ActionConfigFactory"})," instead of manually constructing options:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Good\nActionConfig config = factory.create(ActionInterface.Type.CLICK);\n\n// Avoid\nClickOptions config = new ClickOptions.Builder().build();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"build-readable-chains",children:"Build Readable Chains"}),"\n",(0,o.jsx)(n.p,{children:"Use descriptive variable names and comments for complex chains:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"ActionChainOptions saveDocument = ActionChainBuilder\n    .of(findFileMenu)         // Open File menu\n    .then(findSaveOption)     // Find Save option\n    .then(clickSave)          // Click Save\n    .then(findDialog)         // Wait for save dialog\n    .then(typeFilename)       // Enter filename\n    .then(clickOK)            // Confirm save\n    .nested()\n    .build();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"reuse-common-configurations",children:"Reuse Common Configurations"}),"\n",(0,o.jsx)(n.p,{children:"Create reusable configurations for common patterns:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// Create a reusable double-click configuration\nActionConfig doubleClick = factory.create(ActionInterface.Type.CLICK,\n    Map.of("numberOfClicks", 2, "pauseAfterEnd", 0.5));\n\n// Use it in multiple chains\nActionChainOptions openFile1 = ActionChainBuilder\n    .of(findFile1)\n    .then(doubleClick)\n    .build();\n\nActionChainOptions openFile2 = ActionChainBuilder\n    .of(findFile2)\n    .then(doubleClick)\n    .build();\n'})}),"\n",(0,o.jsx)(n.h3,{id:"handle-chain-results",children:"Handle Chain Results"}),"\n",(0,o.jsx)(n.p,{children:"Always check the results of chain execution:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'ActionResult result = executor.execute(chain, objects);\n\nif (result.isSuccess()) {\n    // Handle success\n    Match lastMatch = result.getLastMatch();\n    processMatch(lastMatch);\n} else {\n    // Handle failure\n    log.error("Chain failed at action: " + result.getFailedActionDescription());\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"ActionConfigFactory"})," and ",(0,o.jsx)(n.code,{children:"ActionChainBuilder"})," patterns significantly improve code quality in Brobot applications by:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Reducing Complexity"}),": Hide configuration details behind simple factory methods"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Improving Readability"}),": Transform complex sequences into declarative chains"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Ensuring Consistency"}),": Centralize configuration logic in one place"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Preventing Errors"}),": Eliminate manual object construction and list building"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Enhancing Maintainability"}),": Make changes in one place affect all usages"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"These patterns follow the principle of making the easy path the correct path, guiding developers toward writing better automation code."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);
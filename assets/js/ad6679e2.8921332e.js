"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3093],{8996:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"no-code-automation/configuration-website/configuration-schema/project-schema","title":"Project Schema","description":"The Project Schema (project-schema.json) defines the overall structure of a Brobot Runner project configuration. This schema represents the \\"what\\" of your automation - the states, transitions, and UI elements that make up your automation environment.","source":"@site/docs/02-no-code-automation/configuration-website/configuration-schema/project-schema.md","sourceDirName":"02-no-code-automation/configuration-website/configuration-schema","slug":"/no-code-automation/configuration-website/configuration-schema/project-schema","permalink":"/brobot/docs/no-code-automation/configuration-website/configuration-schema/project-schema","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/02-no-code-automation/configuration-website/configuration-schema/project-schema.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docSidebar","previous":{"title":"Schema Overview","permalink":"/brobot/docs/no-code-automation/configuration-website/configuration-schema/schema-overview"},"next":{"title":"Automation DSL Schema","permalink":"/brobot/docs/no-code-automation/configuration-website/configuration-schema/automation-dsl-schema"}}');var i=n(74848),r=n(28453);const d={sidebar_position:4},c="Project Schema",o={},a=[{value:"Root Properties",id:"root-properties",level:2},{value:"States",id:"states",level:2}];function h(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"project-schema",children:"Project Schema"})}),"\n",(0,i.jsxs)(t.p,{children:["The Project Schema (",(0,i.jsx)(t.code,{children:"project-schema.json"}),') defines the overall structure of a Brobot Runner project configuration. This schema represents the "what" of your automation - the states, transitions, and UI elements that make up your automation environment.']}),"\n",(0,i.jsx)(t.h2,{id:"root-properties",children:"Root Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Required"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"id"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"Yes"}),(0,i.jsx)(t.td,{children:"Unique identifier for the project"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"Yes"}),(0,i.jsx)(t.td,{children:"Name of the project"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"description"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"Optional description of the project"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"version"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"Version of the project configuration (format: x.y.z)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"created"}),(0,i.jsx)(t.td,{children:"string (date-time)"}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"When the project was created"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"updated"}),(0,i.jsx)(t.td,{children:"string (date-time)"}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"When the project was last updated"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"states"}),(0,i.jsx)(t.td,{children:"array"}),(0,i.jsx)(t.td,{children:"Yes"}),(0,i.jsx)(t.td,{children:"States defined in the project"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"stateTransitions"}),(0,i.jsx)(t.td,{children:"array"}),(0,i.jsx)(t.td,{children:"Yes"}),(0,i.jsx)(t.td,{children:"Transitions between states"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"automation"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"Automation configuration"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"configuration"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"Project-wide configuration settings"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"states",children:"States"}),"\n",(0,i.jsx)(t.p,{children:"States represent distinct screens or conditions in your application. Each state contains visual elements that can be detected during automation."}),"\n",(0,i.jsx)(t.p,{children:"Example state definition:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "id": 1,\n  "name": "LoginScreen",\n  "stateText": ["Welcome", "Login"],\n  "blocking": true,\n  "canHide": [2, 3],\n  "pathScore": 1,\n  "baseProbabilityExists": 100,\n  "stateImages": [\n    {\n      "id": 1,\n      "name": "LoginButton",\n      "patterns": [\n        {\n          "name": "blueLoginBtn",\n          "imgPath": "images/login_blue.png",\n          "fixed": true\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"State Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"id"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"Unique identifier for the state"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"Name of the state"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"stateText"}),(0,i.jsx)(t.td,{children:"array of strings"}),(0,i.jsx)(t.td,{children:"Text associated with this state"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"blocking"}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"If true, this state needs to be acted on before accessing other states"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"canHide"}),(0,i.jsx)(t.td,{children:"array of integers"}),(0,i.jsx)(t.td,{children:"States that this state can hide when it becomes active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"pathScore"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"Larger path scores discourage taking a path with this state"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"baseProbabilityExists"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"Base probability that the state exists (0-100)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"usableArea"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"Region defining the usable area of the state"})]})]})]}),"\n",(0,i.jsxs)(t.p,{children:["GUI Elements",(0,i.jsx)(t.br,{}),"\n","The project schema supports various GUI elements that can be associated with states:",(0,i.jsx)(t.br,{}),"\n","State Images",(0,i.jsx)(t.br,{}),"\n","Images that can be detected in a state:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "id": 5,\n  "name": "SubmitButton",\n  "shared": false,\n  "patterns": [\n    {\n      "name": "blueSubmit",\n      "imgPath": "images/submit_blue.png",\n      "fixed": true,\n      "searchRegions": [\n        {"x": 100, "y": 200, "w": 300, "h": 100}\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Pattern Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"Name of the pattern"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"imgPath"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"Path to the image file"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fixed"}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"If true, this image should always appear in the same location"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"dynamic"}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"If true, this pattern cannot be found using pattern matching"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"searchRegions"}),(0,i.jsx)(t.td,{children:"array"}),(0,i.jsx)(t.td,{children:"Regions to search for this pattern"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fixedRegion"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"Fixed region where this pattern appears"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"targetPosition"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"Target position within the pattern"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"targetOffset"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"Offset for click or drag operations"})]})]})]}),"\n",(0,i.jsxs)(t.p,{children:["State Regions",(0,i.jsx)(t.br,{}),"\n","Regions define rectangular areas within the GUI:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "id": 3,\n  "name": "UsernameField",\n  "searchRegion": {\n    "x": 100,\n    "y": 200,\n    "w": 200,\n    "h": 30\n  }\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["State Locations",(0,i.jsx)(t.br,{}),"\n","Locations define specific points:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "id": 2,\n  "name": "CloseButton",\n  "location": {\n    "x": 800,\n    "y": 50\n  }\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["State Strings",(0,i.jsx)(t.br,{}),"\n","Strings define text that can be entered or detected:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "id": 1,\n  "name": "Username",\n  "string": "admin"\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["State Transitions",(0,i.jsx)(t.br,{}),"\n","State transitions define how to move from one state to another using actions."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "id": 1,\n  "sourceStateId": 1,\n  "stateImageId": 1,\n  "actionDefinition": {\n    "steps": [\n      {\n        "actionOptions": {\n          "action": "CLICK",\n          "clickType": "LEFT"\n        },\n        "objectCollection": {\n          "stateImages": [1]\n        }\n      }\n    ]\n  },\n  "statesToEnter": [2],\n  "statesToExit": [1],\n  "staysVisibleAfterTransition": "FALSE"\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Transition Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"id"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"Unique identifier for the transition"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"sourceStateId"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"The state from which the transition starts"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"stateImageId"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"Optional state image associated with the transition"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"actionDefinition"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"Definition of actions to perform during the transition"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"staysVisibleAfterTransition"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"Whether the source state stays visible after the transition"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"statesToEnter"}),(0,i.jsx)(t.td,{children:"array"}),(0,i.jsx)(t.td,{children:"States to enter after the transition"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"statesToExit"}),(0,i.jsx)(t.td,{children:"array"}),(0,i.jsx)(t.td,{children:"States to exit after the transition"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"score"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"Score for path planning"})]})]})]}),"\n",(0,i.jsxs)(t.p,{children:["Action Definitions and Steps",(0,i.jsx)(t.br,{}),"\n","Action definitions contain sequences of steps that perform GUI operations. Each step combines action options with objects to act upon."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "steps": [\n    {\n      "actionOptions": {\n        "action": "FIND",\n        "find": "FIRST",\n        "similarity": 0.8,\n        "maxWait": 5\n      },\n      "objectCollection": {\n        "stateImages": [5, 6]\n      }\n    },\n    {\n      "actionOptions": {\n        "action": "CLICK"\n      },\n      "objectCollection": {\n        "stateImages": [5]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Action Options",(0,i.jsx)(t.br,{}),"\n","ActionOptions configure how actions are performed. As noted in the design notes, complex actions like DRAG may utilize multiple ActionOptions variables.",(0,i.jsx)(t.br,{}),"\n","Common Action Options"]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Option"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"action"}),(0,i.jsx)(t.td,{children:"enum"}),(0,i.jsx)(t.td,{children:"The action to perform (FIND, CLICK, DRAG, etc.)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"find"}),(0,i.jsx)(t.td,{children:"enum"}),(0,i.jsx)(t.td,{children:"How to find objects (FIRST, BEST, ALL, etc.)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"similarity"}),(0,i.jsx)(t.td,{children:"number"}),(0,i.jsx)(t.td,{children:"Match similarity threshold (0.0-1.0)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxWait"}),(0,i.jsx)(t.td,{children:"number"}),(0,i.jsx)(t.td,{children:"Maximum time to wait in seconds"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"clickType"}),(0,i.jsx)(t.td,{children:"enum"}),(0,i.jsx)(t.td,{children:"Type of click (LEFT, RIGHT, DOUBLE_LEFT, etc.)"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"Configuration\nProject-wide configuration settings:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "minSimilarity": 0.7,\n  "moveMouseDelay": 0.5,\n  "delayBeforeMouseDown": 0.3,\n  "imageDirectory": "images",\n  "logLevel": "INFO",\n  "illustrationEnabled": true\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>c});var s=n(96540);const i={},r=s.createContext(i);function d(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);
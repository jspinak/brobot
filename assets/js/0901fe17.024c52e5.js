"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1864],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(96540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},95025:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"getting-started/quick-start","title":"Quick Start Guide","description":"This guide will help you get started with Brobot 1.1.0 using the new ActionConfig API.","source":"@site/docs/01-getting-started/quick-start.md","sourceDirName":"01-getting-started","slug":"/getting-started/quick-start","permalink":"/brobot/docs/getting-started/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/01-getting-started/quick-start.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Quick Start Guide"},"sidebar":"docSidebar","previous":{"title":"Installation","permalink":"/brobot/docs/getting-started/installation"},"next":{"title":"Pure Actions Quick Start Guide","permalink":"/brobot/docs/getting-started/pure-actions-quickstart"}}');var s=i(74848),o=i(28453);const r={sidebar_position:7,title:"Quick Start Guide"},a="Quick Start Guide",l={},c=[{value:"Installation",id:"installation",level:2},{value:"Your First Brobot Application",id:"your-first-brobot-application",level:2},{value:"Step 1: Define Your State",id:"step-1-define-your-state",level:3},{value:"Step 2: Define Transitions",id:"step-2-define-transitions",level:3},{value:"Step 3: Use Navigation",id:"step-3-use-navigation",level:3},{value:"Why This Approach?",id:"why-this-approach",level:3},{value:"Quick Actions (Without States)",id:"quick-actions-without-states",level:3},{value:"Minimal Complete Example",id:"minimal-complete-example",level:3},{value:"Understanding the New API",id:"understanding-the-new-api",level:2},{value:"1. Type-Safe Configuration",id:"1-type-safe-configuration",level:3},{value:"2. Action Execution Pattern",id:"2-action-execution-pattern",level:3},{value:"3. Common Actions",id:"3-common-actions",level:3},{value:"Finding Images",id:"finding-images",level:4},{value:"Clicking",id:"clicking",level:4},{value:"Typing Text",id:"typing-text",level:4},{value:"Dragging",id:"dragging",level:4},{value:"Next Steps",id:"next-steps",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"Tips for Success",id:"tips-for-success",level:2},{value:"Important: Pausing in Brobot",id:"important-pausing-in-brobot",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"quick-start-guide",children:"Quick Start Guide"})}),"\n",(0,s.jsx)(n.p,{children:"This guide will help you get started with Brobot 1.1.0 using the new ActionConfig API."}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"Add Brobot to your project:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"\x3c!-- Maven --\x3e\n<dependency>\n    <groupId>io.github.jspinak</groupId>\n    <artifactId>brobot</artifactId>\n    <version>1.1.0</version>\n</dependency>\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:"// Gradle\nimplementation 'io.github.jspinak:brobot:1.1.0'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"your-first-brobot-application",children:"Your First Brobot Application"}),"\n",(0,s.jsxs)(n.p,{children:["Brobot uses a ",(0,s.jsx)(n.strong,{children:"model-based approach"})," with States and Transitions. Here's how to build a simple login automation:"]}),"\n",(0,s.jsx)(n.h3,{id:"step-1-define-your-state",children:"Step 1: Define Your State"}),"\n",(0,s.jsx)(n.p,{children:"States organize UI elements that appear together:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import io.github.jspinak.brobot.annotations.State;\nimport io.github.jspinak.brobot.model.state.StateImage;\nimport lombok.Getter;\nimport lombok.extern.slf4j.Slf4j;\n\n@State  // Includes @Component, registers as Brobot state\n@Getter\npublic class LoginState {\n\n    private final StateImage loginButton = new StateImage.Builder().addPatterns("login-button").build();\n    private final StateImage usernameField = new StateImage.Builder().addPatterns("username-field").build();\n    private final StateImage passwordField = new StateImage.Builder().addPatterns("password-field").build();\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-define-transitions",children:"Step 2: Define Transitions"}),"\n",(0,s.jsx)(n.p,{children:"Transitions define how to navigate between states:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import io.github.jspinak.brobot.annotations.*;\nimport io.github.jspinak.brobot.action.Action;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Component;\n\n@Component\n@TransitionSet(state = LoginState.class)\n@RequiredArgsConstructor\npublic class LoginTransitions {\n\n    private final Action action;\n    private final LoginState loginState;\n\n    @IncomingTransition(description = "Verify login screen is visible")\n    public boolean verifyLoginScreen() {\n        return action.find(loginState.getLoginButton()).isSuccess();\n    }\n\n    @OutgoingTransition(activate = {DashboardState.class})\n    public boolean login() {\n        return action.click(loginState.getUsernameField()).isSuccess() &&\n               action.type("user@example.com").isSuccess() &&\n               action.click(loginState.getPasswordField()).isSuccess() &&\n               action.type("password123").isSuccess() &&\n               action.click(loginState.getLoginButton()).isSuccess();\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-3-use-navigation",children:"Step 3: Use Navigation"}),"\n",(0,s.jsx)(n.p,{children:"Now you can navigate automatically:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import io.github.jspinak.brobot.navigation.transition.StateNavigator;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Component;\n\n@Component\n@RequiredArgsConstructor\npublic class LoginAutomation {\n\n    private final StateNavigator navigator;\n\n    public boolean navigateToDashboard() {\n        // Brobot automatically figures out the path and executes transitions!\n        return navigator.openState("Dashboard");\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"That's it!"})," Brobot handles:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Finding the current state"}),"\n",(0,s.jsx)(n.li,{children:"Determining the path to the target state"}),"\n",(0,s.jsx)(n.li,{children:"Executing all necessary transitions"}),"\n",(0,s.jsx)(n.li,{children:"Verifying arrival at each state"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"why-this-approach",children:"Why This Approach?"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Model-Based Benefits:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Separation of Concerns"}),": UI elements (State) separate from logic (Transitions)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Automatic Pathfinding"}),": Navigator finds the shortest path between states"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Reusable"}),": Transitions can be reused in different navigation scenarios"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Testable"}),": Mock transitions for unit testing"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Maintainable"}),": UI changes only affect State definitions"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"quick-actions-without-states",children:"Quick Actions (Without States)"}),"\n",(0,s.jsx)(n.p,{children:"For simple scripts or prototyping, you can use Brobot's Action API directly:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import io.github.jspinak.brobot.action.Action;\nimport io.github.jspinak.brobot.model.state.StateImage;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Component;\n\n@Component\n@RequiredArgsConstructor\npublic class QuickScript {\n\n    private final Action action;\n\n    public void simpleClick() {\n        StateImage button = new StateImage.Builder().addPatterns("submit-button").build();\n        action.click(button);\n    }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Default behavior:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Similarity"}),": 0.7 (70% match required) - from ",(0,s.jsx)(n.code,{children:"Settings.MinSimilarity"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Search Strategy"}),": FIRST (stops at first Pattern's best match \u2265 0.7 similarity)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Search Duration"}),": 3.0 seconds"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Click Type"}),": Single left click"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Search Region"}),": Entire screen"]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{title:"Search Strategy Details",type:"tip",children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Each Pattern returns its BEST match"})," - SikuliX finds the highest correlation for each pattern image"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"FIRST strategy"})," - Stops after finding the first Pattern that has a match \u2265 0.7 (fast, good when Patterns are ordered by priority)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"BEST strategy"})," - Searches ALL Patterns and returns the one with highest similarity across all (slower, most accurate)"]}),"\n"]}),(0,s.jsx)(n.p,{children:"If your StateImage has multiple Patterns, FIRST returns the best match of the first Pattern found. BEST returns the best match across all Patterns."})]}),"\n",(0,s.jsxs)(n.admonition,{title:"When to Use Each Approach",type:"tip",children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Use States & Transitions (Recommended):"})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Production applications"}),"\n",(0,s.jsx)(n.li,{children:"Complex multi-screen workflows"}),"\n",(0,s.jsx)(n.li,{children:"When you need navigation between different UI states"}),"\n",(0,s.jsx)(n.li,{children:"Team projects requiring maintainable code"}),"\n"]}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Use Direct Actions:"})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Quick prototypes or scripts"}),"\n",(0,s.jsx)(n.li,{children:"Single-screen automation"}),"\n",(0,s.jsx)(n.li,{children:"One-off tasks"}),"\n",(0,s.jsx)(n.li,{children:"Learning Brobot basics"}),"\n"]})]}),"\n",(0,s.jsxs)(n.admonition,{title:"Debug Images Not Saved by Default",type:"info",children:[(0,s.jsxs)(n.p,{children:["Brobot does ",(0,s.jsx)(n.strong,{children:"NOT"})," save debug images or action history by default. Enable only when debugging:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-properties",children:"# In application.properties\nbrobot.screenshot.save-history=true\n"})}),(0,s.jsx)(n.p,{children:"Remember to disable after debugging!"})]}),"\n",(0,s.jsx)(n.h3,{id:"minimal-complete-example",children:"Minimal Complete Example"}),"\n",(0,s.jsx)(n.p,{children:"Here's the absolute minimum code needed for a working Brobot application:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import io.github.jspinak.brobot.action.Action;\nimport io.github.jspinak.brobot.model.state.StateImage;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class MinimalBrobot {\n\n    public static void main(String[] args) {\n        var context = SpringApplication.run(MinimalBrobot.class, args);\n        var action = context.getBean(Action.class);\n\n        var button = new StateImage.Builder().addPatterns("button").build();\n        action.click(button);\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"That's all you need!"})," Brobot handles:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Image loading from resources"}),"\n",(0,s.jsx)(n.li,{children:"Screen capture"}),"\n",(0,s.jsx)(n.li,{children:"Pattern matching with 70% similarity"}),"\n",(0,s.jsx)(n.li,{children:"Mouse movement and clicking"}),"\n",(0,s.jsx)(n.li,{children:"Error handling if image not found"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"understanding-the-new-api",children:"Understanding the New API"}),"\n",(0,s.jsx)(n.h3,{id:"1-type-safe-configuration",children:"1. Type-Safe Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Instead of the generic ",(0,s.jsx)(n.code,{children:"ActionOptions"}),", Brobot 1.1.0 uses specific configuration classes:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Find operations\nPatternFindOptions patternFind = new PatternFindOptions.Builder()\n    .setStrategy(PatternFindOptions.Strategy.ALL)\n    .setSimilarity(0.85)\n    .build();\n\n// Click operations (double-click with right button)\n// pauseAfterMouseUp defaults to 0.0 for rapid double-click\nClickOptions doubleClickRight = new ClickOptions.Builder()\n    .setNumberOfClicks(2)\n    .setMousePressOptions(MousePressOptions.builder()\n        .button(MouseButton.RIGHT)\n        .build())\n    .build();\n\n// Or use the shortcut for left double-click\nClickOptions doubleClickLeft = ActionConfigShortcuts.doubleClick();\n\n// Text/OCR operations\nTextFindOptions textFind = new TextFindOptions.Builder()\n    .setMaxMatchRetries(3)\n    .build();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-action-execution-pattern",children:"2. Action Execution Pattern"}),"\n",(0,s.jsx)(n.p,{children:"The new API follows a consistent pattern:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// 1. Create configuration\nActionConfig config = new SomeOptions.Builder().build();\n\n// 2. Create object collection\nObjectCollection objects = new ObjectCollection.Builder()\n    .withImages(images)\n    .build();\n\n// 3. Execute action\nActionResult result = action.perform(config, objects);\n\n// 4. Check results\nif (result.isSuccess()) {\n    // Handle success\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-common-actions",children:"3. Common Actions"}),"\n",(0,s.jsx)(n.h4,{id:"finding-images",children:"Finding Images"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Find with custom similarity and strategy\nPatternFindOptions findOptions = new PatternFindOptions.Builder()\n    .setStrategy(PatternFindOptions.Strategy.BEST)\n    .setSimilarity(0.85)\n    .build();\n"})}),"\n",(0,s.jsx)(n.h4,{id:"clicking",children:"Clicking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Right-click\nClickOptions rightClick = new ClickOptions.Builder()\n    .setMousePressOptions(MousePressOptions.builder()\n        .button(MouseButton.RIGHT)\n        .build())\n    .setPauseAfterEnd(0.5)\n    .build();\n"})}),"\n",(0,s.jsx)(n.h4,{id:"typing-text",children:"Typing Text"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"import org.sikuli.script.Key;\n\n// Type with custom delay and modifiers\nTypeOptions typeOptions = new TypeOptions.Builder()\n    .setTypeDelay(0.05)  // Delay between keystrokes\n    .setModifiers(Key.CTRL + Key.SHIFT)  // Hold modifier keys\n    .build();\n"})}),"\n",(0,s.jsx)(n.h4,{id:"dragging",children:"Dragging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Drag operation\nDragOptions dragOptions = new DragOptions.Builder()\n    .setDelayBetweenMouseDownAndMove(0.5)\n    .setDelayAfterDrag(0.5)\n    .build();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Explore the Examples"}),": Check out the ",(0,s.jsx)(n.a,{href:"https://github.com/jspinak/brobot/tree/main/examples/LoginAutomationExample.java",children:"LoginAutomationExample"})," for a complete working example"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Read the Migration Guide"}),": If upgrading from Brobot 1.x, see the ",(0,s.jsx)(n.a,{href:"/docs/core-library/guides/migration-guide",children:"Migration Guide"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Learn State Management"}),": Deep dive into ",(0,s.jsx)(n.a,{href:"/brobot/docs/getting-started/states",children:"States"})," and ",(0,s.jsx)(n.a,{href:"/brobot/docs/getting-started/transitions",children:"Transitions"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Advanced Features"}),": Explore ",(0,s.jsx)(n.a,{href:"/docs/core-library/guides/finding-objects/using-color",children:"color-based finding"}),", ",(0,s.jsx)(n.a,{href:"/docs/core-library/guides/finding-objects/movement",children:"motion detection"}),", and ",(0,s.jsx)(n.a,{href:"/docs/core-library/guides/screen-adaptive-regions",children:"screen-adaptive regions"})," for resolution-independent automation"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Documentation"}),": Browse the full documentation at ",(0,s.jsx)(n.a,{href:"https://jspinak.github.io/brobot/",children:"jspinak.github.io/brobot"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),": Find more examples in the ",(0,s.jsx)(n.code,{children:"/examples"})," directory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Community"}),": Join discussions and ask questions on GitHub"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"tips-for-success",children:"Tips for Success"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Start Simple"}),": Begin with basic find and click operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use Type-Safe Builders"}),": Let your IDE guide you with auto-completion"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Model Your Application"}),": Think in terms of states and transitions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Handle Failures"}),": Always check ",(0,s.jsx)(n.code,{children:"ActionResult.isSuccess()"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Enable History"}),": Use ",(0,s.jsx)(n.code,{children:"BrobotSettings.saveHistory = true"})," for debugging"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Avoid Thread.sleep()"}),": Use ",(0,s.jsx)(n.code,{children:"setPauseBeforeBegin()"})," or ",(0,s.jsx)(n.code,{children:"setPauseAfterEnd()"})," in action options instead"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"important-pausing-in-brobot",children:"Important: Pausing in Brobot"}),"\n",(0,s.jsxs)(n.p,{children:["Never use ",(0,s.jsx)(n.code,{children:"Thread.sleep()"})," in Brobot code. Instead, use the built-in pause options:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// \u274c Don't do this:\naction.click(button);\nThread.sleep(1000);  // Bad practice in Brobot\n\n// \u2705 Do this instead:\nClickOptions clickWithPause = new ClickOptions.Builder()\n    .setPauseAfterEnd(1.0)  // 1 second pause after clicking\n    .build();\naction.perform(clickWithPause, button);\n\n// Or for pauses before actions:\nPatternFindOptions findWithPause = new PatternFindOptions.Builder()\n    .setPauseBeforeBegin(0.5)  // 500ms pause before searching\n    .build();\n"})}),"\n",(0,s.jsx)(n.p,{children:"This approach keeps pauses as part of the action configuration, making them mockable, testable, and part of the action history."}),"\n",(0,s.jsx)(n.p,{children:"Happy automating with Brobot 1.1.0!"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
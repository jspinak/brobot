"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2736],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var r=s(96540);const l={},i=r.createContext(l);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},70990:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"integrations/mcp-server/troubleshooting","title":"Troubleshooting Guide","description":"Common issues and solutions when using the Brobot MCP Server.","source":"@site/docs/06-integrations/mcp-server/troubleshooting.md","sourceDirName":"06-integrations/mcp-server","slug":"/integrations/mcp-server/troubleshooting","permalink":"/brobot/docs/integrations/mcp-server/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/06-integrations/mcp-server/troubleshooting.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docSidebar","previous":{"title":"AI Integration Examples","permalink":"/brobot/docs/integrations/mcp-server/examples"},"next":{"title":"Integrations Overview","permalink":"/brobot/docs/integrations/overview"}}');var l=s(74848),i=s(28453);const o={sidebar_position:6},t="Troubleshooting Guide",c={},d=[{value:"Server Issues",id:"server-issues",level:2},{value:"Server Won&#39;t Start",id:"server-wont-start",level:3},{value:"Symptom",id:"symptom",level:4},{value:"Solutions",id:"solutions",level:4},{value:"Port Already in Use",id:"port-already-in-use",level:3},{value:"Symptom",id:"symptom-1",level:4},{value:"Solutions",id:"solutions-1",level:4},{value:"Import Errors",id:"import-errors",level:3},{value:"Symptom",id:"symptom-2",level:4},{value:"Solution",id:"solution",level:4},{value:"CLI Integration Issues",id:"cli-integration-issues",level:2},{value:"CLI JAR Not Found",id:"cli-jar-not-found",level:3},{value:"Symptom",id:"symptom-3",level:4},{value:"Solutions",id:"solutions-2",level:4},{value:"Java Not Found",id:"java-not-found",level:3},{value:"Symptom",id:"symptom-4",level:4},{value:"Solutions",id:"solutions-3",level:4},{value:"CLI Timeout Errors",id:"cli-timeout-errors",level:3},{value:"Symptom",id:"symptom-5",level:4},{value:"Solutions",id:"solutions-4",level:4},{value:"API Issues",id:"api-issues",level:2},{value:"500 Internal Server Error",id:"500-internal-server-error",level:3},{value:"Symptom",id:"symptom-6",level:4},{value:"Solutions",id:"solutions-5",level:4},{value:"Pattern Not Found",id:"pattern-not-found",level:3},{value:"Symptom",id:"symptom-7",level:4},{value:"Solutions",id:"solutions-6",level:4},{value:"State Not Detected",id:"state-not-detected",level:3},{value:"Symptom",id:"symptom-8",level:4},{value:"Solutions",id:"solutions-7",level:4},{value:"Client Issues",id:"client-issues",level:2},{value:"Connection Refused",id:"connection-refused",level:3},{value:"Symptom",id:"symptom-9",level:4},{value:"Solutions",id:"solutions-8",level:4},{value:"Timeout Errors",id:"timeout-errors",level:3},{value:"Symptom",id:"symptom-10",level:4},{value:"Solutions",id:"solutions-9",level:4},{value:"Performance Issues",id:"performance-issues",level:2},{value:"Slow Pattern Matching",id:"slow-pattern-matching",level:3},{value:"Solutions",id:"solutions-10",level:4},{value:"High Memory Usage",id:"high-memory-usage",level:3},{value:"Solutions",id:"solutions-11",level:4},{value:"Docker Issues",id:"docker-issues",level:2},{value:"Container Can&#39;t Access Display",id:"container-cant-access-display",level:3},{value:"Symptom",id:"symptom-11",level:4},{value:"Solutions",id:"solutions-12",level:4},{value:"Common Error Messages",id:"common-error-messages",level:2},{value:"&quot;No module named &#39;cv2&#39;&quot;",id:"no-module-named-cv2",level:3},{value:"&quot;Failed to validate Brobot CLI&quot;",id:"failed-to-validate-brobot-cli",level:3},{value:"&quot;Invalid JSON response from CLI&quot;",id:"invalid-json-response-from-cli",level:3},{value:"Debug Techniques",id:"debug-techniques",level:2},{value:"Enable Verbose Logging",id:"enable-verbose-logging",level:3},{value:"Save Debug Information",id:"save-debug-information",level:3},{value:"Monitor System Resources",id:"monitor-system-resources",level:3},{value:"Getting Help",id:"getting-help",level:2},{value:"FAQ",id:"faq",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"troubleshooting-guide",children:"Troubleshooting Guide"})}),"\n",(0,l.jsx)(n.p,{children:"Common issues and solutions when using the Brobot MCP Server."}),"\n",(0,l.jsx)(n.h2,{id:"server-issues",children:"Server Issues"}),"\n",(0,l.jsx)(n.h3,{id:"server-wont-start",children:"Server Won't Start"}),"\n",(0,l.jsx)(n.h4,{id:"symptom",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"$ python -m mcp_server.main\nModuleNotFoundError: No module named 'mcp_server'\n"})}),"\n",(0,l.jsx)(n.h4,{id:"solutions",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check Python version"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"python --version  # Should be 3.8 or higher\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Install in development mode"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pip install -e .\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Verify installation"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pip list | grep brobot\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check virtual environment"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Ensure you're in the correct venv\nwhich python\n# Should show your venv path\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"port-already-in-use",children:"Port Already in Use"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-1",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"ERROR:    [Errno 48] Address already in use\n"})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-1",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Find process using port"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Linux/Mac\nlsof -i :8000\n\n# Windows\nnetstat -ano | findstr :8000\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Kill the process"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Linux/Mac\nkill -9 <PID>\n\n# Windows\ntaskkill /PID <PID> /F\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Use different port"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"MCP_PORT=8080 python -m mcp_server.main\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"import-errors",children:"Import Errors"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-2",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"ImportError: cannot import name 'BaseSettings' from 'pydantic'\n"})}),"\n",(0,l.jsx)(n.h4,{id:"solution",children:"Solution"}),"\n",(0,l.jsx)(n.p,{children:"Install correct Pydantic version:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pip install pydantic-settings\n"})}),"\n",(0,l.jsx)(n.h2,{id:"cli-integration-issues",children:"CLI Integration Issues"}),"\n",(0,l.jsx)(n.h3,{id:"cli-jar-not-found",children:"CLI JAR Not Found"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-3",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"FileNotFoundError: Brobot CLI JAR not found at: brobot-cli.jar\n"})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-2",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Build the CLI"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cd brobot-cli\ngradle shadowJar\n# or\n./gradlew shadowJar\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check JAR location"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"ls brobot-cli/build/libs/\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Update configuration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"BROBOT_CLI_JAR=/absolute/path/to/brobot-cli.jar\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"java-not-found",children:"Java Not Found"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-4",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"subprocess.CalledProcessError: Command '['java', '-jar', ...]' returned non-zero exit status 127\n"})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-3",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Install Java"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Ubuntu/Debian\nsudo apt install openjdk-11-jdk\n\n# macOS\nbrew install openjdk@11\n\n# Windows\nwinget install Microsoft.OpenJDK.11\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check Java installation"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"java -version\njavac -version\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Set JAVA_HOME"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export JAVA_HOME=$(/usr/libexec/java_home)  # macOS\nexport JAVA_HOME=/usr/lib/jvm/java-11-openjdk  # Linux\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"cli-timeout-errors",children:"CLI Timeout Errors"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-5",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"BrobotCLIError: Command timed out after 30 seconds\n"})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-4",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Increase timeout"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"CLI_TIMEOUT=60.0\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check system performance"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Monitor CPU/memory during execution\ntop  # or htop\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Optimize Brobot configuration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"BROBOT_SEARCH_TIMEOUT=10.0\nBROBOT_MIN_SIMILARITY=0.7  # Lower threshold\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"api-issues",children:"API Issues"}),"\n",(0,l.jsx)(n.h3,{id:"500-internal-server-error",children:"500 Internal Server Error"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-6",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "detail": "Internal server error"\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-5",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check server logs"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Enable debug logging\nMCP_LOG_LEVEL=debug python -m mcp_server.main\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Test in mock mode"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"USE_MOCK_DATA=true\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Validate CLI directly"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"java -jar brobot-cli.jar get-state-structure\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pattern-not-found",children:"Pattern Not Found"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-7",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "success": false,\n  "error": "Pattern not found: button.png"\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-6",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Verify pattern exists"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"ls patterns/  # Check your pattern directory\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Lower confidence threshold"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'client.click("button.png", confidence=0.7)\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Use larger search region"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'# Future API feature\nclient.click("button.png", region=Region(0, 0, 800, 600))\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Save screenshot for debugging"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'obs = client.get_observation()\nobs.save_screenshot("debug.png")\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"state-not-detected",children:"State Not Detected"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-8",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "active_states": [],\n  "screenshot": "..."\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-7",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check state configuration"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Verify state images exist"}),"\n",(0,l.jsx)(n.li,{children:"Ensure patterns are up-to-date"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Adjust detection parameters"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"BROBOT_MIN_SIMILARITY=0.75\nBROBOT_STATE_TIMEOUT=15.0\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Debug state detection"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'# Get detailed state info\nstructure = client.get_state_structure()\nfor state in structure.states:\n    print(f"{state.name}: {state.images}")\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"client-issues",children:"Client Issues"}),"\n",(0,l.jsx)(n.h3,{id:"connection-refused",children:"Connection Refused"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-9",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"BrobotConnectionError: Failed to connect to server at http://localhost:8000\n"})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-8",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Verify server is running"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8000/health\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check firewall"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Linux\nsudo ufw status\n\n# Windows\nnetsh advfirewall show allprofiles\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Use correct URL"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'client = BrobotClient("http://127.0.0.1:8000")  # Try IP instead\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"timeout-errors",children:"Timeout Errors"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-10",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"BrobotTimeoutError: Request timed out after 30s\n"})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-9",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Increase client timeout"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"client = BrobotClient(timeout=60.0)\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Use async client"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'async with AsyncBrobotClient() as client:\n    result = await client.click("button.png")\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check network latency"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"ping localhost\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,l.jsx)(n.h3,{id:"slow-pattern-matching",children:"Slow Pattern Matching"}),"\n",(0,l.jsx)(n.h4,{id:"solutions-10",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Optimize image patterns"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use smaller images"}),"\n",(0,l.jsx)(n.li,{children:"Remove unnecessary details"}),"\n",(0,l.jsx)(n.li,{children:"Use distinctive features"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Cache patterns"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"PATTERN_CACHE_ENABLED=true\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Limit search area"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'# Search specific region only\nclient.click("button.png", region=Region(100, 100, 200, 200))\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"high-memory-usage",children:"High Memory Usage"}),"\n",(0,l.jsx)(n.h4,{id:"solutions-11",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Limit worker processes"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"WORKERS=2  # Instead of 4\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Enable garbage collection"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"GC_THRESHOLD=70\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Reduce cache size"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"CACHE_MAX_SIZE=50MB\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"docker-issues",children:"Docker Issues"}),"\n",(0,l.jsx)(n.h3,{id:"container-cant-access-display",children:"Container Can't Access Display"}),"\n",(0,l.jsx)(n.h4,{id:"symptom-11",children:"Symptom"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"Error: Cannot open display\n"})}),"\n",(0,l.jsx)(n.h4,{id:"solutions-12",children:"Solutions"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Linux: Share X11 socket"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"docker run -e DISPLAY=$DISPLAY \\\n  -v /tmp/.X11-unix:/tmp/.X11-unix \\\n  brobot-mcp-server\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"macOS: Use XQuartz"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Install XQuartz\nbrew install --cask xquartz\n\n# Allow connections\nxhost +localhost\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Windows: Use X server"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Install VcXsrv or similar"}),"\n",(0,l.jsx)(n.li,{children:"Configure display forwarding"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"common-error-messages",children:"Common Error Messages"}),"\n",(0,l.jsx)(n.h3,{id:"no-module-named-cv2",children:"\"No module named 'cv2'\""}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Solution"}),": Install OpenCV"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pip install opencv-python\n"})}),"\n",(0,l.jsx)(n.h3,{id:"failed-to-validate-brobot-cli",children:'"Failed to validate Brobot CLI"'}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Solution"}),": Test CLI manually"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"java -jar brobot-cli.jar --version\n"})}),"\n",(0,l.jsx)(n.h3,{id:"invalid-json-response-from-cli",children:'"Invalid JSON response from CLI"'}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Solution"}),": Check CLI output format"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"java -jar brobot-cli.jar get-state-structure | jq .\n"})}),"\n",(0,l.jsx)(n.h2,{id:"debug-techniques",children:"Debug Techniques"}),"\n",(0,l.jsx)(n.h3,{id:"enable-verbose-logging",children:"Enable Verbose Logging"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"import logging\nlogging.basicConfig(level=logging.DEBUG)\n\n# Now client will show detailed logs\nclient = BrobotClient()\n"})}),"\n",(0,l.jsx)(n.h3,{id:"save-debug-information",children:"Save Debug Information"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'def debug_automation():\n    try:\n        result = client.click("button.png")\n    except Exception as e:\n        # Save debug info\n        obs = client.get_observation()\n        obs.save_screenshot("error_screenshot.png")\n        \n        with open("debug_log.json", "w") as f:\n            json.dump({\n                "error": str(e),\n                "active_states": [s.name for s in obs.active_states],\n                "timestamp": datetime.now().isoformat()\n            }, f, indent=2)\n        \n        raise\n'})}),"\n",(0,l.jsx)(n.h3,{id:"monitor-system-resources",children:"Monitor System Resources"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Watch resource usage during automation\nwatch -n 1 'ps aux | grep -E \"(java|python)\" | grep -v grep'\n"})}),"\n",(0,l.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,l.jsx)(n.p,{children:"If these solutions don't resolve your issue:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Search existing issues"}),": ",(0,l.jsx)(n.a,{href:"https://github.com/jspinak/brobot-mcp-server/issues",children:"GitHub Issues"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Create detailed bug report"})," with:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Error messages"}),"\n",(0,l.jsx)(n.li,{children:"System information"}),"\n",(0,l.jsx)(n.li,{children:"Configuration files"}),"\n",(0,l.jsx)(n.li,{children:"Steps to reproduce"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Join Discord"}),": Get real-time help from the community"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Check logs"}),": Always include relevant log output"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Q: Can I run MCP server on a headless system?"}),"\nA: Yes, use a virtual display like Xvfb:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"xvfb-run -a python -m mcp_server.main\n"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Q: How do I update image patterns?"}),"\nA: Place new images in your patterns directory and restart the server."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Q: Can multiple clients connect simultaneously?"}),"\nA: Yes, the server handles multiple connections, but actions are serialized."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Q: Is Windows support available?"}),"\nA: Yes, but some features may require additional configuration."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Q: How do I contribute fixes?"}),"\nA: Fork the repository, make changes, and submit a pull request!"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);
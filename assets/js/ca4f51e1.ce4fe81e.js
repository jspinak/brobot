"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4573],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var a=n(96540);const o={},s=a.createContext(o);function r(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(s.Provider,{value:t},e.children)}},96331:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"tutorial-mrdoob/states","title":"States","description":"Now we can define our states. Each state will have a state name and one image. After creating the","source":"@site/versioned_docs/version-1.0.6/tutorial-mrdoob/states.md","sourceDirName":"tutorial-mrdoob","slug":"/tutorial-mrdoob/states","permalink":"/brobot/docs/1.0.6/tutorial-mrdoob/states","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/versioned_docs/version-1.0.6/tutorial-mrdoob/states.md","tags":[],"version":"1.0.6","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docSidebar","previous":{"title":"State Images","permalink":"/brobot/docs/1.0.6/tutorial-mrdoob/images"},"next":{"title":"Transitions","permalink":"/brobot/docs/1.0.6/tutorial-mrdoob/transitions"}}');var o=n(74848),s=n(28453);const r={sidebar_position:4},i="States",c={},d=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"states",children:"States"})}),"\n",(0,o.jsx)(t.p,{children:"Now we can define our states. Each state will have a state name and one image. After creating the\nstate, we save it with Brobot so that Brobot knows it is part of our model and can manage it for us."}),"\n",(0,o.jsx)(t.p,{children:"Here are our 3 state classes:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'@Component\n@Getter\npublic class Homepage {\n\n    private StateImage harmony = new StateImage.Builder()\n            .addPattern("harmonyIcon")\n            .build();\n\n    private State state = new State.Builder("homepage")\n            .withImages(harmony)\n            .build();\n\n    public Homepage(AllStatesInProjectService stateService) {\n        stateService.save(state);\n    }\n}\n'})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'@Component\n@Getter\npublic class Harmony {\n\n    private StateImage about = new StateImage.Builder()\n            .addPattern("aboutButton")\n            .build();\n\n    private State state = new State.Builder("harmony")\n            .withImages(about)\n            .build();\n\n    public Harmony(AllStatesInProjectService stateService) {\n        stateService.save(state);\n    }\n}\n'})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'@Component\n@Getter\npublic class About {\n\n    private StateImage aboutText = new StateImage.Builder()\n            .addPattern("aboutText")\n            .build();\n\n    private State state = new State.Builder("about")\n            .withImages(aboutText)\n            .build();\n\n    public About(AllStatesInProjectService stateService) {\n        stateService.save(state);\n    }\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);
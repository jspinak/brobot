"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8667],{20089:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"core-library/architecture/actionresult-architecture","title":"ActionResult Architecture","description":"Overview","source":"@site/docs/03-core-library/architecture/actionresult-architecture.md","sourceDirName":"03-core-library/architecture","slug":"/core-library/architecture/actionresult-architecture","permalink":"/brobot/docs/core-library/architecture/actionresult-architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/architecture/actionresult-architecture.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docSidebar","previous":{"title":"Results","permalink":"/brobot/docs/core-library/tutorials/tutorial-mrdoob/results"},"next":{"title":"Initial State Handling in Brobot Framework","permalink":"/brobot/docs/core-library/architecture/initial-state-handling"}}');var s=i(74848),r=i(28453);const l={sidebar_position:4},c="ActionResult Architecture",a={},o=[{value:"Overview",id:"overview",level:2},{value:"Architecture Evolution",id:"architecture-evolution",level:2},{value:"Legacy Architecture (v1.x)",id:"legacy-architecture-v1x",level:3},{value:"Component-Based Architecture (v2.0)",id:"component-based-architecture-v20",level:3},{value:"Core Components",id:"core-components",level:2},{value:"1. MatchCollection",id:"1-matchcollection",level:3},{value:"2. TimingData",id:"2-timingdata",level:3},{value:"3. TextExtractionResult",id:"3-textextractionresult",level:3},{value:"4. StateTracker",id:"4-statetracker",level:3},{value:"5. RegionManager",id:"5-regionmanager",level:3},{value:"6. MovementTracker",id:"6-movementtracker",level:3},{value:"7. ActionAnalysis",id:"7-actionanalysis",level:3},{value:"8. ExecutionHistory",id:"8-executionhistory",level:3},{value:"Support Components",id:"support-components",level:2},{value:"MatchStatistics",id:"matchstatistics",level:3},{value:"MatchFilter",id:"matchfilter",level:3},{value:"ActionResultBuilder",id:"actionresultbuilder",level:3},{value:"Design Patterns",id:"design-patterns",level:2},{value:"1. Facade Pattern",id:"1-facade-pattern",level:3},{value:"2. Delegation Pattern",id:"2-delegation-pattern",level:3},{value:"3. Builder Pattern",id:"3-builder-pattern",level:3},{value:"4. Strategy Pattern",id:"4-strategy-pattern",level:3},{value:"5. Repository Pattern",id:"5-repository-pattern",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"With Action Classes",id:"with-action-classes",level:3},{value:"With Logging System",id:"with-logging-system",level:3},{value:"With Testing Framework",id:"with-testing-framework",level:3},{value:"Performance Characteristics",id:"performance-characteristics",level:2},{value:"Memory Efficiency",id:"memory-efficiency",level:3},{value:"Computational Efficiency",id:"computational-efficiency",level:3},{value:"Garbage Collection",id:"garbage-collection",level:3},{value:"Extension Points",id:"extension-points",level:2},{value:"Custom Analysis Types",id:"custom-analysis-types",level:3},{value:"Custom Sorting Strategies",id:"custom-sorting-strategies",level:3},{value:"Custom Statistics",id:"custom-statistics",level:3},{value:"Migration Guide",id:"migration-guide",level:2},{value:"For API Consumers",id:"for-api-consumers",level:3},{value:"For Action Implementers",id:"for-action-implementers",level:3},{value:"For Framework Extenders",id:"for-framework-extenders",level:3},{value:"Testing Strategy",id:"testing-strategy",level:2},{value:"Component Unit Testing",id:"component-unit-testing",level:3},{value:"Integration Testing",id:"integration-testing",level:3},{value:"Performance Testing",id:"performance-testing",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Input Validation",id:"input-validation",level:3},{value:"Data Isolation",id:"data-isolation",level:3},{value:"Serialization Safety",id:"serialization-safety",level:3},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"Planned Improvements",id:"planned-improvements",level:3},{value:"Potential Optimizations",id:"potential-optimizations",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Do&#39;s",id:"dos",level:3},{value:"Don&#39;ts",id:"donts",level:3},{value:"Component Reference",id:"component-reference",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"actionresult-architecture",children:"ActionResult Architecture"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"ActionResult serves as the universal return type for all actions in the Brobot framework, encapsulating comprehensive information generated during action execution. Version 2.0 introduces a component-based architecture that transforms the original 1113-line monolithic class into a well-structured system of focused, single-responsibility components."}),"\n",(0,s.jsx)(n.h2,{id:"architecture-evolution",children:"Architecture Evolution"}),"\n",(0,s.jsx)(n.h3,{id:"legacy-architecture-v1x",children:"Legacy Architecture (v1.x)"}),"\n",(0,s.jsx)(n.p,{children:"The original ActionResult was a monolithic class handling 30+ responsibilities:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Match collection management"}),"\n",(0,s.jsx)(n.li,{children:"Text extraction and aggregation"}),"\n",(0,s.jsx)(n.li,{children:"Timing and duration tracking"}),"\n",(0,s.jsx)(n.li,{children:"Scene analysis data"}),"\n",(0,s.jsx)(n.li,{children:"Region definitions"}),"\n",(0,s.jsx)(n.li,{children:"Movement tracking"}),"\n",(0,s.jsx)(n.li,{children:"Execution history"}),"\n",(0,s.jsx)(n.li,{children:"State management"}),"\n",(0,s.jsx)(n.li,{children:"Logging and metrics"}),"\n",(0,s.jsx)(n.li,{children:"Sorting and filtering operations"}),"\n",(0,s.jsx)(n.li,{children:"Statistical calculations"}),"\n",(0,s.jsx)(n.li,{children:"Serialization concerns"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"component-based-architecture-v20",children:"Component-Based Architecture (v2.0)"}),"\n",(0,s.jsx)(n.p,{children:"The refactored architecture delegates responsibilities to specialized components while maintaining complete backward compatibility through a facade pattern."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                         ActionResult                             \u2502\n\u2502                          (Facade)                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Core Fields:                                                    \u2502\n\u2502  - actionDescription: String                                     \u2502\n\u2502  - success: boolean                                              \u2502\n\u2502  - actionConfig: ActionConfig                                    \u2502\n\u2502  - outputText: String                                           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Component Delegates:                                            \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                    \u2502\n\u2502  \u2502 MatchCollection   \u2502  \u2502 TimingData       \u2502                    \u2502\n\u2502  \u2502 - matches         \u2502  \u2502 - startTime      \u2502                    \u2502\n\u2502  \u2502 - sorting         \u2502  \u2502 - endTime        \u2502                    \u2502\n\u2502  \u2502 - filtering       \u2502  \u2502 - duration       \u2502                    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                    \u2502\n\u2502  \u2502TextExtractionResult\u2502 \u2502 StateTracker     \u2502                    \u2502\n\u2502  \u2502 - accumulated     \u2502  \u2502 - activeStates   \u2502                    \u2502\n\u2502  \u2502 - selected        \u2502  \u2502 - stateMatches   \u2502                    \u2502\n\u2502  \u2502 - matchText       \u2502  \u2502 - activations    \u2502                    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                    \u2502\n\u2502  \u2502 RegionManager     \u2502  \u2502 MovementTracker  \u2502                    \u2502\n\u2502  \u2502 - definedRegions  \u2502  \u2502 - movements      \u2502                    \u2502\n\u2502  \u2502 - namedRegions    \u2502  \u2502 - distances      \u2502                    \u2502\n\u2502  \u2502 - unions          \u2502  \u2502 - paths          \u2502                    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                    \u2502\n\u2502  \u2502 ActionAnalysis    \u2502  \u2502ExecutionHistory  \u2502                    \u2502\n\u2502  \u2502 - sceneAnalyses   \u2502  \u2502 - records        \u2502                    \u2502\n\u2502  \u2502 - masks           \u2502  \u2502 - lifecycle      \u2502                    \u2502\n\u2502  \u2502 - customAnalysis  \u2502  \u2502 - timeline       \u2502                    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,s.jsx)(n.h3,{id:"1-matchcollection",children:"1. MatchCollection"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Responsibility"}),": Manages all match-related operations"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class MatchCollection {\n    private List<Match> matches;\n    private List<Match> initialMatches;\n    private int maxMatches;\n    \n    // Key operations\n    public void add(Match... matches);\n    public void sort(SortStrategy strategy);\n    public Optional<Match> getBest();\n    public MatchCollection filter(Predicate<Match> predicate);\n    public MatchStatistics getStatistics();\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multiple sorting strategies (score, size, distance)"}),"\n",(0,s.jsx)(n.li,{children:"Flexible filtering with predicates"}),"\n",(0,s.jsx)(n.li,{children:"Statistical analysis delegation"}),"\n",(0,s.jsx)(n.li,{children:"Set operations (minus, intersection)"}),"\n",(0,s.jsx)(n.li,{children:"Automatic max match enforcement"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-timingdata",children:"2. TimingData"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Responsibility"}),": Handles all timing and duration tracking"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class TimingData {\n    private LocalDateTime startTime;\n    private LocalDateTime endTime;\n    private Duration totalDuration;\n    private List<TimeSegment> segments;\n    \n    // Key operations\n    public void start();\n    public void stop();\n    public Duration getElapsed();\n    public void addSegment(String name, Duration duration);\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatic timing calculation"}),"\n",(0,s.jsx)(n.li,{children:"Phase timing support"}),"\n",(0,s.jsx)(n.li,{children:"Overhead calculation"}),"\n",(0,s.jsx)(n.li,{children:"Human-readable formatting"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-textextractionresult",children:"3. TextExtractionResult"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Responsibility"}),": Manages text extraction and OCR results"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class TextExtractionResult {\n    private Text accumulatedText;\n    private String selectedText;\n    private Map<Match, String> matchTextMap;\n    \n    // Key operations\n    public void addText(String text);\n    public void addMatchText(Match match, String text);\n    public String getCombinedText();\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Accumulated text tracking"}),"\n",(0,s.jsx)(n.li,{children:"Match-specific text mapping"}),"\n",(0,s.jsx)(n.li,{children:"Selected text management"}),"\n",(0,s.jsx)(n.li,{children:"Multiple text source merging"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"4-statetracker",children:"4. StateTracker"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Responsibility"}),": Tracks state information during execution"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class StateTracker {\n    private Set<String> activeStates;\n    private Map<String, List<Match>> stateMatches;\n    private Map<String, Integer> stateActivationCounts;\n    \n    // Key operations\n    public void recordActiveState(String stateName);\n    public void recordStateMatch(String stateName, Match match);\n    public Optional<String> getMostActiveState();\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Active state detection"}),"\n",(0,s.jsx)(n.li,{children:"State-match associations"}),"\n",(0,s.jsx)(n.li,{children:"Activation frequency tracking"}),"\n",(0,s.jsx)(n.li,{children:"State activity analysis"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"5-regionmanager",children:"5. RegionManager"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Responsibility"}),": Manages region definitions and operations"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class RegionManager {\n    private List<Region> definedRegions;\n    private Map<String, Region> namedRegions;\n    \n    // Key operations\n    public void defineRegion(Region region);\n    public void defineNamedRegion(String name, Region region);\n    public Optional<Region> getUnion();\n    public Optional<Region> getIntersection();\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Anonymous and named regions"}),"\n",(0,s.jsx)(n.li,{children:"Union/intersection calculations"}),"\n",(0,s.jsx)(n.li,{children:"Area-based sorting"}),"\n",(0,s.jsx)(n.li,{children:"Primary region access"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"6-movementtracker",children:"6. MovementTracker"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Responsibility"}),": Tracks drag and movement operations"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class MovementTracker {\n    private List<Movement> movements;\n    \n    // Key operations\n    public void recordMovement(Movement movement);\n    public double getTotalDistance();\n    public boolean isClosedPath(double tolerance);\n    public Optional<Region> getBoundingBox();\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Movement sequence tracking"}),"\n",(0,s.jsx)(n.li,{children:"Distance calculations"}),"\n",(0,s.jsx)(n.li,{children:"Path analysis (closed/open)"}),"\n",(0,s.jsx)(n.li,{children:"Bounding box computation"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"7-actionanalysis",children:"7. ActionAnalysis"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Responsibility"}),": Manages analysis data and results"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class ActionAnalysis {\n    private SceneAnalyses sceneAnalyses;\n    private Mat mask;\n    private Map<String, Object> customAnalysis;\n    \n    // Key operations\n    public void addSceneAnalysis(SceneAnalysis analysis);\n    public void addCustomAnalysis(String key, Object data);\n    public <T> Optional<T> getCustomAnalysis(String key, Class<T> type);\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Scene analysis aggregation"}),"\n",(0,s.jsx)(n.li,{children:"Binary mask management"}),"\n",(0,s.jsx)(n.li,{children:"Custom analysis storage"}),"\n",(0,s.jsx)(n.li,{children:"Type-safe retrieval"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"8-executionhistory",children:"8. ExecutionHistory"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Responsibility"}),": Tracks action execution history"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class ExecutionHistory {\n    private List<ActionRecord> records;\n    private ActionLifecycle lifecycle;\n    \n    // Key operations\n    public void recordStep(ActionRecord record);\n    public List<ActionRecord> getSuccessfulSteps();\n    public double getSuccessRate();\n    public String formatTimeline();\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Features"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Step-by-step recording"}),"\n",(0,s.jsx)(n.li,{children:"Success/failure analysis"}),"\n",(0,s.jsx)(n.li,{children:"Timeline visualization"}),"\n",(0,s.jsx)(n.li,{children:"Duration tracking"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"support-components",children:"Support Components"}),"\n",(0,s.jsx)(n.h3,{id:"matchstatistics",children:"MatchStatistics"}),"\n",(0,s.jsx)(n.p,{children:"Provides statistical analysis of match collections:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Median region/location calculation"}),"\n",(0,s.jsx)(n.li,{children:"Score distribution analysis"}),"\n",(0,s.jsx)(n.li,{children:"Confidence level determination"}),"\n",(0,s.jsx)(n.li,{children:"Density calculations"}),"\n",(0,s.jsx)(n.li,{children:"Bounding box computation"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"matchfilter",children:"MatchFilter"}),"\n",(0,s.jsx)(n.p,{children:"Static utility for filtering operations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Filter by state object/owner"}),"\n",(0,s.jsx)(n.li,{children:"Score-based filtering"}),"\n",(0,s.jsx)(n.li,{children:"Area-based filtering"}),"\n",(0,s.jsx)(n.li,{children:"Distance-based filtering"}),"\n",(0,s.jsx)(n.li,{children:"Duplicate removal"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"actionresultbuilder",children:"ActionResultBuilder"}),"\n",(0,s.jsx)(n.p,{children:"Fluent builder for constructing ActionResult instances:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'ActionResult result = new ActionResultBuilder()\n    .withSuccess(true)\n    .withDescription("Found button")\n    .withMatches(matchList)\n    .withTiming(startTime, endTime)\n    .withActiveState("MainMenu")\n    .build();\n'})}),"\n",(0,s.jsx)(n.h2,{id:"design-patterns",children:"Design Patterns"}),"\n",(0,s.jsx)(n.h3,{id:"1-facade-pattern",children:"1. Facade Pattern"}),"\n",(0,s.jsx)(n.p,{children:"ActionResult acts as a facade, providing a simplified interface to the complex subsystem of components while maintaining backward compatibility."}),"\n",(0,s.jsx)(n.h3,{id:"2-delegation-pattern",children:"2. Delegation Pattern"}),"\n",(0,s.jsx)(n.p,{children:"All operations are delegated to specialized components, keeping ActionResult focused on coordination rather than implementation."}),"\n",(0,s.jsx)(n.h3,{id:"3-builder-pattern",children:"3. Builder Pattern"}),"\n",(0,s.jsx)(n.p,{children:"ActionResultBuilder provides flexible construction with optional parameters and method chaining."}),"\n",(0,s.jsx)(n.h3,{id:"4-strategy-pattern",children:"4. Strategy Pattern"}),"\n",(0,s.jsx)(n.p,{children:"MatchCollection uses strategy pattern for sorting operations with configurable strategies."}),"\n",(0,s.jsx)(n.h3,{id:"5-repository-pattern",children:"5. Repository Pattern"}),"\n",(0,s.jsx)(n.p,{children:"Components like RegionManager and StateTracker act as repositories for their respective domain objects."}),"\n",(0,s.jsx)(n.h2,{id:"integration-points",children:"Integration Points"}),"\n",(0,s.jsx)(n.h3,{id:"with-action-classes",children:"With Action Classes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class Click {\n    public ActionResult execute(ObjectCollection objects) {\n        ActionResult result = new ActionResult(clickOptions);\n        // Populate result using components\n        result.add(foundMatch);\n        result.setSuccess(true);\n        return result;\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"with-logging-system",children:"With Logging System"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Components provide formatted output\nString matchSummary = result.getMatchCollection().getStatistics().format();\nString timingSummary = result.getTimingData().format();\nString stateSummary = result.getStateTracker().format();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"with-testing-framework",children:"With Testing Framework"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Fine-grained assertions on components\nassertThat(result.getMatchCollection().size()).isEqualTo(3);\nassertThat(result.getTimingData().getExecutionTimeMs()).isLessThan(1000);\nassertThat(result.getStateTracker().isStateActive("LoginScreen")).isTrue();\n'})}),"\n",(0,s.jsx)(n.h2,{id:"performance-characteristics",children:"Performance Characteristics"}),"\n",(0,s.jsx)(n.h3,{id:"memory-efficiency",children:"Memory Efficiency"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lazy Initialization"}),": Components created on demand"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Shared References"}),": No unnecessary copying"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bounded Collections"}),": MaxMatches enforcement"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"computational-efficiency",children:"Computational Efficiency"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"O(1) Access"}),": Direct component access"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"O(n log n) Sorting"}),": Efficient match sorting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"O(n) Filtering"}),": Linear filtering operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cached Statistics"}),": Statistics calculated once"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"garbage-collection",children:"Garbage Collection"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reduced Object Graph"}),": Smaller, focused objects"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clear Ownership"}),": Components own their data"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Explicit Cleanup"}),": Clear() methods on components"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"extension-points",children:"Extension Points"}),"\n",(0,s.jsx)(n.h3,{id:"custom-analysis-types",children:"Custom Analysis Types"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Add custom analysis data\nresult.getActionAnalysis().addCustomAnalysis("colorProfile", colorData);\n\n// Retrieve with type safety\nOptional<ColorProfile> profile = result.getActionAnalysis()\n    .getCustomAnalysis("colorProfile", ColorProfile.class);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"custom-sorting-strategies",children:"Custom Sorting Strategies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Extend MatchCollection.SortStrategy\nmatchCollection.sort(SortStrategy.CUSTOM_RELEVANCE);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-statistics",children:"Custom Statistics"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Extend MatchStatistics for domain-specific metrics\npublic class GameMatchStatistics extends MatchStatistics {\n    public double getAverageHealthBarFullness() { ... }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,s.jsx)(n.h3,{id:"for-api-consumers",children:"For API Consumers"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"No changes required!"})," The facade maintains complete backward compatibility:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Old code continues to work\nActionResult result = action.execute();\nresult.add(match);\nresult.sortMatchObjects();\nList<Match> matches = result.getMatchList();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"for-action-implementers",children:"For Action Implementers"}),"\n",(0,s.jsx)(n.p,{children:"Use the builder for cleaner construction:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Old way\nActionResult result = new ActionResult();\nresult.setSuccess(true);\nresult.add(matches);\nresult.setDuration(duration);\n\n// New way (optional)\nActionResult result = ActionResultBuilder.successWith(matches)\n    .withTiming(startTime, endTime)\n    .build();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"for-framework-extenders",children:"For Framework Extenders"}),"\n",(0,s.jsx)(n.p,{children:"Access components directly for advanced operations:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Direct component access\nMatchCollection matches = result.getMatchCollection();\nMatchStatistics stats = matches.getStatistics();\ndouble confidence = stats.getConfidence();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"testing-strategy",children:"Testing Strategy"}),"\n",(0,s.jsx)(n.h3,{id:"component-unit-testing",children:"Component Unit Testing"}),"\n",(0,s.jsx)(n.p,{children:"Each component has focused unit tests:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@Test\nvoid testMatchCollectionSorting() {\n    MatchCollection collection = new MatchCollection();\n    collection.add(match1, match2, match3);\n    collection.sortByScoreDescending();\n    \n    assertThat(collection.getBest()).contains(match3);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"integration-testing",children:"Integration Testing"}),"\n",(0,s.jsx)(n.p,{children:"Test component interactions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@Test\nvoid testActionResultDelegation() {\n    ActionResult result = new ActionResult();\n    result.add(match);\n    \n    // Verify delegation\n    assertThat(result.getMatchCollection().contains(match)).isTrue();\n    assertThat(result.getStateTracker().getActiveStates()).contains(stateName);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"performance-testing",children:"Performance Testing"}),"\n",(0,s.jsx)(n.p,{children:"Verify performance characteristics:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@Benchmark\npublic void benchmarkMatchSorting() {\n    result.sortMatchObjectsDescending();\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"input-validation",children:"Input Validation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Components validate input parameters"}),"\n",(0,s.jsx)(n.li,{children:"Null-safe operations throughout"}),"\n",(0,s.jsx)(n.li,{children:"Bounded collection sizes"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"data-isolation",children:"Data Isolation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Components encapsulate their data"}),"\n",(0,s.jsx)(n.li,{children:"No shared mutable state"}),"\n",(0,s.jsx)(n.li,{children:"Defensive copying where needed"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"serialization-safety",children:"Serialization Safety"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"@JsonIgnore on non-serializable fields"}),"\n",(0,s.jsx)(n.li,{children:"Clean separation of transient data"}),"\n",(0,s.jsx)(n.li,{children:"Controlled exposure of internal state"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,s.jsx)(n.h3,{id:"planned-improvements",children:"Planned Improvements"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Async Support"}),": Concurrent component operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Streaming API"}),": Process large result sets efficiently"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event System"}),": Observable result changes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Metrics Dashboard"}),": Real-time performance visualization"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Plugin Architecture"}),": Dynamic component registration"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"potential-optimizations",children:"Potential Optimizations"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Object Pooling"}),": Reuse component instances"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lazy Loading"}),": Defer expensive calculations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Caching Layer"}),": Cache computed statistics"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Compression"}),": Compress large match collections"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"dos",children:"Do's"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Use components for focused operations"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Leverage builder for complex construction"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Access statistics for analysis"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Clear components when done"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Use appropriate sorting strategies"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"donts",children:"Don'ts"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u274c Don't access component internals directly"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Don't modify collections while iterating"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Don't ignore null checks"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Don't bypass the facade for basic operations"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Don't store references to internal collections"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"component-reference",children:"Component Reference"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Component"}),(0,s.jsx)(n.th,{children:"Lines"}),(0,s.jsx)(n.th,{children:"Responsibility"}),(0,s.jsx)(n.th,{children:"Key Methods"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MatchCollection"}),(0,s.jsx)(n.td,{children:"280"}),(0,s.jsx)(n.td,{children:"Match management"}),(0,s.jsx)(n.td,{children:"add(), sort(), filter(), getBest()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TimingData"}),(0,s.jsx)(n.td,{children:"150"}),(0,s.jsx)(n.td,{children:"Timing tracking"}),(0,s.jsx)(n.td,{children:"start(), stop(), getElapsed()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MatchStatistics"}),(0,s.jsx)(n.td,{children:"200"}),(0,s.jsx)(n.td,{children:"Statistical analysis"}),(0,s.jsx)(n.td,{children:"getMedian(), getConfidence()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TextExtractionResult"}),(0,s.jsx)(n.td,{children:"120"}),(0,s.jsx)(n.td,{children:"Text management"}),(0,s.jsx)(n.td,{children:"addText(), getCombinedText()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"StateTracker"}),(0,s.jsx)(n.td,{children:"160"}),(0,s.jsx)(n.td,{children:"State tracking"}),(0,s.jsx)(n.td,{children:"recordActiveState(), getMostActiveState()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"RegionManager"}),(0,s.jsx)(n.td,{children:"180"}),(0,s.jsx)(n.td,{children:"Region management"}),(0,s.jsx)(n.td,{children:"defineRegion(), getUnion()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MovementTracker"}),(0,s.jsx)(n.td,{children:"140"}),(0,s.jsx)(n.td,{children:"Movement tracking"}),(0,s.jsx)(n.td,{children:"recordMovement(), getTotalDistance()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ActionAnalysis"}),(0,s.jsx)(n.td,{children:"140"}),(0,s.jsx)(n.td,{children:"Analysis data"}),(0,s.jsx)(n.td,{children:"addSceneAnalysis(), addCustomAnalysis()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ActionMetrics"}),(0,s.jsx)(n.td,{children:"200"}),(0,s.jsx)(n.td,{children:"Performance metrics"}),(0,s.jsx)(n.td,{children:"recordExecutionTime(), getEfficiencyScore()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ExecutionHistory"}),(0,s.jsx)(n.td,{children:"180"}),(0,s.jsx)(n.td,{children:"Execution tracking"}),(0,s.jsx)(n.td,{children:"recordStep(), getSuccessRate()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MatchFilter"}),(0,s.jsx)(n.td,{children:"260"}),(0,s.jsx)(n.td,{children:"Filtering utilities"}),(0,s.jsx)(n.td,{children:"byMinScore(), nearLocation()"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ActionResultBuilder"}),(0,s.jsx)(n.td,{children:"400"}),(0,s.jsx)(n.td,{children:"Result construction"}),(0,s.jsx)(n.td,{children:"withMatches(), build()"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"The refactored ActionResult architecture transforms a monolithic class into a well-structured system of focused components. This design provides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Better Maintainability"}),": Each component has a single, clear responsibility"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Enhanced Testability"}),": Smaller units are easier to test in isolation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Improved Extensibility"}),": New features can be added to specific components"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Backward Compatibility"}),": Existing code continues to work unchanged"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Benefits"}),": Lazy initialization and focused operations"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The component-based architecture positions ActionResult for future growth while maintaining the stability and reliability expected by existing consumers."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var t=i(96540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);
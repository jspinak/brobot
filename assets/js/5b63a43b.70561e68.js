"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8671],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(96540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}},62283:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"migration/frameworksettings-to-brobotproperties","title":"Migration from FrameworkSettings to BrobotProperties","description":"Overview","source":"@site/docs/05-migration/frameworksettings-to-brobotproperties.md","sourceDirName":"05-migration","slug":"/migration/frameworksettings-to-brobotproperties","permalink":"/brobot/docs/migration/frameworksettings-to-brobotproperties","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/05-migration/frameworksettings-to-brobotproperties.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Mat Testing Utilities","permalink":"/brobot/docs/testing/mat-testing-utilities"},"next":{"title":"Theoretical Foundations","permalink":"/brobot/docs/category/theoretical-foundations"}}');var o=r(74848),s=r(28453);const i={},c="Migration from FrameworkSettings to BrobotProperties",d={},l=[{value:"Overview",id:"overview",level:2},{value:"Key Changes",id:"key-changes",level:2},{value:"1. Configuration Method",id:"1-configuration-method",level:3},{value:"2. Accessing Configuration in Code",id:"2-accessing-configuration-in-code",level:3},{value:"3. Test Configuration",id:"3-test-configuration",level:3},{value:"Property Mappings",id:"property-mappings",level:2},{value:"Benefits of the Migration",id:"benefits-of-the-migration",level:2},{value:"Common Migration Tasks",id:"common-migration-tasks",level:2},{value:"Converting Static Utility Classes",id:"converting-static-utility-classes",level:3},{value:"Updating Tests",id:"updating-tests",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Issue: Cannot access BrobotProperties in static context",id:"issue-cannot-access-brobotproperties-in-static-context",level:3},{value:"Issue: Properties not being loaded",id:"issue-properties-not-being-loaded",level:3},{value:"Issue: Mock mode not working in tests",id:"issue-mock-mode-not-working-in-tests",level:3},{value:"Summary",id:"summary",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"migration-from-frameworksettings-to-brobotproperties",children:"Migration from FrameworkSettings to BrobotProperties"})}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(n.p,{children:["The static ",(0,o.jsx)(n.code,{children:"FrameworkSettings"})," class has been completely removed in favor of the modern, Spring-based ",(0,o.jsx)(n.code,{children:"BrobotProperties"})," configuration approach. This provides better testability, cleaner code, and proper dependency injection."]}),"\n",(0,o.jsx)(n.h2,{id:"key-changes",children:"Key Changes"}),"\n",(0,o.jsx)(n.h3,{id:"1-configuration-method",children:"1. Configuration Method"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Before (FrameworkSettings):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Static field access\nFrameworkSettings.mock = true;\nFrameworkSettings.moveMouseDelay = 0.5f;\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"After (BrobotProperties):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-properties",children:"# application.properties\nbrobot.core.mock=true\nbrobot.mouse.move-delay=0.5\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-accessing-configuration-in-code",children:"2. Accessing Configuration in Code"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Before:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public class MyClass {\n    public void myMethod() {\n        if (FrameworkSettings.mock) {\n            // mock logic\n        }\n    }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"After:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@Component\npublic class MyClass {\n    @Autowired\n    private BrobotProperties brobotProperties;\n\n    public void myMethod() {\n        if (brobotProperties.getCore().isMock()) {\n            // mock logic\n        }\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-test-configuration",children:"3. Test Configuration"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Before:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@BeforeEach\nvoid setUp() {\n    FrameworkSettings.mock = true;\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"After:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@SpringBootTest\n@TestPropertySource(properties = {\n    "brobot.core.mock=true"\n})\nclass MyTest {\n    // Tests run in mock mode\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Or use ",(0,o.jsx)(n.code,{children:"application-test.properties"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-properties",children:"brobot.core.mock=true\n"})}),"\n",(0,o.jsx)(n.h2,{id:"property-mappings",children:"Property Mappings"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"FrameworkSettings Field"}),(0,o.jsx)(n.th,{children:"BrobotProperties Path"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"mock"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.core.mock"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"headless"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.core.headless"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"packageName"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.core.package-name"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"moveMouseDelay"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.mouse.move-delay"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"pauseBeforeMouseDown"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.mouse.pause-before-down"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"pauseAfterMouseDown"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.mouse.pause-after-down"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"timeFindFirst"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.mock.time-find-first"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"timeFindAll"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.mock.time-find-all"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"timeClick"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.mock.time-click"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"saveSnapshots"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.screenshot.save-snapshots"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"screenshotPath"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"brobot.screenshot.path"})})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"benefits-of-the-migration",children:"Benefits of the Migration"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type Safety"}),": Configuration is validated at startup"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"IDE Support"}),": Auto-completion for property names"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Environment-Specific"}),": Easy per-environment configuration"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testability"}),": Simple to override in tests"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"No Static State"}),": Better for concurrent testing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Spring Integration"}),": Works seamlessly with Spring profiles"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"common-migration-tasks",children:"Common Migration Tasks"}),"\n",(0,o.jsx)(n.h3,{id:"converting-static-utility-classes",children:"Converting Static Utility Classes"}),"\n",(0,o.jsxs)(n.p,{children:["If you have static utility classes that used ",(0,o.jsx)(n.code,{children:"FrameworkSettings"}),":"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Before:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public class MyUtil {\n    public static boolean isInMockMode() {\n        return FrameworkSettings.mock;\n    }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"After (Option 1 - Make it a Spring Component):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@Component\npublic class MyUtil {\n    @Autowired\n    private BrobotProperties brobotProperties;\n\n    public boolean isInMockMode() {\n        return brobotProperties.getCore().isMock();\n    }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"After (Option 2 - Pass as Parameter):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public class MyUtil {\n    public static boolean isInMockMode(BrobotProperties properties) {\n        return properties.getCore().isMock();\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"updating-tests",children:"Updating Tests"}),"\n",(0,o.jsx)(n.p,{children:"All test base classes now handle configuration automatically:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public class MyTest extends BrobotTestBase {\n    // Mock mode is automatically enabled\n    // No need to set FrameworkSettings.mock = true\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"issue-cannot-access-brobotproperties-in-static-context",children:"Issue: Cannot access BrobotProperties in static context"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),": Convert the class to a Spring component or pass BrobotProperties as a method parameter."]}),"\n",(0,o.jsx)(n.h3,{id:"issue-properties-not-being-loaded",children:"Issue: Properties not being loaded"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),": Ensure your ",(0,o.jsx)(n.code,{children:"application.properties"})," is in the classpath and contains the correct property names with the ",(0,o.jsx)(n.code,{children:"brobot."})," prefix."]}),"\n",(0,o.jsx)(n.h3,{id:"issue-mock-mode-not-working-in-tests",children:"Issue: Mock mode not working in tests"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),": Extend ",(0,o.jsx)(n.code,{children:"BrobotTestBase"})," or add ",(0,o.jsx)(n.code,{children:'@TestPropertySource(properties = {"brobot.core.mock=true"})'})," to your test class."]}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsxs)(n.p,{children:["The migration from ",(0,o.jsx)(n.code,{children:"FrameworkSettings"})," to ",(0,o.jsx)(n.code,{children:"BrobotProperties"})," represents a shift from static configuration to dependency-injected, Spring-managed configuration. This change improves testability, removes global state, and provides better integration with the Spring ecosystem."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);
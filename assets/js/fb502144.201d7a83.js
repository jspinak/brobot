"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8155],{1736:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"core-library/guides/finding-objects/configuration-note","title":"Configuration Note","description":"Framework Configuration","source":"@site/docs/03-core-library/guides/finding-objects/configuration-note.md","sourceDirName":"03-core-library/guides/finding-objects","slug":"/core-library/guides/finding-objects/configuration-note","permalink":"/brobot/docs/core-library/guides/finding-objects/configuration-note","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/guides/finding-objects/configuration-note.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"docSidebar","previous":{"title":"Preparing a Folder for AI-Assisted Brobot Project Creation","permalink":"/brobot/docs/getting-started/preparing-folder-for-ai-project-creation"},"next":{"title":"Using Color","permalink":"/brobot/docs/core-library/guides/finding-objects/using-color"}}');var i=n(74848),t=n(28453);const s={sidebar_position:0},a="Configuration Note",c={},l=[{value:"Framework Configuration",id:"framework-configuration",level:2},{value:"Example Configuration",id:"example-configuration",level:2},{value:"Using application.yml:",id:"using-applicationyml",level:3},{value:"Using application.properties:",id:"using-applicationproperties",level:3},{value:"Default Values",id:"default-values",level:2},{value:"Mock Mode Screenshots",id:"mock-mode-screenshots",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"configuration-note",children:"Configuration Note"})}),"\n",(0,i.jsx)(o.h2,{id:"framework-configuration",children:"Framework Configuration"}),"\n",(0,i.jsx)(o.p,{children:"Brobot uses Spring Boot's configuration system. All framework settings should be configured through:"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"application.yml"})," (recommended)"]}),"\n",(0,i.jsx)(o.li,{children:(0,i.jsx)(o.code,{children:"application.properties"})}),"\n",(0,i.jsx)(o.li,{children:"Environment variables"}),"\n"]}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.strong,{children:"Do not"})," directly set static fields on ",(0,i.jsx)(o.code,{children:"FrameworkSettings"})," - this is deprecated and only exists for backward compatibility."]}),"\n",(0,i.jsx)(o.h2,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,i.jsx)(o.h3,{id:"using-applicationyml",children:"Using application.yml:"}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-yaml",children:"brobot:\n  core:\n    mock: true              # Enable mock mode for testing\n    image-path: images/     # Path to image resources\n  screenshot:\n    save-history: true      # Save action history\n    save-snapshots: true    # Save screenshots\n    path: screenshots/      # Screenshot directory\n    history-path: history/  # History directory\n  mouse:\n    move-delay: 0.5         # Mouse movement delay\n    pause-before-down: 0.0  # Pause before mouse down\n"})}),"\n",(0,i.jsx)(o.h3,{id:"using-applicationproperties",children:"Using application.properties:"}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-properties",children:"# Core settings\nbrobot.core.mock=true\nbrobot.core.image-path=images/\n\n# Screenshot settings\nbrobot.screenshot.save-history=true\nbrobot.screenshot.save-snapshots=true\nbrobot.screenshot.path=screenshots/\nbrobot.screenshot.history-path=history/\n\n# Mouse settings\nbrobot.mouse.move-delay=0.5\nbrobot.mouse.pause-before-down=0.0\n"})}),"\n",(0,i.jsx)(o.h2,{id:"default-values",children:"Default Values"}),"\n",(0,i.jsxs)(o.p,{children:["Default configuration values are provided in ",(0,i.jsx)(o.code,{children:"brobot-defaults.properties"})," within the Brobot library. Your application configuration will override these defaults."]}),"\n",(0,i.jsx)(o.h2,{id:"mock-mode-screenshots",children:"Mock Mode Screenshots"}),"\n",(0,i.jsx)(o.p,{children:"When using mock mode with predefined screenshots:"}),"\n",(0,i.jsxs)(o.ol,{children:["\n",(0,i.jsx)(o.li,{children:"Configure mock mode in your properties file"}),"\n",(0,i.jsx)(o.li,{children:"Place screenshot files in the configured screenshot directory"}),"\n",(0,i.jsx)(o.li,{children:"The framework will use these files instead of capturing from the screen"}),"\n"]}),"\n",(0,i.jsxs)(o.p,{children:["For a complete list of available configuration properties, see the BrobotProperties class in the source code or refer to the ",(0,i.jsx)(o.code,{children:"brobot-defaults.properties"})," file in the Brobot library."]})]})}function u(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>a});var r=n(96540);const i={},t=r.createContext(i);function s(e){const o=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(t.Provider,{value:o},e.children)}}}]);
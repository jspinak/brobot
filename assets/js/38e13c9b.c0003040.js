"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4319],{17084:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"core-library/migration/actionresult-refactoring","title":"ActionResult Refactoring Migration Guide","description":"Overview","source":"@site/docs/03-core-library/migration/actionresult-refactoring.md","sourceDirName":"03-core-library/migration","slug":"/core-library/migration/actionresult-refactoring","permalink":"/brobot/docs/core-library/migration/actionresult-refactoring","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/migration/actionresult-refactoring.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"docSidebar","previous":{"title":"ActionHistory Migration Guide","permalink":"/brobot/docs/core-library/migration/actionhistory-migration-guide"},"next":{"title":"Builder Pattern Migration Guide","permalink":"/brobot/docs/core-library/migration/BUILDER_MIGRATION_GUIDE"}}');var s=n(74848),c=n(28453);const r={sidebar_position:10},a="ActionResult Refactoring Migration Guide",l={},o=[{value:"Overview",id:"overview",level:2},{value:"Quick Reference",id:"quick-reference",level:2},{value:"No Breaking Changes",id:"no-breaking-changes",level:3},{value:"Architecture Changes",id:"architecture-changes",level:3},{value:"Component Mapping",id:"component-mapping",level:2},{value:"Where Did My Code Go?",id:"where-did-my-code-go",level:3},{value:"Migration Patterns",id:"migration-patterns",level:2},{value:"Pattern 1: Basic Usage (No Changes Needed)",id:"pattern-1-basic-usage-no-changes-needed",level:3},{value:"Pattern 2: Enhanced Component Access",id:"pattern-2-enhanced-component-access",level:3},{value:"Pattern 3: Building Results",id:"pattern-3-building-results",level:3},{value:"Pattern 4: Statistical Analysis",id:"pattern-4-statistical-analysis",level:3},{value:"Pattern 5: State Tracking",id:"pattern-5-state-tracking",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Analysis Storage",id:"custom-analysis-storage",level:3},{value:"Performance Metrics",id:"performance-metrics",level:3},{value:"Execution History",id:"execution-history",level:3},{value:"Testing Improvements",id:"testing-improvements",level:2},{value:"Component-Focused Testing",id:"component-focused-testing",level:3},{value:"Mocking Components",id:"mocking-components",level:3},{value:"Performance Optimizations",id:"performance-optimizations",level:2},{value:"Lazy Component Access",id:"lazy-component-access",level:3},{value:"Efficient Batch Operations",id:"efficient-batch-operations",level:3},{value:"Common Pitfalls and Solutions",id:"common-pitfalls-and-solutions",level:2},{value:"Pitfall 1: Modifying Internal Collections",id:"pitfall-1-modifying-internal-collections",level:3},{value:"Pitfall 2: Assuming Component Existence",id:"pitfall-2-assuming-component-existence",level:3},{value:"Pitfall 3: Mixing Old and New Patterns",id:"pitfall-3-mixing-old-and-new-patterns",level:3},{value:"Debugging Tips",id:"debugging-tips",level:2},{value:"Component Inspection",id:"component-inspection",level:3},{value:"Performance Analysis",id:"performance-analysis",level:3},{value:"Recommended Practices",id:"recommended-practices",level:2},{value:"For New Code",id:"for-new-code",level:3},{value:"For Existing Code",id:"for-existing-code",level:3},{value:"API Compatibility Matrix",id:"api-compatibility-matrix",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"actionresult-refactoring-migration-guide",children:"ActionResult Refactoring Migration Guide"})}),"\n",(0,s.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(t.p,{children:"This guide covers the migration from ActionResult v1.x (monolithic) to v2.0 (component-based). While the refactoring maintains 100% backward compatibility, understanding the new architecture enables more powerful and maintainable code."}),"\n",(0,s.jsx)(t.h2,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,s.jsx)(t.h3,{id:"no-breaking-changes",children:"No Breaking Changes"}),"\n",(0,s.jsxs)(t.p,{children:["If you're only consuming ActionResult, ",(0,s.jsx)(t.strong,{children:"no code changes are required"}),". All existing methods continue to work exactly as before."]}),"\n",(0,s.jsx)(t.h3,{id:"architecture-changes",children:"Architecture Changes"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"v1.x"}),": Single 1113-line class handling all responsibilities"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"v2.0"}),": Facade delegating to 12 focused components (each less than 300 lines)"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"component-mapping",children:"Component Mapping"}),"\n",(0,s.jsx)(t.h3,{id:"where-did-my-code-go",children:"Where Did My Code Go?"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Original ActionResult Method"}),(0,s.jsx)(t.th,{children:"New Component"}),(0,s.jsx)(t.th,{children:"Component Method"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"add(Match...)"})}),(0,s.jsx)(t.td,{children:"MatchCollection"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"add(Match...)"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"sortMatchObjects()"})}),(0,s.jsx)(t.td,{children:"MatchCollection"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"sortByScore()"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"getBestMatch()"})}),(0,s.jsx)(t.td,{children:"MatchCollection"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"getBest()"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"getMedian()"})}),(0,s.jsx)(t.td,{children:"MatchStatistics"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"getMedianRegion()"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"addString(String)"})}),(0,s.jsx)(t.td,{children:"TextExtractionResult"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"addText(String)"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"getActiveStates()"})}),(0,s.jsx)(t.td,{children:"StateTracker"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"getActiveStates()"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"getDuration()"})}),(0,s.jsx)(t.td,{children:"TimingData"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"getElapsed()"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"addDefinedRegion(Region)"})}),(0,s.jsx)(t.td,{children:"RegionManager"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"defineRegion(Region)"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"addMovement(Movement)"})}),(0,s.jsx)(t.td,{children:"MovementTracker"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"recordMovement(Movement)"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"addSceneAnalysis(SceneAnalysis)"})}),(0,s.jsx)(t.td,{children:"ActionAnalysis"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"addSceneAnalysis(SceneAnalysis)"})})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"migration-patterns",children:"Migration Patterns"}),"\n",(0,s.jsx)(t.h3,{id:"pattern-1-basic-usage-no-changes-needed",children:"Pattern 1: Basic Usage (No Changes Needed)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// This code works identically in v1.x and v2.0\nActionResult result = action.execute(objectCollection);\nif (result.isSuccess()) {\n    Optional<Match> best = result.getBestMatch();\n    List<Location> locations = result.getMatchLocations();\n    result.print();\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"pattern-2-enhanced-component-access",children:"Pattern 2: Enhanced Component Access"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// Old way - limited to ActionResult methods\nActionResult result = action.execute(objectCollection);\n// Had to use multiple methods to analyze matches\nresult.sortMatchObjectsDescending();\nMatch best = result.getBestMatch().orElse(null);\nList<Match> filtered = new ArrayList<>();\nfor (Match m : result.getMatchList()) {\n    if (m.getScore() > 0.8) filtered.add(m);\n}\n\n// New way - direct component access for advanced operations\nActionResult result = action.execute(objectCollection);\nMatchCollection matches = result.getMatchCollection();\nMatchStatistics stats = matches.getStatistics();\n\n// Rich component APIs\nmatches.sort(SortStrategy.SCORE_DESCENDING);\nList<Match> highConfidence = matches.filterByMinScore(0.8).getMatches();\ndouble avgScore = stats.getAverageScore();\nConfidenceLevel confidence = stats.getConfidence();\n"})}),"\n",(0,s.jsx)(t.h3,{id:"pattern-3-building-results",children:"Pattern 3: Building Results"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Old way - imperative construction\nActionResult result = new ActionResult();\nresult.setSuccess(true);\nresult.setActionDescription("Click login button");\nfor (Match match : foundMatches) {\n    result.add(match);\n}\nresult.setStartTime(startTime);\nresult.setEndTime(endTime);\nresult.setDuration(Duration.between(startTime, endTime));\n\n// New way - fluent builder pattern\nActionResult result = new ActionResultBuilder()\n    .withSuccess(true)\n    .withDescription("Click login button")\n    .withMatches(foundMatches)\n    .withTiming(startTime, endTime)\n    .build();\n'})}),"\n",(0,s.jsx)(t.h3,{id:"pattern-4-statistical-analysis",children:"Pattern 4: Statistical Analysis"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// Old way - manual calculations\nActionResult result = action.execute(objectCollection);\ndouble totalScore = 0;\nfor (Match m : result.getMatchList()) {\n    totalScore += m.getScore();\n}\ndouble avgScore = totalScore / result.size();\n\n// New way - built-in statistics\nActionResult result = action.execute(objectCollection);\nMatchStatistics stats = result.getMatchCollection().getStatistics();\ndouble avgScore = stats.getAverageScore();\ndouble stdDev = stats.getScoreStandardDeviation();\nConfidenceLevel confidence = stats.getConfidence();\nOptional<Region> boundingBox = stats.getBoundingBox();\n"})}),"\n",(0,s.jsx)(t.h3,{id:"pattern-5-state-tracking",children:"Pattern 5: State Tracking"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Old way - basic state list\nActionResult result = action.execute(objectCollection);\nSet<String> states = result.getActiveStates();\n// Limited information about state activity\n\n// New way - rich state tracking\nActionResult result = action.execute(objectCollection);\nStateTracker tracker = result.getStateTracker();\nOptional<String> mostActive = tracker.getMostActiveState();\nint activationCount = tracker.getActivationCount("LoginScreen");\nList<Match> stateMatches = tracker.getMatchesForState("LoginScreen");\nMap<String, Integer> summary = tracker.getStateSummary();\n'})}),"\n",(0,s.jsx)(t.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,s.jsx)(t.h3,{id:"custom-analysis-storage",children:"Custom Analysis Storage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Store custom analysis data\nActionAnalysis analysis = result.getActionAnalysis();\nanalysis.addCustomAnalysis("gameState", new GameState(health, mana, score));\nanalysis.addCustomAnalysis("uiLayout", detectLayout(result));\n\n// Retrieve with type safety\nOptional<GameState> gameState = analysis.getCustomAnalysis("gameState", GameState.class);\n'})}),"\n",(0,s.jsx)(t.h3,{id:"performance-metrics",children:"Performance Metrics"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Access detailed performance metrics\nActionMetrics metrics = result.getActionMetrics();\nlong execTime = metrics.getExecutionTimeMs();\ndouble retryOverhead = metrics.getRetryOverheadPercentage();\nMap<String, Long> phaseTimings = metrics.getPhaseTimings();\n\n// Track phases\nmetrics.recordPhase("imageSearch", searchDuration);\nmetrics.recordPhase("verification", verifyDuration);\nlong avgSearchTime = metrics.getAveragePhaseTime("imageSearch");\n'})}),"\n",(0,s.jsx)(t.h3,{id:"execution-history",children:"Execution History"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// Track complex action chains\nExecutionHistory history = result.getExecutionHistory();\nhistory.recordStep(new ActionRecord(...));\n\n// Analyze execution\ndouble successRate = history.getSuccessRate();\nList<ActionRecord> failures = history.getFailedSteps();\nString timeline = history.formatTimeline();\n"})}),"\n",(0,s.jsx)(t.h2,{id:"testing-improvements",children:"Testing Improvements"}),"\n",(0,s.jsx)(t.h3,{id:"component-focused-testing",children:"Component-Focused Testing"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"@Test\nvoid testMatchFiltering() {\n    // Test specific component behavior\n    MatchCollection matches = new MatchCollection();\n    matches.add(lowScoreMatch, midScoreMatch, highScoreMatch);\n    \n    MatchCollection filtered = matches.filterByMinScore(0.7);\n    \n    assertThat(filtered.size()).isEqualTo(2);\n    assertThat(filtered.contains(highScoreMatch)).isTrue();\n    assertThat(filtered.contains(lowScoreMatch)).isFalse();\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"mocking-components",children:"Mocking Components"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@Test\nvoid testActionWithMockedComponents() {\n    // Create result with specific component states\n    ActionResult result = new ActionResultBuilder()\n        .withMatches(mockMatches())\n        .withStates(mockStateTracker())\n        .withMetrics(mockMetrics())\n        .build();\n    \n    // Test behavior with controlled components\n    assertThat(result.getStateTracker().getMostActiveState())\n        .contains("ExpectedState");\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"performance-optimizations",children:"Performance Optimizations"}),"\n",(0,s.jsx)(t.h3,{id:"lazy-component-access",children:"Lazy Component Access"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// Components are created on first use\nActionResult result = new ActionResult();\n\n// No MatchCollection created yet\nresult.isSuccess(); // Doesn't create MatchCollection\n\n// MatchCollection created here\nresult.add(match); // Creates MatchCollection on demand\n"})}),"\n",(0,s.jsx)(t.h3,{id:"efficient-batch-operations",children:"Efficient Batch Operations"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// Inefficient - multiple iterations\nfor (Match m : result.getMatchList()) {\n    if (m.getScore() > 0.8) process(m);\n}\nfor (Match m : result.getMatchList()) {\n    if (m.getStateObjectData() != null) track(m);\n}\n\n// Efficient - single iteration with component\nMatchCollection matches = result.getMatchCollection();\nmatches.getMatches().stream()\n    .filter(m -> m.getScore() > 0.8)\n    .forEach(m -> {\n        process(m);\n        if (m.getStateObjectData() != null) track(m);\n    });\n"})}),"\n",(0,s.jsx)(t.h2,{id:"common-pitfalls-and-solutions",children:"Common Pitfalls and Solutions"}),"\n",(0,s.jsx)(t.h3,{id:"pitfall-1-modifying-internal-collections",children:"Pitfall 1: Modifying Internal Collections"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// DON'T - Modifying internal collection\nList<Match> matches = result.getMatchList();\nmatches.clear(); // Dangerous!\n\n// DO - Use component methods\nresult.getMatchCollection().clear();\n"})}),"\n",(0,s.jsx)(t.h3,{id:"pitfall-2-assuming-component-existence",children:"Pitfall 2: Assuming Component Existence"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// DON'T - Components might be null in edge cases\nint count = result.getMatchCollection().size(); // Could NPE\n\n// DO - Null-safe access\nint count = result.getMatchList().size(); // Facade handles nulls\n"})}),"\n",(0,s.jsx)(t.h3,{id:"pitfall-3-mixing-old-and-new-patterns",children:"Pitfall 3: Mixing Old and New Patterns"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// DON'T - Inconsistent usage\nresult.sortMatchObjects(); // Old method\nMatchCollection matches = result.getMatchCollection();\nmatches.filterByMinScore(0.8); // New method\n\n// DO - Choose consistent approach\n// Either use facade methods throughout\nresult.sortMatchObjects();\nList<Match> filtered = result.getMatchList().stream()\n    .filter(m -> m.getScore() > 0.8)\n    .collect(Collectors.toList());\n\n// Or use components throughout\nMatchCollection matches = result.getMatchCollection();\nmatches.sort(SortStrategy.SCORE_DESCENDING);\nMatchCollection filtered = matches.filterByMinScore(0.8);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"debugging-tips",children:"Debugging Tips"}),"\n",(0,s.jsx)(t.h3,{id:"component-inspection",children:"Component Inspection"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Debug specific components\nSystem.out.println("Matches: " + result.getMatchCollection().format());\nSystem.out.println("Timing: " + result.getTimingData().format());\nSystem.out.println("States: " + result.getStateTracker().format());\nSystem.out.println("Regions: " + result.getRegionManager().format());\n'})}),"\n",(0,s.jsx)(t.h3,{id:"performance-analysis",children:"Performance Analysis"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Analyze performance bottlenecks\nTimingData timing = result.getTimingData();\ntiming.addSegment("search", searchTime);\ntiming.addSegment("verify", verifyTime);\ntiming.addSegment("action", actionTime);\n\nSystem.out.println("Total: " + timing.getElapsed());\nSystem.out.println("Overhead: " + timing.getOverhead());\nSystem.out.println("Breakdown: " + timing.format());\n'})}),"\n",(0,s.jsx)(t.h2,{id:"recommended-practices",children:"Recommended Practices"}),"\n",(0,s.jsx)(t.h3,{id:"for-new-code",children:"For New Code"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Use ActionResultBuilder"})," for construction"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Access components directly"})," for advanced operations"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Leverage statistics"})," for analysis"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Store custom data"})," in ActionAnalysis"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Track performance"})," with ActionMetrics"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"for-existing-code",children:"For Existing Code"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"No immediate changes required"})," - code continues to work"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Gradually adopt components"})," as you modify code"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Use builder pattern"})," when creating new results"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Add metrics tracking"})," for performance monitoring"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Enhance testing"})," with component-level assertions"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"api-compatibility-matrix",children:"API Compatibility Matrix"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Feature"}),(0,s.jsx)(t.th,{children:"v1.x Support"}),(0,s.jsx)(t.th,{children:"v2.0 Facade"}),(0,s.jsx)(t.th,{children:"v2.0 Components"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Basic Operations"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Sorting"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705 Enhanced"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Filtering"}),(0,s.jsx)(t.td,{children:"Limited"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705 Enhanced"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Statistics"}),(0,s.jsx)(t.td,{children:"Basic"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705 Enhanced"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Custom Analysis"}),(0,s.jsx)(t.td,{children:"\u274c"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Performance Metrics"}),(0,s.jsx)(t.td,{children:"Basic"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705 Enhanced"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Execution History"}),(0,s.jsx)(t.td,{children:"Basic"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705 Enhanced"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Type Safety"}),(0,s.jsx)(t.td,{children:"Partial"}),(0,s.jsx)(t.td,{children:"\u2705"}),(0,s.jsx)(t.td,{children:"\u2705"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(t.p,{children:"The ActionResult v2.0 refactoring provides:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"100% backward compatibility"})," - No breaking changes"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Enhanced capabilities"})," - Richer APIs through components"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Better testability"})," - Focused component testing"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Improved maintainability"})," - Single responsibility principle"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Future-proof architecture"})," - Easy to extend"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Whether you continue using the facade API or adopt the component-based approach, your code will benefit from the improved architecture, performance, and maintainability of the refactored ActionResult."})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const s={},c=i.createContext(s);function r(e){const t=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);
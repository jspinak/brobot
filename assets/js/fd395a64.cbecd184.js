"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[781],{2262:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"core-library/guides/configuration-migration","title":"Configuration Migration Guide","description":"Overview","source":"@site/docs/03-core-library/guides/configuration-migration.md","sourceDirName":"03-core-library/guides","slug":"/core-library/guides/configuration-migration","permalink":"/brobot/docs/core-library/guides/configuration-migration","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/guides/configuration-migration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Claude Automator Expected Console Output","permalink":"/brobot/docs/core-library/guides/claude-automator-console-output"},"next":{"title":"Image Highlighting Feature","permalink":"/brobot/docs/core-library/guides/highlighting-feature"}}');var o=i(74848),s=i(28453);const t={},a="Configuration Migration Guide",l={},d=[{value:"Overview",id:"overview",level:2},{value:"What&#39;s Changed",id:"whats-changed",level:2},{value:"Old Way (Pre-1.1.0)",id:"old-way-pre-110",level:3},{value:"New Way (1.1.0+)",id:"new-way-110",level:3},{value:"Default Configuration",id:"default-configuration",level:2},{value:"Viewing Defaults",id:"viewing-defaults",level:3},{value:"Migration Steps",id:"migration-steps",level:2},{value:"1. Remove Static Configuration Code",id:"1-remove-static-configuration-code",level:3},{value:"2. Add Configuration Properties",id:"2-add-configuration-properties",level:3},{value:"3. Use Environment Variables",id:"3-use-environment-variables",level:3},{value:"Configuration Reference",id:"configuration-reference",level:2},{value:"Core Settings",id:"core-settings",level:3},{value:"Mouse Settings",id:"mouse-settings",level:3},{value:"Screenshot Settings",id:"screenshot-settings",level:3},{value:"Complete Example",id:"complete-example",level:3},{value:"Backward Compatibility",id:"backward-compatibility",level:2},{value:"Accessing Properties in Code",id:"accessing-properties-in-code",level:3},{value:"Benefits of the New System",id:"benefits-of-the-new-system",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Properties Not Loading",id:"properties-not-loading",level:3},{value:"Viewing Active Configuration",id:"viewing-active-configuration",level:3},{value:"Override Order",id:"override-order",level:3},{value:"Future Plans",id:"future-plans",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"configuration-migration-guide",children:"Configuration Migration Guide"})}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(n.p,{children:["Starting with Brobot 1.1.0, the framework uses Spring's property-based configuration instead of static fields. This guide helps you migrate from the old ",(0,o.jsx)(n.code,{children:"FrameworkSettings"})," approach to the new configuration system."]}),"\n",(0,o.jsx)(n.h2,{id:"whats-changed",children:"What's Changed"}),"\n",(0,o.jsx)(n.h3,{id:"old-way-pre-110",children:"Old Way (Pre-1.1.0)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Programmatically setting values\nFrameworkSettings.mock = true;\nFrameworkSettings.moveMouseDelay = 1.0f;\nFrameworkSettings.saveSnapshots = true;\n"})}),"\n",(0,o.jsx)(n.h3,{id:"new-way-110",children:"New Way (1.1.0+)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# application.yml\nbrobot:\n  core:\n    mock: true\n  mouse:\n    move-delay: 1.0\n  screenshot:\n    save-snapshots: true\n"})}),"\n",(0,o.jsx)(n.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Brobot now includes ",(0,o.jsx)(n.code,{children:"brobot-defaults.properties"})," with sensible defaults for all settings. You only need to override values you want to change."]}),"\n",(0,o.jsx)(n.h3,{id:"viewing-defaults",children:"Viewing Defaults"}),"\n",(0,o.jsx)(n.p,{children:"The complete list of defaults can be found in the library at:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"brobot-defaults.properties"})," in the Brobot jar"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/jspinak/brobot/blob/main/library/src/main/resources/brobot-defaults.properties",children:"GitHub source"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"migration-steps",children:"Migration Steps"}),"\n",(0,o.jsx)(n.h3,{id:"1-remove-static-configuration-code",children:"1. Remove Static Configuration Code"}),"\n",(0,o.jsxs)(n.p,{children:["Replace any code that sets ",(0,o.jsx)(n.code,{children:"FrameworkSettings"})," fields:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// Remove this\n@PostConstruct\npublic void configureBrobot() {\n    FrameworkSettings.mock = false;\n    FrameworkSettings.saveHistory = true;\n    FrameworkSettings.historyPath = "my-history/";\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-add-configuration-properties",children:"2. Add Configuration Properties"}),"\n",(0,o.jsxs)(n.p,{children:["Add to your ",(0,o.jsx)(n.code,{children:"application.yml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  core:\n    mock: false\n  screenshot:\n    save-history: true\n    history-path: my-history/\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Or ",(0,o.jsx)(n.code,{children:"application.properties"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-properties",children:"brobot.core.mock=false\nbrobot.screenshot.save-history=true\nbrobot.screenshot.history-path=my-history/\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-use-environment-variables",children:"3. Use Environment Variables"}),"\n",(0,o.jsx)(n.p,{children:"You can also use environment variables:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"export BROBOT_CORE_MOCK=true\nexport BROBOT_SCREENSHOT_SAVE_HISTORY=true\n"})}),"\n",(0,o.jsx)(n.h2,{id:"configuration-reference",children:"Configuration Reference"}),"\n",(0,o.jsx)(n.h3,{id:"core-settings",children:"Core Settings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  core:\n    image-path: images          # Where to find images\n    mock: false                 # Enable mock mode\n    headless: false             # Run headless\n    package-name: com.example   # Default package for generated code\n"})}),"\n",(0,o.jsx)(n.h3,{id:"mouse-settings",children:"Mouse Settings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  mouse:\n    move-delay: 0.5             # Delay for mouse movements\n    pause-before-down: 0.0      # Pause before mouse down\n    pause-after-down: 0.0       # Pause after mouse down\n    pause-before-up: 0.0        # Pause before mouse up\n    pause-after-up: 0.0         # Pause after mouse up\n"})}),"\n",(0,o.jsx)(n.h3,{id:"screenshot-settings",children:"Screenshot Settings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  screenshot:\n    save-snapshots: false       # Save screenshots\n    save-history: false         # Save illustrated history\n    path: screenshots/          # Screenshot directory\n    history-path: history/      # History directory\n"})}),"\n",(0,o.jsx)(n.h3,{id:"complete-example",children:"Complete Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  core:\n    image-path: classpath:images/\n    mock: false\n    headless: false\n  mouse:\n    move-delay: 0.3\n    pause-after-down: 0.1\n  screenshot:\n    save-snapshots: true\n    save-history: true\n    path: build/screenshots/\n    history-path: build/history/\n  illustration:\n    draw-find: true\n    draw-click: true\n  analysis:\n    k-means-in-profile: 5\n  startup:\n    verify-initial-states: true\n    initial-states: HOME,LOGIN\n"})}),"\n",(0,o.jsx)(n.h2,{id:"backward-compatibility",children:"Backward Compatibility"}),"\n",(0,o.jsx)(n.p,{children:"During the transition period:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"FrameworkSettings"})," fields are still updated from properties"]}),"\n",(0,o.jsx)(n.li,{children:"Old code continues to work"}),"\n",(0,o.jsxs)(n.li,{children:["You can gradually migrate to using ",(0,o.jsx)(n.code,{children:"BrobotProperties"})," directly"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"accessing-properties-in-code",children:"Accessing Properties in Code"}),"\n",(0,o.jsx)(n.p,{children:"If you need to access configuration in your code:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@Component\npublic class MyComponent {\n    @Autowired\n    private BrobotProperties brobotProperties;\n    \n    public void doSomething() {\n        if (brobotProperties.getCore().isMock()) {\n            // Mock mode logic\n        }\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"benefits-of-the-new-system",children:"Benefits of the New System"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"External Configuration"}),": Change behavior without recompiling"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Environment-Specific"}),": Different settings for dev/test/prod"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type Safety"}),": Properties are validated at startup"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Documentation"}),": IDE support for property completion"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Centralized"}),": All settings in one place"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Cloud-Native"}),": Works with config servers and K8s ConfigMaps"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"properties-not-loading",children:"Properties Not Loading"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Ensure your ",(0,o.jsx)(n.code,{children:"application.yml"})," is in ",(0,o.jsx)(n.code,{children:"src/main/resources"})]}),"\n",(0,o.jsx)(n.li,{children:"Check for typos in property names"}),"\n",(0,o.jsx)(n.li,{children:"Verify Spring Boot is finding your configuration"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"viewing-active-configuration",children:"Viewing Active Configuration"}),"\n",(0,o.jsx)(n.p,{children:"Add this to see what properties are loaded:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-properties",children:"logging.level.org.springframework.boot.context.properties=DEBUG\n"})}),"\n",(0,o.jsx)(n.h3,{id:"override-order",children:"Override Order"}),"\n",(0,o.jsx)(n.p,{children:"Properties are loaded in this order (later overrides earlier):"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"brobot-defaults.properties"})," (library defaults)"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"application.properties"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"application.yml"})}),"\n",(0,o.jsx)(n.li,{children:"Environment variables"}),"\n",(0,o.jsx)(n.li,{children:"Command-line arguments"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"future-plans",children:"Future Plans"}),"\n",(0,o.jsx)(n.p,{children:"In Brobot 2.0:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"FrameworkSettings"})," will be deprecated"]}),"\n",(0,o.jsxs)(n.li,{children:["All code will use ",(0,o.jsx)(n.code,{children:"BrobotProperties"})," directly"]}),"\n",(0,o.jsx)(n.li,{children:"Static configuration will be removed"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Start migrating now to prepare for the future!"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var r=i(96540);const o={},s=r.createContext(o);function t(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);
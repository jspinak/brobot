"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5125],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var t=i(96540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},39591:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"core-library/tutorials/tutorial-claude-automator/running-the-app","title":"Running the Claude Automator","description":"Build and Run","source":"@site/docs/03-core-library/tutorials/tutorial-claude-automator/running-the-app.md","sourceDirName":"03-core-library/tutorials/tutorial-claude-automator","slug":"/core-library/tutorials/tutorial-claude-automator/running-the-app","permalink":"/brobot/docs/core-library/tutorials/tutorial-claude-automator/running-the-app","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/tutorials/tutorial-claude-automator/running-the-app.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Project Setup","permalink":"/brobot/docs/core-library/tutorials/tutorial-claude-automator/project-setup"},"next":{"title":"Creating States with Annotations","permalink":"/brobot/docs/core-library/tutorials/tutorial-claude-automator/states"}}');var r=i(74848),o=i(28453);const a={},s="Running the Claude Automator",l={},c=[{value:"Build and Run",id:"build-and-run",level:2},{value:"Using Gradle",id:"using-gradle",level:3},{value:"Using IDE",id:"using-ide",level:3},{value:"Expected Console Output",id:"expected-console-output",level:2},{value:"Testing the Automation",id:"testing-the-automation",level:2},{value:"1. Initial State",id:"1-initial-state",level:3},{value:"2. Trigger Transition",id:"2-trigger-transition",level:3},{value:"3. Monitor Working State",id:"3-monitor-working-state",level:3},{value:"4. Continuous Operation",id:"4-continuous-operation",level:3},{value:"Debugging Tips",id:"debugging-tips",level:2},{value:"Enable Debug Logging",id:"enable-debug-logging",level:3},{value:"Visual Debugging",id:"visual-debugging",level:3},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:3},{value:"Images Not Found",id:"images-not-found",level:4},{value:"State Not Activating",id:"state-not-activating",level:4},{value:"Monitoring Not Working",id:"monitoring-not-working",level:4},{value:"Performance Tuning",id:"performance-tuning",level:2},{value:"Adjust Monitoring Frequency",id:"adjust-monitoring-frequency",level:3},{value:"Optimize Image Search",id:"optimize-image-search",level:3},{value:"Production Considerations",id:"production-considerations",level:2},{value:"1. Error Recovery",id:"1-error-recovery",level:3},{value:"2. Metrics and Monitoring",id:"2-metrics-and-monitoring",level:3},{value:"3. Graceful Shutdown",id:"3-graceful-shutdown",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"running-the-claude-automator",children:"Running the Claude Automator"})}),"\n",(0,r.jsx)(n.h2,{id:"build-and-run",children:"Build and Run"}),"\n",(0,r.jsx)(n.h3,{id:"using-gradle",children:"Using Gradle"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clean and build\n./gradlew clean build\n\n# Run the application\n./gradlew bootRun\n"})}),"\n",(0,r.jsx)(n.h3,{id:"using-ide",children:"Using IDE"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Open the project in IntelliJ IDEA or Eclipse"}),"\n",(0,r.jsxs)(n.li,{children:["Run ",(0,r.jsx)(n.code,{children:"ClaudeAutomatorApplication.java"})," as a Spring Boot application"]}),"\n",(0,r.jsx)(n.li,{children:"Watch the console for log output"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"expected-console-output",children:"Expected Console Output"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"INFO  c.c.a.ClaudeAutomatorApplication - Starting ClaudeAutomatorApplication\nINFO  i.g.j.b.startup.AutoStartupVerifier - === Brobot Auto Startup Verification: Phase 1 (Images) ===\nINFO  i.g.j.b.startup.ApplicationStartupVerifier - Discovered 7 images from 2 states\nINFO  i.g.j.b.startup.ApplicationStartupVerifier - All 7 required images verified successfully\nINFO  c.c.a.config.StateRegistrationListener - Application ready - registering states with StateService\nINFO  c.c.a.config.StateRegistrationListener - States and transitions registered successfully\nINFO  i.g.j.b.startup.AutoStartupVerifier - === Brobot Auto Startup Verification: Phase 2 (States) ===\nINFO  i.g.j.b.startup.ApplicationStartupVerifier - Successfully verified expected states. Active states: [PROMPT]\nINFO  c.c.a.automation.ClaudeMonitoringAutomation - Starting Claude monitoring automation\nINFO  c.c.a.ClaudeAutomatorApplication - Started ClaudeAutomatorApplication in 3.456 seconds\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing-the-automation",children:"Testing the Automation"}),"\n",(0,r.jsx)(n.h3,{id:"1-initial-state",children:"1. Initial State"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The auto-verifier detects which state is currently visible"}),"\n",(0,r.jsx)(n.li,{children:"Open Claude AI in your browser before starting the app"}),"\n",(0,r.jsx)(n.li,{children:"The automation will automatically set the correct initial state"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-trigger-transition",children:"2. Trigger Transition"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The automation will find and click the prompt"}),"\n",(0,r.jsx)(n.li,{children:'Type "continue" and press Enter'}),"\n",(0,r.jsx)(n.li,{children:"Both Prompt and Working states become active"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-monitor-working-state",children:"3. Monitor Working State"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The automation checks every 2 seconds for Claude's icon"}),"\n",(0,r.jsxs)(n.li,{children:["When Claude finishes responding (icon disappears):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Working state is removed from active states"}),"\n",(0,r.jsx)(n.li,{children:"Working state is reopened to wait for the next response"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-continuous-operation",children:"4. Continuous Operation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The cycle continues indefinitely"}),"\n",(0,r.jsx)(n.li,{children:"Monitor the logs to see the automation in action"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"debugging-tips",children:"Debugging Tips"}),"\n",(0,r.jsx)(n.h3,{id:"enable-debug-logging",children:"Enable Debug Logging"}),"\n",(0,r.jsxs)(n.p,{children:["Add to ",(0,r.jsx)(n.code,{children:"application.properties"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-properties",children:"logging.level.com.claude.automator=DEBUG\nlogging.level.io.github.jspinak.brobot=DEBUG\n"})}),"\n",(0,r.jsx)(n.h3,{id:"visual-debugging",children:"Visual Debugging"}),"\n",(0,r.jsx)(n.p,{children:"Enable Sikuli highlighting:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-properties",children:"brobot.sikuli.highlight=true\nbrobot.sikuli.highlight.duration=2\n"})}),"\n",(0,r.jsx)(n.h3,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,r.jsx)(n.h4,{id:"images-not-found",children:"Images Not Found"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ERROR - Failed to load required image: prompt/claude-prompt-1.png\nERROR -   Suggestion: Check if file exists at: /path/to/images/prompt/claude-prompt-1.png\nERROR -   Suggestion: Verify image format is supported (PNG, JPG, JPEG, GIF, BMP)\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The auto-verifier provides specific suggestions"}),"\n",(0,r.jsx)(n.li,{children:"Check the exact path shown in the error"}),"\n",(0,r.jsx)(n.li,{children:"Verify image format and accessibility"}),"\n",(0,r.jsx)(n.li,{children:"Add fallback paths in application.yml if needed"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"state-not-activating",children:"State Not Activating"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ERROR - Failed to activate Working state\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Check transition logic"}),"\n",(0,r.jsx)(n.li,{children:"Verify state registration"}),"\n",(0,r.jsx)(n.li,{children:"Review logs for transition failures"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"monitoring-not-working",children:"Monitoring Not Working"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"DEBUG - Working state is not active, skipping check\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure Working state is properly activated"}),"\n",(0,r.jsx)(n.li,{children:"Check StateMemory for active states"}),"\n",(0,r.jsx)(n.li,{children:"Verify transition completion"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-tuning",children:"Performance Tuning"}),"\n",(0,r.jsx)(n.h3,{id:"adjust-monitoring-frequency",children:"Adjust Monitoring Frequency"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// In ClaudeMonitoringAutomation\nscheduler.scheduleWithFixedDelay(\n    this::checkClaudeIconStatus,\n    5,  // Initial delay - increase for slower startup\n    1,  // Check interval - decrease for faster response\n    TimeUnit.SECONDS\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"optimize-image-search",children:"Optimize Image Search"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// Use search regions to improve performance\nPatternFindOptions optimizedFind = new PatternFindOptions.Builder()\n    .setSearchRegion(new Region(100, 100, 400, 300))  // Limit search area\n    .setSimilarity(0.9)  // Adjust for accuracy vs speed\n    .build();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"production-considerations",children:"Production Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"1-error-recovery",children:"1. Error Recovery"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Component\npublic class ErrorRecoveryService {\n    @EventListener\n    public void handleAutomationError(AutomationErrorEvent event) {\n        log.error("Automation error: {}", event.getMessage());\n        // Implement recovery logic\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-metrics-and-monitoring",children:"2. Metrics and Monitoring"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Component\npublic class AutomationMetrics {\n    private final MeterRegistry meterRegistry;\n    \n    public void recordTransitionSuccess(String fromState, String toState) {\n        meterRegistry.counter("transitions.success", \n            "from", fromState, \n            "to", toState).increment();\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-graceful-shutdown",children:"3. Graceful Shutdown"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@PreDestroy\npublic void cleanup() {\n    log.info("Shutting down Claude Automator");\n    // Save state, cleanup resources\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Congratulations! You've built a complete Brobot automation using modern patterns. Consider:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extending the automation"})," with more states and complex workflows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Adding configuration UI"})," using Brobot's desktop runner"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Creating tests"})," using Brobot's mock capabilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Contributing improvements"})," back to the Brobot library"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"This tutorial demonstrated:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Modern state patterns with direct component access"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 JavaStateTransition for flexible navigation"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Fluent API and action chaining"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Spring Boot integration"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Continuous monitoring patterns"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Enhanced developer experience features"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The complete source code serves as a template for building robust, maintainable automations with Brobot v1.1.0."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
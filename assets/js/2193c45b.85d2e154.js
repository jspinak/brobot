"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4512],{28453:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>a});var i=s(96540);const r={},l=i.createContext(r);function t(n){const e=i.useContext(l);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),i.createElement(l.Provider,{value:e},n.children)}},71742:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"integrations/mcp-server/installation","title":"Installation Guide","description":"This guide provides detailed installation instructions for the Brobot MCP Server on different operating systems.","source":"@site/docs/06-integrations/mcp-server/installation.md","sourceDirName":"06-integrations/mcp-server","slug":"/integrations/mcp-server/installation","permalink":"/brobot/docs/integrations/mcp-server/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/06-integrations/mcp-server/installation.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docSidebar","previous":{"title":"Getting Started with MCP Server","permalink":"/brobot/docs/integrations/mcp-server/getting-started"},"next":{"title":"Configuration Guide","permalink":"/brobot/docs/integrations/mcp-server/configuration"}}');var r=s(74848),l=s(28453);const t={sidebar_position:2},a="Installation Guide",o={},d=[{value:"System Requirements",id:"system-requirements",level:2},{value:"Minimum Requirements",id:"minimum-requirements",level:3},{value:"Recommended Requirements",id:"recommended-requirements",level:3},{value:"Software Prerequisites",id:"software-prerequisites",level:3},{value:"Platform-Specific Installation",id:"platform-specific-installation",level:2},{value:"Windows",id:"windows",level:3},{value:"macOS",id:"macos",level:3},{value:"Linux (Ubuntu/Debian)",id:"linux-ubuntudebian",level:3},{value:"Docker Installation",id:"docker-installation",level:2},{value:"Verifying Installation",id:"verifying-installation",level:2},{value:"1. Check Python Installation",id:"1-check-python-installation",level:3},{value:"2. Check Java Installation",id:"2-check-java-installation",level:3},{value:"3. Test MCP Server",id:"3-test-mcp-server",level:3},{value:"4. Test Brobot CLI",id:"4-test-brobot-cli",level:3},{value:"Installing the Python Client",id:"installing-the-python-client",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Basic Configuration",id:"basic-configuration",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:3},{value:"Troubleshooting Installation",id:"troubleshooting-installation",level:2},{value:"Python Issues",id:"python-issues",level:3},{value:"Java Issues",id:"java-issues",level:3},{value:"Network Issues",id:"network-issues",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Getting Help",id:"getting-help",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"installation-guide",children:"Installation Guide"})}),"\n",(0,r.jsx)(e.p,{children:"This guide provides detailed installation instructions for the Brobot MCP Server on different operating systems."}),"\n",(0,r.jsx)(e.h2,{id:"system-requirements",children:"System Requirements"}),"\n",(0,r.jsx)(e.h3,{id:"minimum-requirements",children:"Minimum Requirements"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"CPU"}),": 2 cores"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"RAM"}),": 4 GB"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Disk"}),": 500 MB free space"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Display"}),": Required for GUI automation"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"recommended-requirements",children:"Recommended Requirements"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"CPU"}),": 4+ cores"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"RAM"}),": 8 GB"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Disk"}),": 1 GB free space"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Display"}),": 1920x1080 or higher resolution"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"software-prerequisites",children:"Software Prerequisites"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Python"}),": 3.8 or higher"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Java"}),": JDK 11 or higher"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Git"}),": For cloning the repository"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Gradle"}),": 7.0+ (or use included wrapper)"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"platform-specific-installation",children:"Platform-Specific Installation"}),"\n",(0,r.jsx)(e.h3,{id:"windows",children:"Windows"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Install Python"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-powershell",children:"# Download from python.org or use winget\nwinget install Python.Python.3.11\n\n# Verify installation\npython --version\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Install Java"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-powershell",children:'# Using winget\nwinget install Microsoft.OpenJDK.11\n\n# Or download from adoptium.net\n# Set JAVA_HOME environment variable\nsetx JAVA_HOME "C:\\Program Files\\Microsoft\\jdk-11.0.x.xxx"\n'})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Clone and Install MCP Server"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-powershell",children:"git clone https://github.com/jspinak/brobot-mcp-server.git\ncd brobot-mcp-server\n\n# Create virtual environment\npython -m venv venv\n.\\venv\\Scripts\\activate\n\n# Install server\npip install -e .\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Build Brobot CLI"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-powershell",children:"cd brobot-cli\n.\\gradlew.bat shadowJar\ncd ..\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"macos",children:"macOS"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Install Prerequisites via Homebrew"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:'# Install Homebrew if not present\n/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n\n# Install Python and Java\nbrew install python@3.11 openjdk@11\n\n# Add Java to PATH\necho \'export PATH="/usr/local/opt/openjdk@11/bin:$PATH"\' >> ~/.zshrc\nsource ~/.zshrc\n'})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Clone and Install MCP Server"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/jspinak/brobot-mcp-server.git\ncd brobot-mcp-server\n\n# Create virtual environment\npython3 -m venv venv\nsource venv/bin/activate\n\n# Install server\npip install -e .\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Build Brobot CLI"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"cd brobot-cli\n./gradlew shadowJar\ncd ..\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"linux-ubuntudebian",children:"Linux (Ubuntu/Debian)"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Install System Packages"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Update package list\nsudo apt update\n\n# Install Python and dependencies\nsudo apt install python3.11 python3.11-venv python3-pip\n\n# Install Java\nsudo apt install openjdk-11-jdk\n\n# Install additional tools\nsudo apt install git curl wget\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Clone and Install MCP Server"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/jspinak/brobot-mcp-server.git\ncd brobot-mcp-server\n\n# Create virtual environment\npython3.11 -m venv venv\nsource venv/bin/activate\n\n# Install server\npip install -e .\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Build Brobot CLI"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"cd brobot-cli\n./gradlew shadowJar\ncd ..\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"docker-installation",children:"Docker Installation"}),"\n",(0,r.jsx)(e.p,{children:"For a containerized setup:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Create Dockerfile"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-dockerfile",children:'FROM python:3.11-slim\n\n# Install Java\nRUN apt-get update && \\\n    apt-get install -y openjdk-11-jdk && \\\n    apt-get clean\n\n# Copy application\nWORKDIR /app\nCOPY . /app/\n\n# Install Python dependencies\nRUN pip install -e .\n\n# Build Java CLI\nRUN cd brobot-cli && ./gradlew shadowJar\n\n# Expose port\nEXPOSE 8000\n\n# Start server\nCMD ["python", "-m", "mcp_server.main"]\n'})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Build and Run"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"docker build -t brobot-mcp-server .\ndocker run -p 8000:8000 brobot-mcp-server\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"verifying-installation",children:"Verifying Installation"}),"\n",(0,r.jsx)(e.h3,{id:"1-check-python-installation",children:"1. Check Python Installation"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"python --version\n# Should show: Python 3.8.x or higher\n\npip --version\n# Should show pip version\n"})}),"\n",(0,r.jsx)(e.h3,{id:"2-check-java-installation",children:"2. Check Java Installation"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:'java -version\n# Should show: openjdk version "11.x.x" or higher\n\njavac -version\n# Should show: javac 11.x.x\n'})}),"\n",(0,r.jsx)(e.h3,{id:"3-test-mcp-server",children:"3. Test MCP Server"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:'# Start server in mock mode\nUSE_MOCK_DATA=true python -m mcp_server.main\n\n# In another terminal, test health endpoint\ncurl http://localhost:8000/health\n# Should return: {"status":"ok"}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"4-test-brobot-cli",children:"4. Test Brobot CLI"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"java -jar brobot-cli/build/libs/brobot-cli.jar --version\n# Should show: brobot-cli 0.1.0\n"})}),"\n",(0,r.jsx)(e.h2,{id:"installing-the-python-client",children:"Installing the Python Client"}),"\n",(0,r.jsx)(e.p,{children:"For Python applications:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"pip install brobot-client\n"})}),"\n",(0,r.jsx)(e.p,{children:"Or from source:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"cd brobot_client\npip install -e .\n"})}),"\n",(0,r.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(e.h3,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,r.jsxs)(e.p,{children:["Create a ",(0,r.jsx)(e.code,{children:".env"})," file in the project root:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-env",children:"# Server Settings\nMCP_HOST=0.0.0.0\nMCP_PORT=8000\n\n# Brobot CLI\nUSE_MOCK_DATA=false\nBROBOT_CLI_JAR=brobot-cli/build/libs/brobot-cli.jar\n\n# Logging\nMCP_LOG_LEVEL=info\n"})}),"\n",(0,r.jsx)(e.h3,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,r.jsx)(e.p,{children:"For production deployments:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-env",children:"# Performance\nCLI_TIMEOUT=60.0\nWORKERS=4\n\n# Security (future)\nAPI_KEY_REQUIRED=true\nAPI_KEY=your-secret-key\n\n# Monitoring\nENABLE_METRICS=true\nMETRICS_PORT=9090\n"})}),"\n",(0,r.jsx)(e.h2,{id:"troubleshooting-installation",children:"Troubleshooting Installation"}),"\n",(0,r.jsx)(e.h3,{id:"python-issues",children:"Python Issues"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Issue"}),": ",(0,r.jsx)(e.code,{children:"pip: command not found"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Install pip\npython -m ensurepip --upgrade\n"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Issue"}),": ",(0,r.jsx)(e.code,{children:"No module named 'venv'"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Install venv package\nsudo apt install python3.11-venv  # Ubuntu/Debian\n"})}),"\n",(0,r.jsx)(e.h3,{id:"java-issues",children:"Java Issues"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Issue"}),": ",(0,r.jsx)(e.code,{children:"JAVA_HOME not set"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Find Java installation\nwhich java\n\n# Set JAVA_HOME\nexport JAVA_HOME=/usr/lib/jvm/java-11-openjdk\necho 'export JAVA_HOME=/usr/lib/jvm/java-11-openjdk' >> ~/.bashrc\n"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Issue"}),": Gradle not found"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Use the Gradle wrapper instead\n./gradlew shadowJar  # Unix\ngradlew.bat shadowJar  # Windows\n"})}),"\n",(0,r.jsx)(e.h3,{id:"network-issues",children:"Network Issues"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Issue"}),": Port 8000 already in use"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Find process using port\nlsof -i :8000  # Unix\nnetstat -ano | findstr :8000  # Windows\n\n# Use different port\nMCP_PORT=8080 python -m mcp_server.main\n"})}),"\n",(0,r.jsx)(e.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(e.p,{children:"After successful installation:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["Read the ",(0,r.jsx)(e.a,{href:"./configuration",children:"Configuration Guide"})," for detailed setup options"]}),"\n",(0,r.jsxs)(e.li,{children:["Follow the ",(0,r.jsx)(e.a,{href:"./getting-started",children:"Getting Started"})," tutorial"]}),"\n",(0,r.jsxs)(e.li,{children:["Explore ",(0,r.jsx)(e.a,{href:"./examples",children:"API Examples"})," for integration patterns"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsx)(e.p,{children:"If you encounter issues:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["Check the ",(0,r.jsx)(e.a,{href:"./troubleshooting",children:"Troubleshooting Guide"})]}),"\n",(0,r.jsxs)(e.li,{children:["Search ",(0,r.jsx)(e.a,{href:"https://github.com/jspinak/brobot-mcp-server/issues",children:"GitHub Issues"})]}),"\n",(0,r.jsxs)(e.li,{children:["Ask on ",(0,r.jsx)(e.a,{href:"https://discord.gg/brobot",children:"Discord"})]}),"\n",(0,r.jsx)(e.li,{children:"Create a new issue with installation logs"}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5087],{5505:(t,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/states3-98898e923053ebe0970df7aca545cd9d.png"},28453:(t,e,s)=>{s.d(e,{R:()=>o,x:()=>r});var i=s(96540);const a={},n=i.createContext(a);function o(t){const e=i.useContext(n);return i.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),i.createElement(n.Provider,{value:e},t.children)}},53962:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"getting-started/states","title":"States","description":"What is a Brobot State?","source":"@site/versioned_docs/version-1.0.7/01-getting-started/states.md","sourceDirName":"01-getting-started","slug":"/getting-started/states","permalink":"/brobot/docs/1.0.7/getting-started/states","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/versioned_docs/version-1.0.7/01-getting-started/states.md","tags":[],"version":"1.0.7","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"States"},"sidebar":"docSidebar","previous":{"title":"Core Concepts","permalink":"/brobot/docs/1.0.7/getting-started/core-concepts"},"next":{"title":"Transitions","permalink":"/brobot/docs/1.0.7/getting-started/transitions"}}');var a=s(74848),n=s(28453);const o={sidebar_position:3,title:"States"},r=void 0,c={},l=[{value:"What is a Brobot State?",id:"what-is-a-brobot-state",level:2},{value:"Multiple Active States",id:"multiple-active-states",level:3}];function d(t){const e={h2:"h2",h3:"h3",img:"img",p:"p",strong:"strong",...(0,n.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{id:"what-is-a-brobot-state",children:"What is a Brobot State?"}),"\n",(0,a.jsx)(e.p,{children:"A state in Brobot is a collection of related objects, including images, regions, and locations. This relationship usually involves space (objects are often grouped together) and time (objects often appear together). The defining characteristic of a state is the reliability of expected results: when a state is active, a specific action performed on one of its objects should give the same expected result every time."}),"\n",(0,a.jsxs)(e.p,{children:["In the formal model, a ",(0,a.jsx)(e.strong,{children:"State (S)"})," is a collection of related GUI elements chosen to model a distinct configuration of the user interface."]}),"\n",(0,a.jsx)(e.p,{children:'Below is an example of a state in a mobile game. The state holds 5 objects: 1 region, 1 location, and 3 images. Clicking on the image "Raid" should always produce the same result when in this state.'}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"island state",src:s(93498).A+"",width:"1920",height:"1080"})}),"\n",(0,a.jsx)(e.h3,{id:"multiple-active-states",children:"Multiple Active States"}),"\n",(0,a.jsxs)(e.p,{children:["In practice, there are usually multiple active states at any time. A key concept in the model is that the visible screen can be described as a set of active states S",(0,a.jsx)("sub",{children:"\u039e"}),". States can transition independently without affecting other active states. When designing your automation, think of what might change as a group and what might not; objects that change together should be included in the same state."]}),"\n",(0,a.jsx)(e.p,{children:"The example below shows a screen with multiple states active simultaneously, each highlighted in a different color."}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"States Example",src:s(5505).A+"",width:"2560",height:"1600"})})]})}function h(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(d,{...t})}):d(t)}},93498:(t,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/island-state-10c9fdb01510eea2bee9021317d9441c.jpeg"}}]);
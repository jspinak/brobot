"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6630],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(96540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},91975:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"logging/index","title":"Brobot Logging System","description":"The Brobot framework provides a comprehensive, structured logging system designed specifically for GUI automation. The system uses hierarchical configuration, industry-standard log levels, and multiple output formats to provide clear visibility into automation execution.","source":"@site/docs/07-logging/index.md","sourceDirName":"07-logging","slug":"/logging/","permalink":"/brobot/docs/logging/","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/07-logging/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Integrations Overview","permalink":"/brobot/docs/integrations/overview"},"next":{"title":"Logging Configuration Guide","permalink":"/brobot/docs/logging/configuration"}}');var o=i(74848),r=i(28453);const s={},l="Brobot Logging System",c={},a=[{value:"Core Concepts",id:"core-concepts",level:2},{value:"Log Levels",id:"log-levels",level:3},{value:"Log Categories",id:"log-categories",level:3},{value:"Quick Start",id:"quick-start",level:2},{value:"Basic Configuration",id:"basic-configuration",level:3},{value:"Sample Output",id:"sample-output",level:3},{value:"Documentation Structure",id:"documentation-structure",level:2},{value:"Key Features",id:"key-features",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"brobot-logging-system",children:"Brobot Logging System"})}),"\n",(0,o.jsx)(n.p,{children:"The Brobot framework provides a comprehensive, structured logging system designed specifically for GUI automation. The system uses hierarchical configuration, industry-standard log levels, and multiple output formats to provide clear visibility into automation execution."}),"\n",(0,o.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,o.jsx)(n.h3,{id:"log-levels",children:"Log Levels"}),"\n",(0,o.jsx)(n.p,{children:"Brobot uses industry-standard SLF4J/Log4j2 log levels:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"OFF"})," - No logging"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"ERROR"})," - Error conditions requiring attention"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"WARN"})," - Warning conditions and potential issues"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"INFO"})," - Key business events and action results"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"DEBUG"})," - Detailed debugging information"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"TRACE"})," - Most detailed information including method entry/exit"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"log-categories",children:"Log Categories"}),"\n",(0,o.jsx)(n.p,{children:"Different aspects of automation are organized into categories:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"ACTIONS"})," - User actions (click, type, find)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"TRANSITIONS"})," - State transitions and navigation"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"MATCHING"})," - Pattern matching details"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"PERFORMANCE"})," - Timing and performance metrics"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"STATE"})," - State management events"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"LIFECYCLE"})," - Application lifecycle events"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"VALIDATION"})," - Input validation and checks"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"SYSTEM"})," - System-level events"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsx)(n.h3,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-properties",children:"# application.properties\r\n\r\n# Set global log level (applies to all categories)\r\nbrobot.logging.global-level=INFO\r\n\r\n# Override specific categories if needed\r\nbrobot.logging.categories.actions=DEBUG\r\nbrobot.logging.categories.matching=WARN\r\n\r\n# Choose output format\r\nbrobot.logging.output.format=SIMPLE\n"})}),"\n",(0,o.jsx)(n.h3,{id:"sample-output",children:"Sample Output"}),"\n",(0,o.jsx)(n.p,{children:"With the above configuration, you'll see:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"[ACTIONS] INFO  FIND submitButton \u2192 SUCCESS [25ms] loc:(100,200) sim:0.95\r\n[ACTIONS] DEBUG   Details: 3 matches found\r\n[TRANSITIONS] INFO  MainMenu \u2192 LoginPage SUCCESS [150ms]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"documentation-structure",children:"Documentation Structure"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/brobot/docs/logging/configuration",children:"Configuration Guide"})," - Detailed configuration options"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/brobot/docs/logging/usage",children:"Usage Guide"})," - How to use logging in your code"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/brobot/docs/logging/output-formats",children:"Output Formats"})," - Available output formats and examples"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/brobot/docs/logging/performance",children:"Performance"})," - Performance considerations and optimizations"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Hierarchical Configuration"})," - Global settings cascade to specific categories"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Structured Events"})," - Rich event objects with metadata and context"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Multiple Output Formats"})," - SIMPLE, STRUCTURED, and JSON formats"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Correlation Tracking"})," - Track related operations with correlation IDs"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Performance Optimized"})," - Minimal overhead with early filtering"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Clean Architecture"})," - No legacy code or backward compatibility baggage"]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);
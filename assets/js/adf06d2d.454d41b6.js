"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6582],{13068:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"core-library/capture/dpi-resolution-guide","title":"DPI and Resolution Guide","description":"Understanding and handling DPI scaling in screen capture","source":"@site/docs/03-core-library/capture/dpi-resolution-guide.md","sourceDirName":"03-core-library/capture","slug":"/core-library/capture/dpi-resolution-guide","permalink":"/brobot/docs/core-library/capture/dpi-resolution-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/capture/dpi-resolution-guide.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"DPI and Resolution Guide","description":"Understanding and handling DPI scaling in screen capture","keywords":["dpi","scaling","resolution","physical","logical","windows"]},"sidebar":"docSidebar","previous":{"title":"Capture Quick Reference","permalink":"/brobot/docs/core-library/capture/capture-quick-reference"},"next":{"title":"Special Keys Guide for Brobot","permalink":"/brobot/docs/core-library/keyboard/special-keys-guide"}}');var t=i(74848),s=i(28453);const l={sidebar_position:3,title:"DPI and Resolution Guide",description:"Understanding and handling DPI scaling in screen capture",keywords:["dpi","scaling","resolution","physical","logical","windows"]},o="DPI Scaling and Resolution Guide",a={},c=[{value:"The Problem",id:"the-problem",level:2},{value:"Example",id:"example",level:3},{value:"Understanding Resolution Types",id:"understanding-resolution-types",level:2},{value:"Physical Resolution",id:"physical-resolution",level:3},{value:"Logical Resolution",id:"logical-resolution",level:3},{value:"Common Scaling Scenarios",id:"common-scaling-scenarios",level:3},{value:"Solution: Brobot&#39;s Approach",id:"solution-brobots-approach",level:2},{value:"Default Configuration (Recommended)",id:"default-configuration-recommended",level:3},{value:"How It Works",id:"how-it-works",level:3},{value:"1. Robot Provider with Scaling (Default)",id:"1-robot-provider-with-scaling-default",level:3},{value:"2. FFmpeg Provider (JavaCV)",id:"2-ffmpeg-provider-javacv",level:3},{value:"3. Disable DPI Awareness (JVM Flag)",id:"3-disable-dpi-awareness-jvm-flag",level:3},{value:"Configuration by Use Case",id:"configuration-by-use-case",level:2},{value:"High-DPI Windows Laptop",id:"high-dpi-windows-laptop",level:3},{value:"4K Monitor with Scaling",id:"4k-monitor-with-scaling",level:3},{value:"Multi-Monitor Setup",id:"multi-monitor-setup",level:3},{value:"CI/CD Environment",id:"cicd-environment",level:3},{value:"Detecting Your Setup",id:"detecting-your-setup",level:2},{value:"Check Current Resolution",id:"check-current-resolution",level:3},{value:"Manual Detection",id:"manual-detection",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Symptom: Pattern matching fails",id:"symptom-pattern-matching-fails",level:3},{value:"Symptom: Captures are blurry after scaling",id:"symptom-captures-are-blurry-after-scaling",level:3},{value:"Symptom: Wrong expected resolution",id:"symptom-wrong-expected-resolution",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Always Test Your Resolution",id:"1-always-test-your-resolution",level:3},{value:"2. Create Patterns at Consistent Resolution",id:"2-create-patterns-at-consistent-resolution",level:3},{value:"3. Document Your Setup",id:"3-document-your-setup",level:3},{value:"4. Handle Multiple Resolutions",id:"4-handle-multiple-resolutions",level:3},{value:"Platform-Specific Notes",id:"platform-specific-notes",level:2},{value:"Windows",id:"windows",level:3},{value:"macOS",id:"macos",level:3},{value:"Linux",id:"linux",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dpi-scaling-and-resolution-guide",children:"DPI Scaling and Resolution Guide"})}),"\n",(0,t.jsx)(n.h2,{id:"the-problem",children:"The Problem"}),"\n",(0,t.jsxs)(n.p,{children:["Java 21 introduced DPI awareness, which causes screen captures to return ",(0,t.jsx)(n.strong,{children:"logical resolution"})," instead of ",(0,t.jsx)(n.strong,{children:"physical resolution"})," when Windows display scaling is enabled."]}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Physical Monitor"}),": 1920\xd71080 pixels"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Windows Scaling"}),": 125%"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Java 21 Captures"}),": 1536\xd7864 pixels (logical resolution)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pattern Images"}),": 1920\xd71080 pixels (physical resolution)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Result"}),": Pattern matching fails! \u274c"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"understanding-resolution-types",children:"Understanding Resolution Types"}),"\n",(0,t.jsx)(n.h3,{id:"physical-resolution",children:"Physical Resolution"}),"\n",(0,t.jsx)(n.p,{children:"The actual number of pixels on your monitor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Example: 1920\xd71080, 2560\xd71440, 3840\xd72160"}),"\n",(0,t.jsx)(n.li,{children:"What pattern images are usually created at"}),"\n",(0,t.jsx)(n.li,{children:"What Java 8 captures"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"logical-resolution",children:"Logical Resolution"}),"\n",(0,t.jsx)(n.p,{children:"The scaled resolution that applications see."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Formula: Physical Resolution \xf7 Scaling Factor"}),"\n",(0,t.jsx)(n.li,{children:"Example: 1920\xd71080 \xf7 1.25 = 1536\xd7864"}),"\n",(0,t.jsx)(n.li,{children:"What Java 21+ captures by default"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"common-scaling-scenarios",children:"Common Scaling Scenarios"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Windows Scaling"}),(0,t.jsx)(n.th,{children:"Physical"}),(0,t.jsx)(n.th,{children:"Logical"}),(0,t.jsx)(n.th,{children:"Scale Factor"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"100%"}),(0,t.jsx)(n.td,{children:"1920\xd71080"}),(0,t.jsx)(n.td,{children:"1920\xd71080"}),(0,t.jsx)(n.td,{children:"1.0"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"125%"}),(0,t.jsx)(n.td,{children:"1920\xd71080"}),(0,t.jsx)(n.td,{children:"1536\xd7864"}),(0,t.jsx)(n.td,{children:"1.25"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"150%"}),(0,t.jsx)(n.td,{children:"1920\xd71080"}),(0,t.jsx)(n.td,{children:"1280\xd7720"}),(0,t.jsx)(n.td,{children:"1.5"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"175%"}),(0,t.jsx)(n.td,{children:"1920\xd71080"}),(0,t.jsx)(n.td,{children:"1097\xd7617"}),(0,t.jsx)(n.td,{children:"1.75"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"200%"}),(0,t.jsx)(n.td,{children:"1920\xd71080"}),(0,t.jsx)(n.td,{children:"960\xd7540"}),(0,t.jsx)(n.td,{children:"2.0"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"solution-brobots-approach",children:"Solution: Brobot's Approach"}),"\n",(0,t.jsx)(n.p,{children:"Brobot provides automatic DPI detection and compensation through two key settings:"}),"\n",(0,t.jsx)(n.h3,{id:"default-configuration-recommended",children:"Default Configuration (Recommended)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# Enable DPI awareness for auto-detection to work\r\nbrobot.dpi.disable=false\r\n\r\n# Enable automatic DPI detection and pattern scaling\r\nbrobot.dpi.resize-factor=auto\r\n\r\n# Use SikuliX as the capture provider\r\nbrobot.capture.provider=SIKULIX\n"})}),"\n",(0,t.jsx)(n.p,{children:"This configuration:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Keeps DPI awareness enabled"})," - Allows detection of Windows scaling"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Auto-detects scaling"})," - Automatically calculates pattern resize factor"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Adjusts patterns"})," - Scales patterns to match logical resolution"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"how-it-works",children:"How It Works"}),"\n",(0,t.jsxs)(n.p,{children:["When DPI awareness is ",(0,t.jsx)(n.strong,{children:"enabled"})," (",(0,t.jsx)(n.code,{children:"brobot.dpi.disable=false"}),"):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Java captures at ",(0,t.jsx)(n.strong,{children:"logical resolution"})," (e.g., 1536\xd7864 with 125% scaling)"]}),"\n",(0,t.jsxs)(n.li,{children:["Auto-detector ",(0,t.jsx)(n.strong,{children:"detects the scaling"})," (e.g., 125% = 1.25x)"]}),"\n",(0,t.jsxs)(n.li,{children:["Patterns are ",(0,t.jsx)(n.strong,{children:"automatically resized"})," (scaled by 0.8x to match)"]}),"\n",(0,t.jsx)(n.li,{children:"Pattern matching works correctly! \u2705"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Brobot provides multiple solutions to handle DPI scaling:"}),"\n",(0,t.jsx)(n.h3,{id:"1-robot-provider-with-scaling-default",children:"1. Robot Provider with Scaling (Default)"}),"\n",(0,t.jsx)(n.p,{children:"The Robot provider automatically detects DPI scaling and compensates by scaling captured images to physical resolution."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# Automatically scales to physical resolution\r\nbrobot.capture.provider=ROBOT\r\nbrobot.capture.robot.scale-to-physical=true\r\nbrobot.capture.robot.expected-physical-width=1920\r\nbrobot.capture.robot.expected-physical-height=1080\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"How it works:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Captures at logical resolution (e.g., 1536\xd7864)"}),"\n",(0,t.jsx)(n.li,{children:"Detects scaling factor (e.g., 1.25)"}),"\n",(0,t.jsx)(n.li,{children:"Scales image to physical resolution (1920\xd71080)"}),"\n",(0,t.jsx)(n.li,{children:"Pattern matching works! \u2705"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-ffmpeg-provider-javacv",children:"2. FFmpeg Provider (JavaCV)"}),"\n",(0,t.jsx)(n.p,{children:"FFmpeg captures at true physical resolution without any scaling needed."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# True physical resolution capture\r\nbrobot.capture.provider=FFMPEG\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Advantages:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No scaling artifacts"}),"\n",(0,t.jsx)(n.li,{children:"Always physical resolution"}),"\n",(0,t.jsx)(n.li,{children:"Uses bundled JavaCV (no external installation)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-disable-dpi-awareness-jvm-flag",children:"3. Disable DPI Awareness (JVM Flag)"}),"\n",(0,t.jsx)(n.p,{children:"You can disable Java's DPI awareness entirely:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"java -Dsun.java2d.dpiaware=false -jar myapp.jar\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," This must be set as a JVM argument, not in code."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-by-use-case",children:"Configuration by Use Case"}),"\n",(0,t.jsx)(n.h3,{id:"high-dpi-windows-laptop",children:"High-DPI Windows Laptop"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# Robot with automatic scaling\r\nbrobot.capture.provider=ROBOT\r\nbrobot.capture.robot.scale-to-physical=true\r\nbrobot.capture.robot.expected-physical-width=1920\r\nbrobot.capture.robot.expected-physical-height=1080\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4k-monitor-with-scaling",children:"4K Monitor with Scaling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# Adjust expected resolution\r\nbrobot.capture.provider=ROBOT\r\nbrobot.capture.robot.scale-to-physical=true\r\nbrobot.capture.robot.expected-physical-width=3840\r\nbrobot.capture.robot.expected-physical-height=2160\n"})}),"\n",(0,t.jsx)(n.h3,{id:"multi-monitor-setup",children:"Multi-Monitor Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# FFmpeg handles multi-monitor well\r\nbrobot.capture.provider=FFMPEG\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cicd-environment",children:"CI/CD Environment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# Auto-detect and adapt\r\nbrobot.capture.provider=AUTO\r\nbrobot.capture.prefer-physical=true\n"})}),"\n",(0,t.jsx)(n.h2,{id:"detecting-your-setup",children:"Detecting Your Setup"}),"\n",(0,t.jsx)(n.h3,{id:"check-current-resolution",children:"Check Current Resolution"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Autowired\r\nprivate CaptureConfiguration config;\r\n\r\n// Print detailed configuration\r\nconfig.printConfigurationReport();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"manual-detection",children:"Manual Detection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Get screen dimensions\r\nDimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\r\nSystem.out.println("Logical: " + screenSize.width + "\xd7" + screenSize.height);\r\n\r\n// Check for scaling\r\nGraphicsConfiguration gc = GraphicsEnvironment\r\n    .getLocalGraphicsEnvironment()\r\n    .getDefaultScreenDevice()\r\n    .getDefaultConfiguration();\r\n    \r\ndouble scale = gc.getDefaultTransform().getScaleX();\r\nSystem.out.println("Scale Factor: " + scale);\r\n\r\n// Calculate physical resolution\r\nint physicalWidth = (int)(screenSize.width * scale);\r\nint physicalHeight = (int)(screenSize.height * scale);\r\nSystem.out.println("Physical: " + physicalWidth + "\xd7" + physicalHeight);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"symptom-pattern-matching-fails",children:"Symptom: Pattern matching fails"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Diagnosis:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'BufferedImage capture = captureService.captureScreen();\r\nSystem.out.println("Captured: " + capture.getWidth() + "\xd7" + capture.getHeight());\r\n// If this shows 1536\xd7864 instead of 1920\xd71080, you have scaling issues\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"brobot.capture.robot.scale-to-physical=true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"symptom-captures-are-blurry-after-scaling",children:"Symptom: Captures are blurry after scaling"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution:"})," Use FFmpeg for true physical capture:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"brobot.capture.provider=FFMPEG\n"})}),"\n",(0,t.jsx)(n.h3,{id:"symptom-wrong-expected-resolution",children:"Symptom: Wrong expected resolution"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution:"})," Update to match your monitor:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"brobot.capture.robot.expected-physical-width=2560\r\nbrobot.capture.robot.expected-physical-height=1440\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"1-always-test-your-resolution",children:"1. Always Test Your Resolution"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@PostConstruct\r\npublic void verifyResolution() {\r\n    BufferedImage test = captureService.captureScreen();\r\n    System.out.println("Capture resolution: " + \r\n        test.getWidth() + "\xd7" + test.getHeight());\r\n    \r\n    if (test.getWidth() != 1920) {\r\n        System.out.println("Warning: Not capturing at expected resolution!");\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-create-patterns-at-consistent-resolution",children:"2. Create Patterns at Consistent Resolution"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always create pattern images at physical resolution"}),"\n",(0,t.jsx)(n.li,{children:"Or always create them at logical resolution"}),"\n",(0,t.jsx)(n.li,{children:"Be consistent across your pattern library"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-document-your-setup",children:"3. Document Your Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# This application expects patterns at 1920\xd71080 physical resolution\r\n# Ensure capture is configured to match:\r\nbrobot.capture.provider=ROBOT\r\nbrobot.capture.robot.scale-to-physical=true\r\nbrobot.capture.robot.expected-physical-width=1920\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-handle-multiple-resolutions",children:"4. Handle Multiple Resolutions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// Detect and adapt to different resolutions\r\nint screenWidth = captureService.captureScreen().getWidth();\r\n\r\nif (screenWidth == 1920) {\r\n    // Full HD setup\r\n} else if (screenWidth == 2560) {\r\n    // 2K setup\r\n} else if (screenWidth == 3840) {\r\n    // 4K setup\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"platform-specific-notes",children:"Platform-Specific Notes"}),"\n",(0,t.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Most likely to have DPI scaling enabled"}),"\n",(0,t.jsx)(n.li,{children:"Check: Settings \u2192 Display \u2192 Scale and layout"}),"\n",(0,t.jsx)(n.li,{children:"Common scales: 125%, 150%, 175%"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"macos",children:"macOS"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Retina displays use 2\xd7 scaling"}),"\n",(0,t.jsx)(n.li,{children:"JavaCV FFmpeg handles this well"}),"\n",(0,t.jsx)(n.li,{children:"Consider using FFmpeg provider"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Less common to have scaling issues"}),"\n",(0,t.jsxs)(n.li,{children:["Check with: ",(0,t.jsx)(n.code,{children:"xrandr --current"})]}),"\n",(0,t.jsx)(n.li,{children:"Robot provider usually sufficient"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"The Problem:"})," Java 21 captures at logical resolution with DPI scaling"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"The Solution:"})," Brobot automatically handles it via:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Robot provider with scaling compensation"}),"\n",(0,t.jsx)(n.li,{children:"FFmpeg provider with true physical capture"}),"\n",(0,t.jsx)(n.li,{children:"Configurable resolution expectations"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Quick Fix:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# Just add this to application.properties:\r\nbrobot.capture.provider=ROBOT\r\nbrobot.capture.robot.scale-to-physical=true\n"})}),"\n",(0,t.jsx)(n.p,{children:"Your pattern matching will work correctly regardless of DPI scaling! \u2705"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(96540);const t={},s=r.createContext(t);function l(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9170],{20441:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"core-library/guides/action-refactoring-migration","title":"Action Refactoring Migration Guide","description":"Overview","source":"@site/docs/03-core-library/guides/action-refactoring-migration.md","sourceDirName":"03-core-library/guides","slug":"/core-library/guides/action-refactoring-migration","permalink":"/brobot/docs/core-library/guides/action-refactoring-migration","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/guides/action-refactoring-migration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"ActionOptions to ActionConfig Migration - Work Complete","permalink":"/brobot/docs/core-library/guides/MIGRATION_WORK_COMPLETE"},"next":{"title":"Claude Automator Expected Console Output","permalink":"/brobot/docs/core-library/guides/claude-automator-console-output"}}');var t=i(74848),l=i(28453);const s={},a="Action Refactoring Migration Guide",c={},r=[{value:"Overview",id:"overview",level:2},{value:"Key Changes",id:"key-changes",level:2},{value:"1. Separation of Find from Actions",id:"1-separation-of-find-from-actions",level:3},{value:"2. Pure Actions",id:"2-pure-actions",level:3},{value:"3. Enhanced Conditional Action Chains",id:"3-enhanced-conditional-action-chains",level:3},{value:"4. Convenience Methods",id:"4-convenience-methods",level:3},{value:"Migration Examples",id:"migration-examples",level:2},{value:"Example 1: Click on an Image",id:"example-1-click-on-an-image",level:3},{value:"Example 2: Type in a Field",id:"example-2-type-in-a-field",level:3},{value:"Example 3: Highlight Multiple Regions",id:"example-3-highlight-multiple-regions",level:3},{value:"Example 4: Complex Action Chains",id:"example-4-complex-action-chains",level:3},{value:"Using Pure Actions Directly",id:"using-pure-actions-directly",level:2},{value:"Backward Compatibility",id:"backward-compatibility",level:2},{value:"Deprecation Timeline",id:"deprecation-timeline",level:3},{value:"Using Composite Actions",id:"using-composite-actions",level:3},{value:"Benefits of Migration",id:"benefits-of-migration",level:2},{value:"Common Patterns",id:"common-patterns",level:2},{value:"Pattern 1: Find Once, Act Multiple Times",id:"pattern-1-find-once-act-multiple-times",level:3},{value:"Pattern 2: Conditional Actions",id:"pattern-2-conditional-actions",level:3},{value:"Pattern 3: Validation Chains",id:"pattern-3-validation-chains",level:3},{value:"Migration Checklist",id:"migration-checklist",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"action-refactoring-migration-guide",children:"Action Refactoring Migration Guide"})}),"\n",(0,t.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(e.p,{children:"Brobot is undergoing a significant architectural improvement to separate Find operations from other actions. This refactoring enables better testing, cleaner code, and more flexible action composition. This guide will help you migrate your code to use the new pure actions and conditional action chains."}),"\n",(0,t.jsx)(e.h2,{id:"key-changes",children:"Key Changes"}),"\n",(0,t.jsx)(e.h3,{id:"1-separation-of-find-from-actions",children:"1. Separation of Find from Actions"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Before"}),": Actions like Click, Highlight, and Type had Find operations embedded within them."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"// Old approach - Find is hidden inside Click\naction.click(stateImage);\n"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"After"}),": Find is now a separate operation that can be chained with pure actions."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"// New approach - Explicit Find then Click\nConditionalActionChain.find(findOptions)\n    .ifFound(clickOptions)\n    .perform(action, objectCollection);\n"})}),"\n",(0,t.jsx)(e.h3,{id:"2-pure-actions",children:"2. Pure Actions"}),"\n",(0,t.jsx)(e.p,{children:'We\'ve introduced "pure" actions that only perform their core function without any Find operations:'}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"ClickV2"})," - Pure click operations"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"HighlightV2"})," - Pure highlight operations"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"TypeV2"})," - Pure typing operations"]}),"\n",(0,t.jsx)(e.li,{children:"More pure actions coming soon"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"3-enhanced-conditional-action-chains",children:"3. Enhanced Conditional Action Chains"}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"ConditionalActionChain"})," class has been replaced with ",(0,t.jsx)(e.code,{children:"ConditionalActionChain"}),", which provides:"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Convenience Methods"}),": ",(0,t.jsx)(e.code,{children:"ifFoundClick()"}),", ",(0,t.jsx)(e.code,{children:"ifFoundType()"}),", ",(0,t.jsx)(e.code,{children:"alwaysClick()"})," etc."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Better Performance"}),": Optimized execution paths"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Enhanced Debugging"}),": Improved logging and error reporting"]}),"\n"]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Migration Note:"})," ",(0,t.jsx)(e.code,{children:"ConditionalActionChain"})," is now deprecated. Update your imports to use ",(0,t.jsx)(e.code,{children:"ConditionalActionChain"})," for all new development."]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"4-convenience-methods",children:"4. Convenience Methods"}),"\n",(0,t.jsx)(e.p,{children:"The Action class now provides convenience methods for common operations:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'// Simple one-line operations\naction.perform(ActionType.CLICK, location);\naction.perform(ActionType.HIGHLIGHT, region);\naction.perform(ActionType.TYPE, "Hello World");\n'})}),"\n",(0,t.jsx)(e.h2,{id:"migration-examples",children:"Migration Examples"}),"\n",(0,t.jsx)(e.h3,{id:"example-1-click-on-an-image",children:"Example 1: Click on an Image"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Old Code"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"ClickOptions options = new ClickOptions.Builder()\n    .setClickType(ClickOptions.Type.LEFT)\n    .build();\naction.perform(options, stateImage);\n"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"New Code"})," (Enhanced):"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"ConditionalActionChain.find(new PatternFindOptions.Builder().build())\n    .ifFoundClick()\n    .perform(action, new ObjectCollection.Builder()\n        .withImages(stateImage)\n        .build());\n"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"New Code"})," (Convenience):"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"// First find the image\nActionResult findResult = action.find(stateImage);\n// Then click if found\nif (findResult.isSuccess()) {\n    action.perform(ActionType.CLICK, findResult.getMatchList().get(0).getRegion());\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"example-2-type-in-a-field",children:"Example 2: Type in a Field"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Old Code"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'TypeOptions options = new TypeOptions.Builder()\n    .setText("Hello World")\n    .build();\naction.perform(options, textFieldImage);\n'})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"New Code"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'ConditionalActionChain.find(new PatternFindOptions.Builder().build())\n    .ifFoundType("Hello World")\n    .perform(action, new ObjectCollection.Builder()\n        .withImages(textFieldImage)\n        .build());\n'})}),"\n",(0,t.jsx)(e.h3,{id:"example-3-highlight-multiple-regions",children:"Example 3: Highlight Multiple Regions"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Old Code"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"HighlightOptions options = new HighlightOptions.Builder()\n    .setHighlightDuration(2.0)\n    .build();\naction.perform(options, objectCollection);\n"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"New Code"})," (Direct highlight without Find):"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"// If you already have regions to highlight\naction.perform(ActionType.HIGHLIGHT, region1, region2, region3);\n"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"New Code"})," (Find then highlight):"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"ConditionalActionChain.find(findOptions)\n    .ifFound(new HighlightOptions.Builder()\n        .setHighlightDuration(2.0)\n        .build())\n    .perform(action, objectCollection);\n"})}),"\n",(0,t.jsx)(e.h3,{id:"example-4-complex-action-chains",children:"Example 4: Complex Action Chains"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Old Code"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"// Had to use multiple action calls\nActionResult result1 = action.find(loginButton);\nif (result1.isSuccess()) {\n    action.click(loginButton);\n    action.type(usernameField, username);\n    action.type(passwordField, password);\n    action.click(submitButton);\n}\n"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"New Code"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"ConditionalActionChain.find(loginButton)\n    .ifFoundClick()\n    .then(find(usernameField))\n    .ifFoundType(username)\n    .then(find(passwordField))\n    .ifFoundType(password)\n    .then(find(submitButton))\n    .ifFoundClick()\n    .perform(action, objectCollection);\n"})}),"\n",(0,t.jsx)(e.h2,{id:"using-pure-actions-directly",children:"Using Pure Actions Directly"}),"\n",(0,t.jsx)(e.p,{children:"Pure actions can be used directly when you already have locations or regions:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'// Direct click on a known location\nLocation buttonLocation = new Location(100, 200);\naction.perform(ActionType.CLICK, buttonLocation);\n\n// Direct highlight on a region\nRegion area = new Region(50, 50, 200, 100);\naction.perform(ActionType.HIGHLIGHT, area);\n\n// Type at current cursor position\naction.perform(ActionType.TYPE, "Hello World");\n'})}),"\n",(0,t.jsx)(e.h2,{id:"backward-compatibility",children:"Backward Compatibility"}),"\n",(0,t.jsx)(e.h3,{id:"deprecation-timeline",children:"Deprecation Timeline"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Version 2.0"}),": Introduction of pure actions and ConditionalActionChain"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Old actions still work but show deprecation warnings"}),"\n",(0,t.jsx)(e.li,{children:"New actions available as V2 versions (ClickV2, TypeV2, etc.)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Version 2.5"}),": Old actions moved to legacy package"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Import statements will need updating"}),"\n",(0,t.jsx)(e.li,{children:"Functionality remains the same"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Version 3.0"}),": Legacy actions removed"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Full migration required"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"using-composite-actions",children:"Using Composite Actions"}),"\n",(0,t.jsx)(e.p,{children:"For users who prefer the old single-method approach, we provide composite actions:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"// Composite action that combines Find and Click\nFindAndClick findAndClick = new FindAndClick(findOptions, clickOptions);\naction.perform(findAndClick, stateImage);\n"})}),"\n",(0,t.jsx)(e.h2,{id:"benefits-of-migration",children:"Benefits of Migration"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Better Testing"}),": Test click logic without mocking Find operations"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Performance"}),": Find once, act multiple times on the same matches"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Clarity"}),": Explicit separation between finding and acting"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Flexibility"}),": Build complex conditional chains easily"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Debugging"}),": Clear distinction between find failures and action failures"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,t.jsx)(e.h3,{id:"pattern-1-find-once-act-multiple-times",children:"Pattern 1: Find Once, Act Multiple Times"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"ActionResult matches = action.find(targetImage);\nif (matches.isSuccess()) {\n    for (Match match : matches.getMatchList()) {\n        // Highlight with pause after\n        HighlightOptions highlight = new HighlightOptions.Builder()\n            .setPauseAfterEnd(0.5)  // 500ms pause after highlighting\n            .build();\n        action.perform(highlight, match.getRegion());\n        \n        // Then click\n        action.perform(ActionType.CLICK, match.getRegion());\n    }\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"pattern-2-conditional-actions",children:"Pattern 2: Conditional Actions"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'ConditionalActionChain.find(saveButton)\n    .ifFoundClick()\n    .ifNotFoundLog("Save button not found, trying alt method")\n    .ifNotFound(find(altSaveButton))\n    .ifFoundClick()\n    .always(takeScreenshot())\n    .perform(action, objectCollection);\n'})}),"\n",(0,t.jsx)(e.h3,{id:"pattern-3-validation-chains",children:"Pattern 3: Validation Chains"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'ConditionalActionChain.find(dialogBox)\n    .ifFoundHighlight()\n    .then(find(confirmButton))\n    .ifFoundClick()\n    .then(waitVanish(dialogBox))\n    .ifNotFoundDo(result -> { throw new RuntimeException("Dialog didn\'t close"); })\n    .perform(action, objectCollection);\n'})}),"\n",(0,t.jsx)(e.h2,{id:"migration-checklist",children:"Migration Checklist"}),"\n",(0,t.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","Identify all uses of embedded Find in actions"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","Replace with ConditionalActionChain or pure actions"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","Update imports: ",(0,t.jsx)(e.code,{children:"ConditionalActionChain"})," \u2192 ",(0,t.jsx)(e.code,{children:"ConditionalActionChain"})]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","Update method calls to use convenience methods (e.g., ",(0,t.jsx)(e.code,{children:"ifFoundClick()"}),")"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","Test thoroughly - behavior should be identical"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","Consider using convenience methods for simple cases"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","Update any custom actions to follow the new pattern"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["See the ",(0,t.jsx)(e.a,{href:"/brobot/docs/core-library/action-config/pure-actions-api",children:"API Reference"})," for detailed documentation"]}),"\n",(0,t.jsxs)(e.li,{children:["Check ",(0,t.jsx)(e.a,{href:"/brobot/docs/core-library/action-config/conditional-chains-examples",children:"Examples"})," for more usage patterns"]}),"\n",(0,t.jsxs)(e.li,{children:["File issues at the ",(0,t.jsx)(e.a,{href:"https://github.com/jspinak/brobot",children:"Brobot GitHub repository"})]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Start with high-impact areas of your code"}),"\n",(0,t.jsx)(e.li,{children:"Migrate incrementally - both old and new APIs work together"}),"\n",(0,t.jsx)(e.li,{children:"Use the deprecation warnings as a guide"}),"\n",(0,t.jsx)(e.li,{children:"Take advantage of the new flexibility to simplify complex workflows"}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>a});var o=i(96540);const t={},l=o.createContext(t);function s(n){const e=o.useContext(l);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),o.createElement(l.Provider,{value:e},n.children)}}}]);
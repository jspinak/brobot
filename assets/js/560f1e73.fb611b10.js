"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2316],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var r=i(96540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},34096:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"no-code-automation/desktop-runner/enhanced-illustration-features","title":"Enhanced Illustration Features","description":"The Desktop Runner extends Brobot\'s core illustration capabilities with advanced visualization, analytics, and sharing features designed for comprehensive automation analysis and documentation.","source":"@site/docs/02-no-code-automation/desktop-runner/enhanced-illustration-features.md","sourceDirName":"02-no-code-automation/desktop-runner","slug":"/no-code-automation/desktop-runner/enhanced-illustration-features","permalink":"/brobot/docs/no-code-automation/desktop-runner/enhanced-illustration-features","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/02-no-code-automation/desktop-runner/enhanced-illustration-features.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"Enhanced Illustration Features"},"sidebar":"docSidebar","previous":{"title":"floranext-project","permalink":"/brobot/docs/no-code-automation/desktop-runner/example-configuration/floranext-project"},"next":{"title":"Brobot Configuration Website","permalink":"/brobot/docs/no-code-automation/configuration-website/website-overview"}}');var t=i(74848),s=i(28453);const a={sidebar_position:10,title:"Enhanced Illustration Features"},l="Enhanced Illustration Features",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Interactive Illustration Viewer",id:"interactive-illustration-viewer",level:2},{value:"Features",id:"features",level:3},{value:"Layer Management",id:"layer-management",level:3},{value:"User Interactions",id:"user-interactions",level:3},{value:"Real-time Illustration Streaming",id:"real-time-illustration-streaming",level:2},{value:"Stream Service Configuration",id:"stream-service-configuration",level:3},{value:"Stream Panel Usage",id:"stream-panel-usage",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Analytics Dashboard",id:"analytics-dashboard",level:2},{value:"Dashboard Components",id:"dashboard-components",level:3},{value:"Using the Analytics Service",id:"using-the-analytics-service",level:3},{value:"Custom Analytics",id:"custom-analytics",level:3},{value:"Web-based Illustration Gallery",id:"web-based-illustration-gallery",level:2},{value:"Gallery Service Features",id:"gallery-service-features",level:3},{value:"Web Gallery Export",id:"web-gallery-export",level:3},{value:"Gallery Management",id:"gallery-management",level:3},{value:"Export and Sharing Features",id:"export-and-sharing-features",level:2},{value:"Export Formats",id:"export-formats",level:3},{value:"Export Service Usage",id:"export-service-usage",level:3},{value:"Sharing Capabilities",id:"sharing-capabilities",level:3},{value:"Integration with Core Library",id:"integration-with-core-library",level:2},{value:"Bridging Library and Runner",id:"bridging-library-and-runner",level:3},{value:"Configuration Synchronization",id:"configuration-synchronization",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Performance Optimization",id:"performance-optimization-1",level:3},{value:"Quality Management",id:"quality-management",level:3},{value:"Organization and Documentation",id:"organization-and-documentation",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Mode",id:"debug-mode",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"enhanced-illustration-features",children:"Enhanced Illustration Features"})}),"\n",(0,t.jsx)(n.p,{children:"The Desktop Runner extends Brobot's core illustration capabilities with advanced visualization, analytics, and sharing features designed for comprehensive automation analysis and documentation."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The enhanced illustration system in Desktop Runner provides:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Interactive Viewer"})," - Zoom, pan, and layer control for detailed analysis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Real-time Streaming"})," - Live visualization during automation execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Analytics Dashboard"})," - Performance metrics and pattern analysis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Web Gallery"})," - Shareable HTML galleries for documentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Export & Sharing"})," - Multiple export formats and sharing options"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"interactive-illustration-viewer",children:"Interactive Illustration Viewer"}),"\n",(0,t.jsx)(n.h3,{id:"features",children:"Features"}),"\n",(0,t.jsx)(n.p,{children:"The interactive viewer provides rich visualization capabilities:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Using the illustration viewer\nIllustrationViewer viewer = new IllustrationViewer();\n\n// Load an illustration with metadata\nviewer.loadIllustration(image, metadata);\n\n// Control layers\nviewer.addLayer(new IllustrationLayer("Search Regions", 1));\nviewer.addLayer(new IllustrationLayer("Matches", 2));\nviewer.addLayer(new IllustrationLayer("Actions", 3));\n\n// Zoom and pan programmatically\nviewer.setZoomLevel(2.0); // 200% zoom\nviewer.setPanX(100);\nviewer.setPanY(50);\n\n// Export current view\nviewer.export(exportedImage -> {\n    // Handle exported image\n    saveImage(exportedImage);\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"layer-management",children:"Layer Management"}),"\n",(0,t.jsx)(n.p,{children:"Layers enable composition of complex visualizations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'IllustrationLayer matchLayer = new IllustrationLayer("Matches", 2);\nmatchLayer.setDrawingConsumer(gc -> {\n    // Custom drawing logic\n    gc.setStroke(Color.MAGENTA);\n    gc.setLineWidth(3.0);\n    matches.forEach(match -> \n        gc.strokeRect(match.getX(), match.getY(), \n                     match.getWidth(), match.getHeight())\n    );\n});\nmatchLayer.setOpacity(0.8); // Semi-transparent\nviewer.addLayer(matchLayer);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"user-interactions",children:"User Interactions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Mouse Controls"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Left-click drag: Pan the view"}),"\n",(0,t.jsx)(n.li,{children:"Scroll wheel: Zoom in/out around cursor"}),"\n",(0,t.jsx)(n.li,{children:"Double-click: Fit illustration to canvas"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Keyboard Shortcuts"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"+"}),"/",(0,t.jsx)(n.code,{children:"-"}),": Zoom in/out"]}),"\n",(0,t.jsx)(n.li,{children:"Arrow keys: Pan view"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Space"}),": Toggle layer visibility"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Esc"}),": Reset view"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"real-time-illustration-streaming",children:"Real-time Illustration Streaming"}),"\n",(0,t.jsx)(n.h3,{id:"stream-service-configuration",children:"Stream Service Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Configuration\npublic class StreamConfig {\n    \n    @Bean\n    public IllustrationStreamService streamService(EventBus eventBus) {\n        IllustrationStreamService service = new IllustrationStreamService(eventBus);\n        \n        // Configure stream consumer\n        service.setStreamConsumer(event -> {\n            // Process stream events\n            updateUI(event.getImage(), event.getMetadata());\n        });\n        \n        return service;\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"stream-panel-usage",children:"Stream Panel Usage"}),"\n",(0,t.jsx)(n.p,{children:"The stream panel provides live visualization during automation:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// Create stream panel\nIllustrationStreamPanel streamPanel = new IllustrationStreamPanel(\n    streamService, eventBus);\n\n// Configure filtering\nstreamPanel.setFilter(FilterMode.FAILURES_ONLY);\n\n// Control streaming\nstreamPanel.pause(); // Pause updates\nstreamPanel.resume(); // Resume updates\nstreamPanel.clearHistory(); // Clear history\n"})}),"\n",(0,t.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,t.jsx)(n.p,{children:"The streaming system includes automatic performance optimization:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Queue Management"}),": Limits queue size to prevent memory issues"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rate Limiting"}),": Minimum interval between UI updates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Priority Processing"}),": High-priority events (errors) processed first"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automatic Throttling"}),": Reduces update frequency under high load"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"analytics-dashboard",children:"Analytics Dashboard"}),"\n",(0,t.jsx)(n.h3,{id:"dashboard-components",children:"Dashboard Components"}),"\n",(0,t.jsx)(n.p,{children:"The analytics dashboard provides comprehensive insights:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Summary Metrics"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Total illustrations generated"}),"\n",(0,t.jsx)(n.li,{children:"Overall success rate"}),"\n",(0,t.jsx)(n.li,{children:"Average processing time"}),"\n",(0,t.jsx)(n.li,{children:"Queue health status"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Charts and Visualizations"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Throughput over time (line chart)"}),"\n",(0,t.jsx)(n.li,{children:"Action distribution (pie chart)"}),"\n",(0,t.jsx)(n.li,{children:"Success rates by action (bar chart)"}),"\n",(0,t.jsx)(n.li,{children:"Performance trends (multi-series line chart)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Detailed Tables"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Action statistics with counts and timings"}),"\n",(0,t.jsx)(n.li,{children:"Quality metrics with trends"}),"\n",(0,t.jsx)(n.li,{children:"Session summaries"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"using-the-analytics-service",children:"Using the Analytics Service"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Service\npublic class AnalyticsExample {\n    \n    @Autowired\n    private IllustrationAnalyticsService analyticsService;\n    \n    public void recordEvent(IllustrationStreamEvent event) {\n        // Record illustration event\n        analyticsService.recordIllustrationEvent(event);\n        \n        // Get current metrics\n        AnalyticsSnapshot snapshot = analyticsService.getCurrentSnapshot();\n        \n        // Access specific metrics\n        double successRate = snapshot.getOverallSuccessRate();\n        double avgProcessingTime = snapshot.getAverageProcessingTime();\n        Map<String, Double> successByAction = snapshot.getSuccessRatesByAction();\n        \n        // Monitor performance\n        if (snapshot.getCurrentQueueSize() > 50) {\n            log.warn("High queue size: {}", snapshot.getCurrentQueueSize());\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"custom-analytics",children:"Custom Analytics"}),"\n",(0,t.jsx)(n.p,{children:"Extend analytics with custom metrics:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Track custom metrics\nanalyticsService.recordCustomMetric("custom_quality_score", 0.95);\n\n// Query historical data\nList<AnalyticsSnapshot> history = analyticsService.getHistoricalSnapshots(\n    LocalDateTime.now().minusHours(1), \n    LocalDateTime.now()\n);\n\n// Export analytics data\nanalyticsService.exportMetrics("analytics_report.csv");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"web-based-illustration-gallery",children:"Web-based Illustration Gallery"}),"\n",(0,t.jsx)(n.h3,{id:"gallery-service-features",children:"Gallery Service Features"}),"\n",(0,t.jsx)(n.p,{children:"The gallery service provides persistent storage and organization:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Service\npublic class GalleryUsage {\n    \n    @Autowired\n    private IllustrationGalleryService galleryService;\n    \n    public void saveToGallery(Image image, IllustrationMetadata metadata) {\n        // Save illustration\n        IllustrationEntity entity = galleryService.saveIllustration(\n            image, metadata, "session-123");\n        \n        // Add tags for organization\n        galleryService.addTags(entity.getId(), \n            Set.of("login-flow", "critical", "regression"));\n        \n        // Search illustrations\n        List<IllustrationEntity> results = galleryService.searchIllustrations(\n            SearchCriteria.builder()\n                .actionTypes(Set.of("CLICK", "TYPE"))\n                .successOnly(false) // Find failures\n                .startDate(LocalDateTime.now().minusDays(7))\n                .tags(Set.of("critical"))\n                .maxResults(50)\n                .build()\n        );\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"web-gallery-export",children:"Web Gallery Export"}),"\n",(0,t.jsx)(n.p,{children:"Generate static HTML galleries for sharing:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Export session as web gallery\nPath galleryPath = galleryService.exportWebGallery(\n    "session-123", \n    "/path/to/export/gallery"\n);\n\n// The gallery includes:\n// - Responsive grid layout\n// - Filtering by action type and status\n// - Lightbox for full-size viewing\n// - Search functionality\n// - Timeline view\n'})}),"\n",(0,t.jsx)(n.h3,{id:"gallery-management",children:"Gallery Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Get gallery statistics\nGalleryStatistics stats = galleryService.getStatistics();\nSystem.out.println("Total illustrations: " + stats.getTotalIllustrations());\nSystem.out.println("Storage used: " + stats.getStorageUsedMB() + " MB");\n\n// Cleanup old illustrations\ngalleryService.cleanupOldIllustrations(); // Respects max gallery size\n\n// Bulk operations\nList<Long> illustrationIds = Arrays.asList(1L, 2L, 3L);\ngalleryService.bulkAddTags(illustrationIds, Set.of("reviewed"));\ngalleryService.bulkDelete(illustrationIds);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"export-and-sharing-features",children:"Export and Sharing Features"}),"\n",(0,t.jsx)(n.h3,{id:"export-formats",children:"Export Formats"}),"\n",(0,t.jsx)(n.p,{children:"The export service supports multiple formats:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Image Formats"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"PNG (original quality)"}),"\n",(0,t.jsx)(n.li,{children:"JPEG (compressed)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Document Formats"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"PDF (printable reports)"}),"\n",(0,t.jsx)(n.li,{children:"Markdown (documentation)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Archive Formats"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"ZIP (batch export with metadata)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Future Formats"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Video (action sequence compilation)"}),"\n",(0,t.jsx)(n.li,{children:"GIF (animated sequences)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"export-service-usage",children:"Export Service Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Service\npublic class ExportExample {\n    \n    @Autowired\n    private IllustrationExportService exportService;\n    \n    public void exportIllustrations() {\n        // Single export\n        Path exported = exportService.exportSingle(\n            illustrationId, \n            ExportFormat.PNG, \n            "/path/to/output.png"\n        );\n        \n        // Batch export as ZIP\n        List<Long> ids = Arrays.asList(1L, 2L, 3L, 4L, 5L);\n        Path zipPath = exportService.exportBatch(ids, "/path/to/archive.zip");\n        \n        // Export as Markdown report\n        Path mdPath = exportService.exportAsMarkdown(\n            "session-123", \n            "/path/to/report.md", \n            true // Include embedded images\n        );\n        \n        // Generate PDF report\n        List<IllustrationEntity> illustrations = galleryService.getSessionIllustrations("session-123");\n        Path pdfPath = exportService.exportAsPdf(illustrations, Paths.get("/path/to/report.pdf"));\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"sharing-capabilities",children:"Sharing Capabilities"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Create shareable link\nString shareLink = exportService.createShareableLink("session-123");\n// Returns: http://localhost:8080/gallery/share/uuid\n\n// Configure sharing options\nShareOptions options = ShareOptions.builder()\n    .expirationHours(48)\n    .passwordProtected(true)\n    .password("secure123")\n    .allowDownload(true)\n    .build();\n\nString secureLink = exportService.createShareableLink("session-123", options);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-core-library",children:"Integration with Core Library"}),"\n",(0,t.jsx)(n.h3,{id:"bridging-library-and-runner",children:"Bridging Library and Runner"}),"\n",(0,t.jsx)(n.p,{children:"The Desktop Runner seamlessly integrates with the library's illustration system:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Component\npublic class IllustrationBridge {\n    \n    @Autowired\n    private IllustrationStreamService streamService;\n    \n    @EventListener\n    public void onLibraryIllustration(LibraryIllustrationEvent event) {\n        // Convert library format to runner format\n        Mat mat = event.getMat();\n        ActionResult result = event.getActionResult();\n        IllustrationContext context = event.getContext();\n        \n        // Forward to stream service\n        streamService.receiveIllustration(mat, result, context);\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configuration-synchronization",children:"Configuration Synchronization"}),"\n",(0,t.jsx)(n.p,{children:"Keep library and runner configurations in sync:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Configuration\npublic class IllustrationSyncConfig {\n    \n    @Bean\n    public IllustrationConfig illustrationConfig() {\n        // This config is used by both library and runner\n        return IllustrationConfig.builder()\n            .globalEnabled(true)\n            .actionEnabled(Action.FIND, true)\n            .actionEnabled(Action.CLICK, true)\n            .samplingRate(Action.MOVE, 0.1)\n            .qualityThreshold(0.8)\n            .batchConfig(BatchConfig.builder()\n                .maxBatchSize(20)\n                .flushInterval(Duration.ofSeconds(5))\n                .build())\n            .build();\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"performance-optimization-1",children:"Performance Optimization"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Use Appropriate Sampling Rates"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// High-frequency actions need lower sampling\nconfig.samplingRate(Action.MOVE, 0.05); // 5% sampling\nconfig.samplingRate(Action.FIND, 0.5);  // 50% sampling\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Enable Batching for Bulk Operations"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"config.batchConfig(BatchConfig.builder()\n    .maxBatchSize(50)\n    .flushOnStateTransition(true)\n    .build());\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Monitor Resource Usage"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"if (analyticsService.getCurrentSnapshot().getCurrentQueueSize() > 100) {\n    streamService.stopStreaming();\n    // Process queue before resuming\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"quality-management",children:"Quality Management"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Set Appropriate Quality Thresholds"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"config.qualityThreshold(0.75); // Only illustrate high-quality matches\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Use Context Filters"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'config.contextFilter("important_only", context -> \n    context.isFirstExecution() || \n    !context.getLastActionResult().isSuccess() ||\n    context.getPriority() == Priority.HIGH\n);\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"organization-and-documentation",children:"Organization and Documentation"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Use Meaningful Tags"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'galleryService.addTags(illustrationId, Set.of(\n    "feature-login",\n    "test-regression", \n    "priority-high",\n    "sprint-42"\n));\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Regular Cleanup"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Schedule periodic cleanup\n@Scheduled(cron = "0 0 2 * * ?") // 2 AM daily\npublic void cleanupGallery() {\n    galleryService.cleanupOldIllustrations();\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Export Documentation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Generate weekly reports\n@Scheduled(cron = "0 0 0 ? * MON") // Weekly on Monday\npublic void generateWeeklyReport() {\n    exportService.exportAsMarkdown(\n        getCurrentWeekSession(),\n        "reports/week-" + LocalDate.now() + ".md",\n        true\n    );\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"High Memory Usage"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Reduce ",(0,t.jsx)(n.code,{children:"maxQueueSize"})," in stream service"]}),"\n",(0,t.jsx)(n.li,{children:"Enable more aggressive batching"}),"\n",(0,t.jsx)(n.li,{children:"Lower quality threshold to reduce illustrations"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Slow UI Updates"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Increase ",(0,t.jsx)(n.code,{children:"minIntervalMs"})," in stream service"]}),"\n",(0,t.jsx)(n.li,{children:"Enable adaptive sampling"}),"\n",(0,t.jsx)(n.li,{children:"Reduce number of visible layers"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Export Failures"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check disk space for large exports"}),"\n",(0,t.jsx)(n.li,{children:"Verify file permissions"}),"\n",(0,t.jsx)(n.li,{children:"Ensure illustrations exist in gallery"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,t.jsx)(n.p,{children:"Enable detailed logging for troubleshooting:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# application.properties\nlogging.level.io.github.jspinak.brobot.runner.ui.illustration=DEBUG\nbrobot.illustration.debug=true\nbrobot.illustration.save-failed-exports=true\n"})}),"\n",(0,t.jsx)(n.p,{children:"The enhanced illustration features in Desktop Runner provide powerful tools for visualizing, analyzing, and documenting your automation workflows, making it easier to debug issues, demonstrate functionality, and maintain high-quality automation solutions."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9402],{28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var n=i(96540);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}},71005:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"API/state structure/attributes","title":"Attributes","description":"An attribute describes how an image should behave on a certain page. Attributes","source":"@site/versioned_docs/version-1.0.6/API/state structure/attributes.md","sourceDirName":"API/state structure","slug":"/API/state structure/attributes","permalink":"/brobot/docs/1.0.6/API/state structure/attributes","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/versioned_docs/version-1.0.6/API/state structure/attributes.md","tags":[],"version":"1.0.6","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docSidebar","previous":{"title":"Naming Conventions","permalink":"/brobot/docs/1.0.6/API/state structure/naming-conventions"},"next":{"title":"Image Analysis","permalink":"/brobot/docs/1.0.6/API/state structure/image-analysis"}}');var s=i(74848),a=i(28453);const r={sidebar_position:3},o="Attributes",l={},h=[{value:"APPEARS",id:"appears",level:2},{value:"APPEARS_EXCLUSIVELY",id:"appears_exclusively",level:2},{value:"DOESNT_APPEAR",id:"doesnt_appear",level:2},{value:"MULTIPLE_MATCHES",id:"multiple_matches",level:2},{value:"SINGLE_MATCH",id:"single_match",level:2},{value:"VARIABLE_LOCATION",id:"variable_location",level:2},{value:"FIXED_LOCATION",id:"fixed_location",level:2},{value:"DEFINE",id:"define",level:2},{value:"GROUP_DEFINE",id:"group_define",level:2},{value:"REGION",id:"region",level:2},{value:"TRANSFER",id:"transfer",level:2}];function c(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"attributes",children:"Attributes"})}),"\n",(0,s.jsxs)(t.p,{children:["An attribute describes how an image should behave on a certain page. Attributes\ncan be page specific (i.e. ",(0,s.jsx)(t.code,{children:"_m2,3"}),") or affect all screenshots (",(0,s.jsx)(t.code,{children:"_m"}),"). All Attributes\nare listed below with details on what they do and how they influence the State Structure."]}),"\n",(0,s.jsx)(t.h2,{id:"appears",children:"APPEARS"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: ",(0,s.jsx)(t.code,{children:"_"}),(0,s.jsx)(t.br,{}),"\n","The associated image should appear in the screenshots that are listed after the modifier.\nFor example, an image that should appear on screenshots 2 and 3 would have ",(0,s.jsx)(t.code,{children:"_2,3"})," in\nthe filename. An image that should appear in every screenshot will have just ",(0,s.jsx)(t.code,{children:"_"})," in the\nfilename without any screen numbers."]}),"\n",(0,s.jsx)(t.h2,{id:"appears_exclusively",children:"APPEARS_EXCLUSIVELY"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: ",(0,s.jsx)(t.code,{children:"_e"}),(0,s.jsx)(t.br,{}),"\n","The image appears exclusively in the screenshots listed after the modifier. For\nexample, if we have 10 screenshots labeled screen0, screen1, ..., screen9, and\nhave the String ",(0,s.jsx)(t.code,{children:"_e2,4,5"})," in our filename, the image will be expected to appear in\nscreenshots 2, 4, & 5, but not in the remaining 7 screenshots (0,1,3,6,7,8,9).\nThe modifier ",(0,s.jsx)(t.code,{children:"_e"})," by itself has the same effect as the modifier ",(0,s.jsx)(t.code,{children:"_"})," by itself."]}),"\n",(0,s.jsx)(t.h2,{id:"doesnt_appear",children:"DOESNT_APPEAR"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: ",(0,s.jsx)(t.code,{children:"_x"}),(0,s.jsx)(t.br,{}),"\n","The image doesn't appear in the screenshots listed after the modifier."]}),"\n",(0,s.jsx)(t.h2,{id:"multiple_matches",children:"MULTIPLE_MATCHES"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: ",(0,s.jsx)(t.code,{children:"_m"}),(0,s.jsx)(t.br,{}),"\n","Allows for, but does not require, multiple matches."]}),"\n",(0,s.jsx)(t.h2,{id:"single_match",children:"SINGLE_MATCH"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: (none)",(0,s.jsx)(t.br,{}),"\n","Since it is more common for an image to require a single match than multiple matches,\nthis attribute is not written in the filename but deduced from the absence of the\nMULTIPLE_MATCHES attribute."]}),"\n",(0,s.jsx)(t.h2,{id:"variable_location",children:"VARIABLE_LOCATION"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: ",(0,s.jsx)(t.code,{children:"_v"}),(0,s.jsx)(t.br,{}),"\n","This attribute allows the image to vary its location. The StateImageObject written\nto the State Structure for this image will\nuse an Image object (which allows for variable locations) instead of a RegionImagePairs\nobject (which allows only for a set of fixed locations). The image analysis performed\nby the State Structure builder will not flag images that return multiple matches\nwhen this attribute is active."]}),"\n",(0,s.jsx)(t.h2,{id:"fixed_location",children:"FIXED_LOCATION"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: (none)",(0,s.jsx)(t.br,{}),"\n","Most State objects are expected to exist in the same location, and since this is\nthe default it is not included in the filename. Filenames that do not include a\nVARIABLE_LOCATION attribute will have FIXED_LOCATION for every screenshot."]}),"\n",(0,s.jsx)(t.h2,{id:"define",children:"DEFINE"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: ",(0,s.jsx)(t.code,{children:"_d"}),(0,s.jsx)(t.br,{}),"\n","Using this attribute we can define the SearchRegion of an image as the region of\nits match. The SearchRegion will be defined only once. If screenshot numbers are listed\nafter the modifier, Brobot will only use these screenshots to define the image;\notherwise, it can be defined on any screenshot. DEFINE is used for images with\nfixed locations."]}),"\n",(0,s.jsx)(t.h2,{id:"group_define",children:"GROUP_DEFINE"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: ",(0,s.jsx)(t.code,{children:"_g"}),(0,s.jsx)(t.br,{}),"\n","Multiple images in a State can be used to define a SearchRegion for each of them\nthat includes all the images. You may want to do this for a set of images that\nappear in a certain region, but not in fixed locations. Brobot will continue to\ndefine group regions for screenshots where this attribute is active, and\nwill replace the SearchRegion of the images when the newly defined region is\nlarger than their current SearchRegion."]}),"\n",(0,s.jsx)(t.h2,{id:"region",children:"REGION"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: ",(0,s.jsx)(t.code,{children:"_r"}),(0,s.jsx)(t.br,{}),"\n","When this attribute is active, the first match found will be stored in the\nimage's SearchRegion. When the Java classes are written, this SearchRegion\nwill be used to create a StateRegion defined by the SearchRegion and no\nStateImageObject will be created."]}),"\n",(0,s.jsx)(t.h2,{id:"transfer",children:"TRANSFER"}),"\n",(0,s.jsxs)(t.p,{children:["Modifier: ",(0,s.jsx)(t.code,{children:"_t"}),(0,s.jsx)(t.br,{}),"\n","Similar to REGION, this attribute does not allow the image to get written to the\nState Structure as a StateImageObject.\nUnlike REGION, it also does not allow the image's SearchRegion to become a StateRegion.\nInstead, the image's\nmatch is copied to the SearchRegions of all images in the State.\nThese SearchRegions are updated as long as the target image's SearchRegion is\neither not yet\ndefined or smaller than the new Region. This is another approach, along with\nGROUP_DEFINE, to determine the SearchRegion for variable-location images."]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);
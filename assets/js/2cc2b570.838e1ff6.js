"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5895],{25336:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"core-library/architecture/modular-logging-system","title":"Modular Logging System","description":"Overview","source":"@site/docs/03-core-library/architecture/modular-logging-system.md","sourceDirName":"03-core-library/architecture","slug":"/core-library/architecture/modular-logging-system","permalink":"/brobot/docs/core-library/architecture/modular-logging-system","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/architecture/modular-logging-system.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"docSidebar","previous":{"title":"Logging Architecture","permalink":"/brobot/docs/core-library/architecture/logging-architecture"},"next":{"title":"Persistence Module Architecture","permalink":"/brobot/docs/core-library/architecture/persistence-module"}}');var o=i(74848),r=i(28453);const s={sidebar_position:11},l="Modular Logging System",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Architecture",id:"architecture",level:2},{value:"System Components",id:"system-components",level:3},{value:"Core Design Principles",id:"core-design-principles",level:3},{value:"Components",id:"components",level:2},{value:"Enhanced ActionResult",id:"enhanced-actionresult",level:3},{value:"ActionLogFormatter Interface",id:"actionlogformatter-interface",level:3},{value:"Formatter Implementations",id:"formatter-implementations",level:3},{value:"QuietFormatter",id:"quietformatter",level:4},{value:"NormalFormatter",id:"normalformatter",level:4},{value:"VerboseFormatter",id:"verboseformatter",level:4},{value:"ActionLoggingService",id:"actionloggingservice",level:3},{value:"Simplified ActionLifecycleAspect",id:"simplified-actionlifecycleaspect",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Application Properties",id:"application-properties",level:3},{value:"Programmatic Configuration",id:"programmatic-configuration",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Custom Logging",id:"custom-logging",level:3},{value:"Extension Guide",id:"extension-guide",level:2},{value:"Adding a New Formatter",id:"adding-a-new-formatter",level:3},{value:"Adding New Metrics",id:"adding-new-metrics",level:3},{value:"Custom Output Destinations",id:"custom-output-destinations",level:3},{value:"Benefits",id:"benefits",level:2},{value:"For Developers",id:"for-developers",level:3},{value:"For Users",id:"for-users",level:3},{value:"For Operations",id:"for-operations",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Overhead",id:"overhead",level:3},{value:"Memory Usage",id:"memory-usage",level:3},{value:"Optimization Tips",id:"optimization-tips",level:3},{value:"Migration from Legacy Logging",id:"migration-from-legacy-logging",level:2},{value:"Before (Scattered Logging)",id:"before-scattered-logging",level:3},{value:"After (Unified Logging)",id:"after-unified-logging",level:3},{value:"Migration Steps",id:"migration-steps",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"No Output",id:"no-output",level:3},{value:"Wrong Format",id:"wrong-format",level:3},{value:"Performance Issues",id:"performance-issues",level:3},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"Planned Features",id:"planned-features",level:3},{value:"Integration Opportunities",id:"integration-opportunities",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"modular-logging-system",children:"Modular Logging System"})}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"The Modular Logging System is a new architectural component that provides format-aware, verbosity-driven action logging. It separates data collection, formatting, and output concerns to create a flexible, maintainable logging solution that produces clean, focused output at different verbosity levels."}),"\n",(0,o.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,o.jsx)(n.p,{children:"The original logging system had several issues:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Mixed Concerns"}),": Formatting logic was scattered across multiple components"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Inconsistent Output"}),": Different parts of the system produced different log formats"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Hard to Maintain"}),": Changes to log format required modifications in multiple places"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Limited Flexibility"}),": Difficult to add new output formats or verbosity levels"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,o.jsx)(n.h3,{id:"system-components",children:"System Components"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    ActionLifecycleAspect                         \u2502\n\u2502        (Populates ActionResult with execution context)           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                       ActionResult                               \u2502\n\u2502  (Single source of truth with ActionExecutionContext,            \u2502\n\u2502   ActionMetrics, and EnvironmentSnapshot)                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                   ActionLoggingService                           \u2502\n\u2502      (Routes ActionResult to appropriate formatter)              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   Quiet     \u2502   Normal    \u2502          Verbose                    \u2502\n\u2502 Formatter   \u2502  Formatter  \u2502         Formatter                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                    Output Destinations                           \u2502\n\u2502              (Console, File, Remote, etc.)                       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,o.jsx)(n.h3,{id:"core-design-principles",children:"Core Design Principles"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Single Source of Truth"}),": ActionResult contains all information about an action execution"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Separation of Concerns"}),": Data collection, formatting, and output are separate responsibilities"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Pluggable Formatters"}),": Easy to add new output formats without changing core logic"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Configuration-Driven"}),": Verbosity level controlled by configuration, not code"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Immutable Data Flow"}),": ActionResult is populated once and passed through the system"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,o.jsx)(n.h3,{id:"enhanced-actionresult",children:"Enhanced ActionResult"}),"\n",(0,o.jsx)(n.p,{children:"The ActionResult class has been enhanced with inner classes to capture comprehensive execution data:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public class ActionResult {\n    // Existing fields...\n    \n    private ActionExecutionContext executionContext;\n    private ActionMetrics actionMetrics;\n    private EnvironmentSnapshot environmentSnapshot;\n    \n    @Data\n    public static class ActionExecutionContext {\n        private String actionType;\n        private List<StateImage> targetImages = new ArrayList<>();\n        private List<String> targetStrings = new ArrayList<>();\n        private List<Region> targetRegions = new ArrayList<>();\n        private String primaryTargetName;\n        private boolean success;\n        private Duration executionDuration = Duration.ZERO;\n        private Instant startTime;\n        private Instant endTime;\n        private List<Match> resultMatches = new ArrayList<>();\n        private Throwable executionError;\n        private String executingThread;\n        private String actionId;\n    }\n    \n    @Data\n    public static class ActionMetrics {\n        private long executionTimeMs;\n        private int matchCount;\n        private double bestMatchConfidence = 0.0;\n        private String threadName;\n        private String actionId;\n        private int retryCount = 0;\n        private Map<String, Long> timingBreakdown = new HashMap<>();\n    }\n    \n    @Data\n    public static class EnvironmentSnapshot {\n        private List<MonitorInfo> monitors = new ArrayList<>();\n        private String osName;\n        private String javaVersion;\n        private boolean headlessMode;\n        private Instant captureTime;\n        \n        @Data\n        public static class MonitorInfo {\n            private int index;\n            private String displayId;\n            private Rectangle bounds;\n            private boolean isPrimary;\n        }\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"actionlogformatter-interface",children:"ActionLogFormatter Interface"}),"\n",(0,o.jsx)(n.p,{children:"The formatter interface defines the contract for all formatters:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public interface ActionLogFormatter {\n    /**\n     * Format an ActionResult into a log message string.\n     * \n     * @param actionResult the result of an action execution\n     * @return formatted log message, or null if this action should not be logged\n     */\n    String format(ActionResult actionResult);\n    \n    /**\n     * Determine if an action should be logged at this verbosity level.\n     * \n     * @param actionResult the result to check\n     * @return true if this action should produce log output\n     */\n    boolean shouldLog(ActionResult actionResult);\n    \n    /**\n     * Get the verbosity level this formatter handles.\n     * \n     * @return the verbosity level\n     */\n    VerbosityLevel getVerbosityLevel();\n    \n    enum VerbosityLevel {\n        QUIET,    // Minimal output: \u2713 Find Working.ClaudeIcon \u2022 234ms\n        NORMAL,   // Balanced output: timestamps, key info, success indicators  \n        VERBOSE   // Detailed output: full metadata, environment info, timing details\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"formatter-implementations",children:"Formatter Implementations"}),"\n",(0,o.jsx)(n.h4,{id:"quietformatter",children:"QuietFormatter"}),"\n",(0,o.jsx)(n.p,{children:"Produces minimal single-line output perfect for monitoring and CI/CD environments:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'\u2713 Find Working.ClaudeIcon \u2022 234ms\n\u2717 Click Button.Submit \u2022 156ms\n\u2713 Type "username" \u2022 89ms\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Features:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Single-line format"}),"\n",(0,o.jsx)(n.li,{children:"Success/failure symbol (\u2713/\u2717)"}),"\n",(0,o.jsx)(n.li,{children:"Action type (cleaned up)"}),"\n",(0,o.jsx)(n.li,{children:"Target information (State.Object format)"}),"\n",(0,o.jsx)(n.li,{children:"Duration in milliseconds"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"normalformatter",children:"NormalFormatter"}),"\n",(0,o.jsx)(n.p,{children:"Balanced output with timestamps and essential information:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"[12:34:56] \u2713 Find Working.ClaudeIcon completed in 234ms (1 match)\n[12:34:57] \u2717 Click Button.Submit failed in 156ms (No matches found)\n[12:34:58] \u2713 Type TextInput.Username completed in 89ms\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Features:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Timestamp prefix"}),"\n",(0,o.jsx)(n.li,{children:"Success/failure indication"}),"\n",(0,o.jsx)(n.li,{children:"Completion status"}),"\n",(0,o.jsx)(n.li,{children:"Match count information"}),"\n",(0,o.jsx)(n.li,{children:"Error messages for failures"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"verboseformatter",children:"VerboseFormatter"}),"\n",(0,o.jsx)(n.p,{children:"Comprehensive multi-line output for debugging and analysis:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"=== ACTION EXECUTION ===\nStarted:    2024-01-20 12:34:56.123\nCompleted:  2024-01-20 12:34:56.357\nAction ID:  a1b2c3d4-e5f6-7890-abcd-ef1234567890\nThread:     main\n\n--- ACTION DETAILS ---\nType:       FIND\nStatus:     SUCCESS \u2713\nDuration:   234ms\n\n--- TARGETS ---\nImages (1):\n  [1] Working.ClaudeIcon\n\n--- RESULTS ---\nMatches:    1\n  [1] Score: 0.987 Region: R[100,200 300x400]\n\n--- ENVIRONMENT ---\nOS:         Mac OS X\nJava:       21.0.7\nHeadless:   false\nMonitors:   1\n\n--- METRICS ---\nExecution Time:   234ms\nMatch Count:      1\nBest Match Score: 0.987\n========================\n"})}),"\n",(0,o.jsx)(n.h3,{id:"actionloggingservice",children:"ActionLoggingService"}),"\n",(0,o.jsx)(n.p,{children:"The central service that coordinates logging:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Service\n@Slf4j\npublic class ActionLoggingService {\n    private final Map<VerbosityLevel, ActionLogFormatter> formatters;\n    \n    @Value("${brobot.logging.verbosity:QUIET}")\n    private String verbosityConfig;\n    \n    public void logAction(ActionResult actionResult) {\n        if (!isLoggingEnabled() || actionResult == null) {\n            return;\n        }\n        \n        VerbosityLevel level = getEffectiveVerbosityLevel();\n        ActionLogFormatter formatter = formatters.get(level);\n        \n        if (formatter != null && formatter.shouldLog(actionResult)) {\n            String formattedMessage = formatter.format(actionResult);\n            if (formattedMessage != null) {\n                outputFormattedMessage(formattedMessage, level);\n            }\n        }\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"simplified-actionlifecycleaspect",children:"Simplified ActionLifecycleAspect"}),"\n",(0,o.jsx)(n.p,{children:"The aspect now focuses solely on populating ActionResult with execution context:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Aspect\n@Component\npublic class ActionLifecycleAspect {\n    @Autowired\n    private ActionLoggingService actionLoggingService;\n    \n    @Around("actionPerform()")\n    public Object manageActionLifecycle(ProceedingJoinPoint joinPoint) throws Throwable {\n        // Extract action information\n        ActionResult actionResult = extractActionResult(joinPoint);\n        \n        // Initialize execution context\n        populateExecutionContext(actionResult, context, objectCollection);\n        \n        try {\n            // Execute the action\n            Object result = joinPoint.proceed();\n            \n            // Update with results\n            updateExecutionContextWithResults(actionResult, context, duration);\n            \n            // Log the completed action\n            actionLoggingService.logAction(actionResult);\n            \n            return result;\n            \n        } catch (Exception e) {\n            // Update with error information\n            updateExecutionContextWithError(actionResult, context, e);\n            \n            // Log the failed action\n            actionLoggingService.logAction(actionResult);\n            \n            throw e;\n        }\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(n.h3,{id:"application-properties",children:"Application Properties"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  logging:\n    verbosity: QUIET          # QUIET, NORMAL, or VERBOSE\n    console:\n      enabled: true\n    file:\n      enabled: false\n      path: logs/actions.log\n"})}),"\n",(0,o.jsx)(n.h3,{id:"programmatic-configuration",children:"Programmatic Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Change verbosity at runtime\nactionLoggingService.setVerbosityLevel(VerbosityLevel.VERBOSE);\n\n// Log with specific verbosity override\nactionLoggingService.logAction(actionResult, VerbosityLevel.NORMAL);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,o.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,o.jsx)(n.p,{children:"The system works automatically through AspectJ integration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Actions are automatically logged when executed\nAction action = new Action();\naction.find(stateImage);  // Automatically logged based on verbosity\n"})}),"\n",(0,o.jsx)(n.h3,{id:"custom-logging",children:"Custom Logging"}),"\n",(0,o.jsx)(n.p,{children:"For manual logging scenarios:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Autowired\nprivate ActionLoggingService loggingService;\n\n// Create and populate ActionResult manually\nActionResult result = new ActionResult();\nActionResult.ActionExecutionContext context = new ActionResult.ActionExecutionContext();\ncontext.setActionType("CUSTOM_ACTION");\ncontext.setSuccess(true);\ncontext.setExecutionDuration(Duration.ofMillis(100));\nresult.setExecutionContext(context);\n\n// Log it\nloggingService.logAction(result);\n'})}),"\n",(0,o.jsx)(n.h2,{id:"extension-guide",children:"Extension Guide"}),"\n",(0,o.jsx)(n.h3,{id:"adding-a-new-formatter",children:"Adding a New Formatter"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Implement the ActionLogFormatter interface:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@Component\npublic class JsonFormatter implements ActionLogFormatter {\n    @Override\n    public String format(ActionResult actionResult) {\n        // Convert to JSON format\n        return objectMapper.writeValueAsString(actionResult);\n    }\n    \n    @Override\n    public boolean shouldLog(ActionResult actionResult) {\n        return true; // Log all actions\n    }\n    \n    @Override\n    public VerbosityLevel getVerbosityLevel() {\n        return VerbosityLevel.NORMAL; // Or create a new level\n    }\n}\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:"The formatter is automatically registered via Spring component scanning."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"adding-new-metrics",children:"Adding New Metrics"}),"\n",(0,o.jsx)(n.p,{children:"Extend the ActionMetrics class:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public static class ActionMetrics {\n    // Existing fields...\n    \n    // Add new metrics\n    private long memoryUsageDelta;\n    private int cpuUsagePercent;\n    private Map<String, Object> customMetrics = new HashMap<>();\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"custom-output-destinations",children:"Custom Output Destinations"}),"\n",(0,o.jsx)(n.p,{children:"Override the output method in ActionLoggingService:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@Component\npublic class RemoteLoggingService extends ActionLoggingService {\n    @Override\n    protected void outputFormattedMessage(String message, VerbosityLevel level) {\n        // Send to remote logging service\n        remoteLogger.send(message, level);\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"benefits",children:"Benefits"}),"\n",(0,o.jsx)(n.h3,{id:"for-developers",children:"For Developers"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Clean Code"}),": Logging logic separated from business logic"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Easy Maintenance"}),": Changes to log format only require updating formatters"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Extensible"}),": New formats and destinations easily added"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testable"}),": Each component can be tested in isolation"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"for-users",children:"For Users"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Consistent Output"}),": All actions logged in the same format"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Configurable Verbosity"}),": Choose the right level of detail"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Performance"}),": Minimal overhead in QUIET mode"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Debugging"}),": VERBOSE mode provides comprehensive information"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"for-operations",children:"For Operations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"CI/CD Friendly"}),": QUIET mode perfect for automated environments"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Monitoring"}),": Consistent format enables easy parsing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Troubleshooting"}),": VERBOSE mode captures all relevant context"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Flexible Deployment"}),": Configure verbosity per environment"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,o.jsx)(n.h3,{id:"overhead",children:"Overhead"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"QUIET Mode"}),": < 100 microseconds per action"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"NORMAL Mode"}),": < 200 microseconds per action"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"VERBOSE Mode"}),": < 500 microseconds per action"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"memory-usage",children:"Memory Usage"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"ActionExecutionContext"}),": ~500 bytes per action"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"ActionMetrics"}),": ~200 bytes per action"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"EnvironmentSnapshot"}),": ~1KB (cached and reused)"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"optimization-tips",children:"Optimization Tips"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Use QUIET mode in production"}),"\n",(0,o.jsx)(n.li,{children:"Enable file logging asynchronously"}),"\n",(0,o.jsx)(n.li,{children:"Implement sampling for high-frequency actions"}),"\n",(0,o.jsx)(n.li,{children:"Use conditional logging based on action type"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"migration-from-legacy-logging",children:"Migration from Legacy Logging"}),"\n",(0,o.jsx)(n.h3,{id:"before-scattered-logging",children:"Before (Scattered Logging)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// In ActionExecution\nSystem.out.println("\u2713 " + action + " " + target);\n\n// In ConsoleReporter\nConsoleReporter.log(OutputLevel.HIGH, result.toString());\n\n// In ActionLogger\nactionLogger.logAction(sessionId, result, collection);\n'})}),"\n",(0,o.jsx)(n.h3,{id:"after-unified-logging",children:"After (Unified Logging)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// All logging handled by ActionLoggingService\nactionLoggingService.logAction(actionResult);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"migration-steps",children:"Migration Steps"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Update brobot library to latest version"}),"\n",(0,o.jsx)(n.li,{children:"Enable modular logging in configuration"}),"\n",(0,o.jsx)(n.li,{children:"Remove direct console output calls"}),"\n",(0,o.jsx)(n.li,{children:"Test with different verbosity levels"}),"\n",(0,o.jsx)(n.li,{children:"Adjust formatters as needed"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"no-output",children:"No Output"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Check if logging is enabled: ",(0,o.jsx)(n.code,{children:"brobot.logging.console.enabled=true"})]}),"\n",(0,o.jsxs)(n.li,{children:["Verify verbosity level: ",(0,o.jsx)(n.code,{children:"brobot.logging.verbosity=QUIET"})]}),"\n",(0,o.jsxs)(n.li,{children:["Ensure AspectJ is enabled: ",(0,o.jsx)(n.code,{children:"@EnableAspectJAutoProxy"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"wrong-format",children:"Wrong Format"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Verify correct formatter is being used"}),"\n",(0,o.jsx)(n.li,{children:"Check verbosity configuration"}),"\n",(0,o.jsx)(n.li,{children:"Ensure ActionResult is properly populated"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Switch to QUIET mode for production"}),"\n",(0,o.jsx)(n.li,{children:"Disable file logging if not needed"}),"\n",(0,o.jsx)(n.li,{children:"Consider async logging for high-volume scenarios"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,o.jsx)(n.h3,{id:"planned-features",children:"Planned Features"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Structured Logging"}),": JSON/XML output formats"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Remote Logging"}),": Send logs to centralized servers"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Real-time Streaming"}),": WebSocket-based log streaming"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Analytics Integration"}),": Export to analytics platforms"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Custom Filters"}),": Filter logs based on criteria"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Log Aggregation"}),": Combine logs from multiple sources"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"integration-opportunities",children:"Integration Opportunities"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"OpenTelemetry for distributed tracing"}),"\n",(0,o.jsx)(n.li,{children:"ELK Stack for log analysis"}),"\n",(0,o.jsx)(n.li,{children:"Prometheus for metrics export"}),"\n",(0,o.jsx)(n.li,{children:"Grafana for visualization"}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(96540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);
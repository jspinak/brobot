"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[177],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var o=i(96540);const t={},r=o.createContext(t);function s(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(r.Provider,{value:n},e.children)}},76714:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"integrations/mcp-server/configuration","title":"Configuration Guide","description":"Learn how to configure the MCP Server for different environments and use cases.","source":"@site/docs/06-integrations/mcp-server/configuration.md","sourceDirName":"06-integrations/mcp-server","slug":"/integrations/mcp-server/configuration","permalink":"/brobot/docs/integrations/mcp-server/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/06-integrations/mcp-server/configuration.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docSidebar","previous":{"title":"Installation Guide","permalink":"/brobot/docs/integrations/mcp-server/installation"},"next":{"title":"API Reference","permalink":"/brobot/docs/integrations/mcp-server/api-reference"}}');var t=i(74848),r=i(28453);const s={sidebar_position:3},a="Configuration Guide",l={},c=[{value:"Configuration Methods",id:"configuration-methods",level:2},{value:"Server Configuration",id:"server-configuration",level:2},{value:"Basic Settings",id:"basic-settings",level:3},{value:"Advanced Server Settings",id:"advanced-server-settings",level:3},{value:"Brobot CLI Configuration",id:"brobot-cli-configuration",level:2},{value:"CLI Path Settings",id:"cli-path-settings",level:3},{value:"Mock Mode",id:"mock-mode",level:3},{value:"Brobot Framework Configuration",id:"brobot-framework-configuration",level:2},{value:"Image Recognition",id:"image-recognition",level:3},{value:"Action Configuration",id:"action-configuration",level:3},{value:"State Management",id:"state-management",level:3},{value:"Security Configuration",id:"security-configuration",level:2},{value:"Authentication (Future Release)",id:"authentication-future-release",level:3},{value:"Network Security",id:"network-security",level:3},{value:"Logging Configuration",id:"logging-configuration",level:2},{value:"Log Settings",id:"log-settings",level:3},{value:"Debug Settings",id:"debug-settings",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Caching",id:"caching",level:3},{value:"Resource Limits",id:"resource-limits",level:3},{value:"Environment-Specific Configurations",id:"environment-specific-configurations",level:2},{value:"Development",id:"development",level:3},{value:"Production",id:"production",level:3},{value:"Testing",id:"testing",level:3},{value:"Configuration File Examples",id:"configuration-file-examples",level:2},{value:"Minimal Configuration",id:"minimal-configuration",level:3},{value:"Full Development Configuration",id:"full-development-configuration",level:3},{value:"Loading Configuration",id:"loading-configuration",level:2},{value:"Automatic Loading",id:"automatic-loading",level:3},{value:"Programmatic Access",id:"programmatic-access",level:3},{value:"Runtime Validation",id:"runtime-validation",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Security",id:"security",level:3},{value:"Performance",id:"performance",level:3},{value:"Development",id:"development-1",level:3},{value:"Troubleshooting Configuration",id:"troubleshooting-configuration",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Configuration Loading",id:"debug-configuration-loading",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"configuration-guide",children:"Configuration Guide"})}),"\n",(0,t.jsx)(n.p,{children:"Learn how to configure the MCP Server for different environments and use cases."}),"\n",(0,t.jsx)(n.h2,{id:"configuration-methods",children:"Configuration Methods"}),"\n",(0,t.jsx)(n.p,{children:"The MCP Server supports multiple configuration methods, in order of precedence:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment Variables"}),": Highest priority"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:".env"})," File"]}),": Local configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Default Values"}),": Built-in defaults"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"server-configuration",children:"Server Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"basic-settings",children:"Basic Settings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Server host and port\nMCP_HOST=0.0.0.0              # Bind address (default: 0.0.0.0)\nMCP_PORT=8000                 # Server port (default: 8000)\n\n# Development settings\nMCP_RELOAD=true               # Auto-reload on code changes (default: true)\nMCP_LOG_LEVEL=info           # Log level: debug|info|warning|error (default: info)\n\n# API versioning\nAPI_VERSION=v1               # API version prefix (default: v1)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"advanced-server-settings",children:"Advanced Server Settings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Performance tuning\nWORKERS=4                    # Number of worker processes (production only)\nWORKER_CONNECTIONS=1000      # Max connections per worker\nKEEPALIVE=5                  # Keep-alive timeout in seconds\n\n# Request limits\nMAX_REQUEST_SIZE=10485760    # Max request size in bytes (10MB)\nREQUEST_TIMEOUT=300          # Request timeout in seconds\n\n# CORS settings\nCORS_ORIGINS=*              # Allowed origins (* for all)\nCORS_METHODS=GET,POST       # Allowed HTTP methods\nCORS_HEADERS=*              # Allowed headers\n"})}),"\n",(0,t.jsx)(n.h2,{id:"brobot-cli-configuration",children:"Brobot CLI Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"cli-path-settings",children:"CLI Path Settings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# CLI JAR location\nBROBOT_CLI_JAR=brobot-cli/build/libs/brobot-cli.jar\n\n# Custom Java executable\nJAVA_EXECUTABLE=java         # Path to java executable\nJAVA_OPTS=-Xmx2G -Xms512M  # JVM options\n\n# CLI behavior\nCLI_TIMEOUT=30.0            # Command timeout in seconds\nCLI_RETRY_ATTEMPTS=3        # Retry failed commands\nCLI_RETRY_DELAY=1.0        # Delay between retries\n"})}),"\n",(0,t.jsx)(n.h3,{id:"mock-mode",children:"Mock Mode"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Enable/disable mock mode\nUSE_MOCK_DATA=true          # Use mock data instead of real CLI\n\n# Mock data settings (when USE_MOCK_DATA=true)\nMOCK_DELAY=0.5              # Simulate action delays\nMOCK_SUCCESS_RATE=0.95      # Probability of action success\nMOCK_STATE_COUNT=5          # Number of mock states\n"})}),"\n",(0,t.jsx)(n.h2,{id:"brobot-framework-configuration",children:"Brobot Framework Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"image-recognition",children:"Image Recognition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Pattern matching settings\nBROBOT_MIN_SIMILARITY=0.8    # Minimum similarity for matches (0.0-1.0)\nBROBOT_SEARCH_TIMEOUT=5.0    # Timeout for finding patterns\nBROBOT_MULTI_MATCHES=false   # Allow multiple matches\n\n# Screenshot settings\nBROBOT_SCREENSHOT_FORMAT=png  # Screenshot format: png|jpg\nBROBOT_SCREENSHOT_QUALITY=90  # JPEG quality (1-100)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"action-configuration",children:"Action Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Click actions\nBROBOT_CLICK_DELAY=0.1       # Delay after click (seconds)\nBROBOT_DOUBLE_CLICK_INTERVAL=0.3  # Time between double clicks\n\n# Typing actions\nBROBOT_TYPING_SPEED=300      # Characters per minute\nBROBOT_TYPING_DELAY=0.05     # Delay between keystrokes\n\n# Drag actions\nBROBOT_DRAG_SPEED=1000       # Pixels per second\nBROBOT_DRAG_SMOOTHNESS=10    # Movement steps (higher = smoother)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"state-management",children:"State Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# State detection\nBROBOT_STATE_TIMEOUT=10.0    # Max time to detect state\nBROBOT_STATE_CHECK_INTERVAL=0.5  # Interval between checks\n\n# State transition\nBROBOT_TRANSITION_TIMEOUT=30.0   # Max time for state transition\nBROBOT_TRANSITION_STABILITY=2.0  # Time state must be stable\n"})}),"\n",(0,t.jsx)(n.h2,{id:"security-configuration",children:"Security Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"authentication-future-release",children:"Authentication (Future Release)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# API key authentication\nAPI_KEY_REQUIRED=false       # Require API key\nAPI_KEY_HEADER=X-API-Key    # Header name for API key\n\n# Allowed API keys (comma-separated)\nAPI_KEYS=key1,key2,key3\n\n# Rate limiting\nRATE_LIMIT_ENABLED=true      # Enable rate limiting\nRATE_LIMIT_REQUESTS=100      # Requests per window\nRATE_LIMIT_WINDOW=60         # Window size in seconds\n"})}),"\n",(0,t.jsx)(n.h3,{id:"network-security",children:"Network Security"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Allowed hosts\nALLOWED_HOSTS=localhost,127.0.0.1,example.com\n\n# SSL/TLS (when using HTTPS)\nSSL_CERT_FILE=/path/to/cert.pem\nSSL_KEY_FILE=/path/to/key.pem\nSSL_VERIFY=true              # Verify SSL certificates\n"})}),"\n",(0,t.jsx)(n.h2,{id:"logging-configuration",children:"Logging Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"log-settings",children:"Log Settings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Log output\nLOG_TO_FILE=true             # Enable file logging\nLOG_FILE_PATH=logs/mcp.log   # Log file location\nLOG_FILE_ROTATION=daily      # Rotation: daily|size|time\nLOG_FILE_MAX_SIZE=10MB       # Max size before rotation\nLOG_FILE_BACKUP_COUNT=7      # Number of backup files\n\n# Log format\nLOG_FORMAT=json              # Format: json|text\nLOG_INCLUDE_TIMESTAMP=true   # Include timestamps\nLOG_INCLUDE_HOSTNAME=true    # Include hostname\n"})}),"\n",(0,t.jsx)(n.h3,{id:"debug-settings",children:"Debug Settings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Debug options\nDEBUG_MODE=false             # Enable debug mode\nDEBUG_SQL=false              # Log SQL queries (if using DB)\nDEBUG_REQUESTS=true          # Log all HTTP requests\nDEBUG_RESPONSES=false        # Log all HTTP responses\nDEBUG_BROBOT_COMMANDS=true   # Log CLI commands\n"})}),"\n",(0,t.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,t.jsx)(n.h3,{id:"caching",children:"Caching"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Response caching\nCACHE_ENABLED=true           # Enable response caching\nCACHE_TTL=300               # Cache TTL in seconds\nCACHE_MAX_SIZE=100MB        # Max cache size\n\n# Pattern caching\nPATTERN_CACHE_ENABLED=true   # Cache image patterns\nPATTERN_CACHE_DIR=.cache/patterns\n"})}),"\n",(0,t.jsx)(n.h3,{id:"resource-limits",children:"Resource Limits"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Memory limits\nMAX_MEMORY_PERCENT=80        # Max memory usage percentage\nGC_THRESHOLD=75              # Trigger GC at this memory %\n\n# Connection limits\nMAX_CONNECTIONS=1000         # Max concurrent connections\nCONNECTION_TIMEOUT=30        # Connection timeout seconds\n"})}),"\n",(0,t.jsx)(n.h2,{id:"environment-specific-configurations",children:"Environment-Specific Configurations"}),"\n",(0,t.jsx)(n.h3,{id:"development",children:"Development"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# .env.development\nMCP_HOST=localhost\nMCP_PORT=8000\nMCP_RELOAD=true\nMCP_LOG_LEVEL=debug\nUSE_MOCK_DATA=true\nDEBUG_MODE=true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"production",children:"Production"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# .env.production\nMCP_HOST=0.0.0.0\nMCP_PORT=80\nMCP_RELOAD=false\nMCP_LOG_LEVEL=warning\nUSE_MOCK_DATA=false\nWORKERS=4\nAPI_KEY_REQUIRED=true\nRATE_LIMIT_ENABLED=true\nLOG_TO_FILE=true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# .env.test\nMCP_PORT=8001\nMCP_LOG_LEVEL=info\nUSE_MOCK_DATA=true\nMOCK_SUCCESS_RATE=1.0\nCLI_TIMEOUT=5.0\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration-file-examples",children:"Configuration File Examples"}),"\n",(0,t.jsx)(n.h3,{id:"minimal-configuration",children:"Minimal Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Minimal .env for getting started\nUSE_MOCK_DATA=false\nBROBOT_CLI_JAR=brobot-cli/build/libs/brobot-cli.jar\n"})}),"\n",(0,t.jsx)(n.h3,{id:"full-development-configuration",children:"Full Development Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"# Complete development configuration\n# Server\nMCP_HOST=0.0.0.0\nMCP_PORT=8000\nMCP_RELOAD=true\nMCP_LOG_LEVEL=debug\n\n# Brobot CLI\nUSE_MOCK_DATA=false\nBROBOT_CLI_JAR=brobot-cli/build/libs/brobot-cli.jar\nJAVA_EXECUTABLE=/usr/bin/java\nJAVA_OPTS=-Xmx1G\nCLI_TIMEOUT=30.0\n\n# Brobot Framework\nBROBOT_MIN_SIMILARITY=0.85\nBROBOT_SEARCH_TIMEOUT=10.0\nBROBOT_TYPING_SPEED=200\n\n# Logging\nLOG_TO_FILE=true\nLOG_FILE_PATH=logs/dev.log\nDEBUG_MODE=true\nDEBUG_BROBOT_COMMANDS=true\n\n# Performance\nCACHE_ENABLED=true\nPATTERN_CACHE_ENABLED=true\n"})}),"\n",(0,t.jsx)(n.h2,{id:"loading-configuration",children:"Loading Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"automatic-loading",children:"Automatic Loading"}),"\n",(0,t.jsx)(n.p,{children:"The server automatically loads configuration in this order:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"System environment variables"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".env"})," file in project root"]}),"\n",(0,t.jsx)(n.li,{children:"Built-in defaults"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"programmatic-access",children:"Programmatic Access"}),"\n",(0,t.jsx)(n.p,{children:"Access configuration in Python code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from mcp_server.config import get_settings\n\nsettings = get_settings()\nprint(f"Server running on port: {settings.port}")\nprint(f"Mock mode: {settings.use_mock_data}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"runtime-validation",children:"Runtime Validation"}),"\n",(0,t.jsx)(n.p,{children:"The server validates configuration on startup:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Test configuration without starting server\npython -m mcp_server.config --validate\n\n# Show current configuration\npython -m mcp_server.config --show\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Never commit ",(0,t.jsx)(n.code,{children:".env"})," files"]})," with sensitive data"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.strong,{children:"environment variables"})," for production secrets"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rotate API keys"})," regularly"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Limit CORS origins"})," in production"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Disable debug logging"})," in production"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Enable caching"})," for better performance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tune worker counts"})," based on CPU cores"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitor resource usage"})," and adjust limits"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"development-1",children:"Development"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsxs)(n.strong,{children:["separate ",(0,t.jsx)(n.code,{children:".env"})," files"]})," for each environment"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Document all custom settings"})," in your README"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Version control"})," example configurations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test configuration changes"})," before deploying"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting-configuration",children:"Troubleshooting Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issue"}),": Settings not taking effect"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Check loaded configuration\npython -c "from mcp_server.config import get_settings; print(get_settings().dict())"\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issue"}),": Invalid configuration values"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Validate configuration\npython -m mcp_server.config --validate\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issue"}),": Environment variables not loading"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check environment\nprintenv | grep MCP_\n"})}),"\n",(0,t.jsx)(n.h3,{id:"debug-configuration-loading",children:"Debug Configuration Loading"}),"\n",(0,t.jsx)(n.p,{children:"Enable configuration debug logging:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import logging\nlogging.basicConfig(level=logging.DEBUG)\n\nfrom mcp_server.config import get_settings\nsettings = get_settings()  # Will log configuration sources\n"})}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Learn about ",(0,t.jsx)(n.a,{href:"./api-reference",children:"API Reference"})," for endpoint details"]}),"\n",(0,t.jsxs)(n.li,{children:["Explore ",(0,t.jsx)(n.a,{href:"./examples",children:"Examples"})," for different configurations"]}),"\n",(0,t.jsxs)(n.li,{children:["Read ",(0,t.jsx)(n.a,{href:"./troubleshooting",children:"Troubleshooting"})," for common issues"]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);
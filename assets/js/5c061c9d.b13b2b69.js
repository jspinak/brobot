"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5690],{8979:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"core-library/guides/actionhistory-migration-plan","title":"ActionHistory Migration Plan","description":"Executive Summary","source":"@site/docs/03-core-library/guides/actionhistory-migration-plan.md","sourceDirName":"03-core-library/guides","slug":"/core-library/guides/actionhistory-migration-plan","permalink":"/brobot/docs/core-library/guides/actionhistory-migration-plan","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/guides/actionhistory-migration-plan.md","tags":[],"version":"current","sidebarPosition":25,"frontMatter":{"sidebar_position":25,"title":"ActionHistory Migration Plan"},"sidebar":"docSidebar","previous":{"title":"ActionConfig Factory","permalink":"/brobot/docs/core-library/guides/action-config-factory"},"next":{"title":"Brobot API Documentation Template","permalink":"/brobot/docs/core-library/guides/API_DOCUMENTATION_TEMPLATE"}}');var t=i(74848),r=i(28453);const l={sidebar_position:25,title:"ActionHistory Migration Plan"},a="ActionHistory Migration Plan",o={},d=[{value:"Executive Summary",id:"executive-summary",level:2},{value:"Current State Assessment",id:"current-state-assessment",level:2},{value:"Migration Progress",id:"migration-progress",level:3},{value:"Key Components Status",id:"key-components-status",level:3},{value:"Migration Phases",id:"migration-phases",level:2},{value:"Phase 1: Complete Internal Migration (2-3 weeks)",id:"phase-1-complete-internal-migration-2-3-weeks",level:3},{value:"Tasks:",id:"tasks",level:4},{value:"Deliverables:",id:"deliverables",level:4},{value:"Phase 2: Data Migration Infrastructure (3-4 weeks)",id:"phase-2-data-migration-infrastructure-3-4-weeks",level:3},{value:"Tasks:",id:"tasks-1",level:4},{value:"Deliverables:",id:"deliverables-1",level:4},{value:"Phase 3: Gradual Deprecation (2-3 months)",id:"phase-3-gradual-deprecation-2-3-months",level:3},{value:"Tasks:",id:"tasks-2",level:4},{value:"Deliverables:",id:"deliverables-2",level:4},{value:"Phase 4: Performance Optimization (2-3 weeks)",id:"phase-4-performance-optimization-2-3-weeks",level:3},{value:"Tasks:",id:"tasks-3",level:4},{value:"Deliverables:",id:"deliverables-3",level:4},{value:"Phase 5: Legacy Removal (Version 2.0.0)",id:"phase-5-legacy-removal-version-200",level:3},{value:"Tasks:",id:"tasks-4",level:4},{value:"Deliverables:",id:"deliverables-4",level:4},{value:"Implementation Timeline",id:"implementation-timeline",level:2},{value:"Risk Mitigation",id:"risk-mitigation",level:2},{value:"High-Risk Areas",id:"high-risk-areas",level:3},{value:"Rollback Strategy",id:"rollback-strategy",level:3},{value:"Success Metrics",id:"success-metrics",level:2},{value:"Phase 1 Metrics",id:"phase-1-metrics",level:3},{value:"Phase 2 Metrics",id:"phase-2-metrics",level:3},{value:"Phase 3 Metrics",id:"phase-3-metrics",level:3},{value:"Phase 4 Metrics",id:"phase-4-metrics",level:3},{value:"Phase 5 Metrics",id:"phase-5-metrics",level:3},{value:"Developer Migration Guide",id:"developer-migration-guide",level:2},{value:"For Library Users",id:"for-library-users",level:3},{value:"Step 1: Update method calls",id:"step-1-update-method-calls",level:4},{value:"Step 2: Update ActionRecord creation",id:"step-2-update-actionrecord-creation",level:4},{value:"Step 3: Run migration tool",id:"step-3-run-migration-tool",level:4},{value:"For Framework Contributors",id:"for-framework-contributors",level:3},{value:"Understanding the Adapter Pattern",id:"understanding-the-adapter-pattern",level:4},{value:"Testing Both APIs",id:"testing-both-apis",level:4},{value:"Communication Plan",id:"communication-plan",level:2},{value:"Version 1.2.0 (Phase 1-2 Complete)",id:"version-120-phase-1-2-complete",level:3},{value:"Version 1.3.0 (Phase 3 Start)",id:"version-130-phase-3-start",level:3},{value:"Version 1.5.0 (Phase 3 End)",id:"version-150-phase-3-end",level:3},{value:"Version 2.0.0 (Phase 5)",id:"version-200-phase-5",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"actionhistory-migration-plan",children:"ActionHistory Migration Plan"})}),"\n",(0,t.jsx)(n.h2,{id:"executive-summary",children:"Executive Summary"}),"\n",(0,t.jsxs)(n.p,{children:["The ActionHistory class is currently in a transitional state, supporting both the legacy ",(0,t.jsx)(n.code,{children:"ActionOptions.Action"})," API and the modern ",(0,t.jsx)(n.code,{children:"ActionConfig"})," API. This document outlines a comprehensive plan to complete the migration to the modern API while maintaining backward compatibility."]}),"\n",(0,t.jsx)(n.h2,{id:"current-state-assessment",children:"Current State Assessment"}),"\n",(0,t.jsx)(n.h3,{id:"migration-progress",children:"Migration Progress"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\u2705 70% Complete"}),": Infrastructure and dual API support implemented"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\u26a0\ufe0f 20% In Progress"}),": Internal methods still using legacy API"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\u274c 10% Not Started"}),": Deprecation removal and data migration"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"key-components-status",children:"Key Components Status"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Component"}),(0,t.jsx)(n.th,{children:"Status"}),(0,t.jsx)(n.th,{children:"Notes"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ActionConfigAdapter"}),(0,t.jsx)(n.td,{children:"\u2705 Complete"}),(0,t.jsx)(n.td,{children:"Full type mapping implemented"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ActionRecord Dual API"}),(0,t.jsx)(n.td,{children:"\u2705 Complete"}),(0,t.jsx)(n.td,{children:"Both fields with auto-population"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Modern API Methods"}),(0,t.jsx)(n.td,{children:"\u2705 Complete"}),(0,t.jsx)(n.td,{children:"All new methods implemented"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Deprecation Marking"}),(0,t.jsx)(n.td,{children:"\u2705 Complete"}),(0,t.jsx)(n.td,{children:"Legacy methods marked @Deprecated"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Test Coverage"}),(0,t.jsx)(n.td,{children:"\u2705 Complete"}),(0,t.jsx)(n.td,{children:"Comprehensive modern API tests"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Internal Method Updates"}),(0,t.jsx)(n.td,{children:"\u26a0\ufe0f Partial"}),(0,t.jsx)(n.td,{children:"Some hardcoded references remain"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Data Migration Tools"}),(0,t.jsx)(n.td,{children:"\u274c Not Started"}),(0,t.jsx)(n.td,{children:"No serialization migration path"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Legacy Method Removal"}),(0,t.jsx)(n.td,{children:"\u274c Not Started"}),(0,t.jsx)(n.td,{children:"No deprecation timeline"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"migration-phases",children:"Migration Phases"}),"\n",(0,t.jsx)(n.h3,{id:"phase-1-complete-internal-migration-2-3-weeks",children:"Phase 1: Complete Internal Migration (2-3 weeks)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Goal"}),": Remove all hardcoded ActionOptions.Action references"]}),"\n",(0,t.jsx)(n.h4,{id:"tasks",children:"Tasks:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Update getRandomText() method"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// Current (hardcoded)\npublic String getRandomText() {\n    ActionRecord snapshot = getRandomSnapshot(ActionOptions.Action.FIND);\n    // ...\n}\n\n// Target (using ActionConfig)\npublic String getRandomText() {\n    PatternFindOptions findConfig = new PatternFindOptions.Builder().build();\n    ActionRecord snapshot = getRandomSnapshot(findConfig);\n    // ...\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Refactor helper methods"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Update ",(0,t.jsx)(n.code,{children:"getFindOrVanishSnapshots()"})," to use ActionConfig parameter"]}),"\n",(0,t.jsxs)(n.li,{children:["Update ",(0,t.jsx)(n.code,{children:"getSnapshotOfFindType()"})," to use ActionConfig parameter"]}),"\n",(0,t.jsx)(n.li,{children:"Remove direct ActionOptions.Action enum usage"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Update type detection methods"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Enhance ",(0,t.jsx)(n.code,{children:"getSnapshotActionType()"})," to prioritize ActionConfig"]}),"\n",(0,t.jsxs)(n.li,{children:["Enhance ",(0,t.jsx)(n.code,{children:"getSnapshotFindType()"})," to prioritize ActionConfig"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"deliverables",children:"Deliverables:"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","All internal methods using ActionConfig"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","No direct ActionOptions.Action references"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Updated unit tests confirming functionality"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-2-data-migration-infrastructure-3-4-weeks",children:"Phase 2: Data Migration Infrastructure (3-4 weeks)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Goal"}),": Enable seamless migration of existing data"]}),"\n",(0,t.jsx)(n.h4,{id:"tasks-1",children:"Tasks:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Create migration utilities"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Component\npublic class ActionHistoryMigrationService {\n    public ActionHistory migrate(ActionHistory legacy) {\n        // Convert ActionOptions-based snapshots to ActionConfig\n    }\n    \n    public void migrateDatabase(DataSource dataSource) {\n        // Batch migrate persisted records\n    }\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Implement serialization converters"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"JSON deserializer that auto-converts ActionOptions to ActionConfig"}),"\n",(0,t.jsx)(n.li,{children:"Database migration scripts for existing records"}),"\n",(0,t.jsx)(n.li,{children:"File-based migration tool for saved states"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Add migration validation"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Checksum verification for migrated data"}),"\n",(0,t.jsx)(n.li,{children:"Rollback capability for failed migrations"}),"\n",(0,t.jsx)(n.li,{children:"Migration status tracking"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"deliverables-1",children:"Deliverables:"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","ActionHistoryMigrationService implementation"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Database migration scripts"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Migration validation framework"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Documentation for migration process"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-3-gradual-deprecation-2-3-months",children:"Phase 3: Gradual Deprecation (2-3 months)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Goal"}),": Transition users to modern API"]}),"\n",(0,t.jsx)(n.h4,{id:"tasks-2",children:"Tasks:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Enhanced deprecation warnings"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Deprecated(since = "1.2.0", forRemoval = true)\n@DeprecationWarning(\n    message = "This method will be removed in version 2.0.0",\n    alternative = "Use getRandomSnapshot(ActionConfig) instead"\n)\npublic ActionRecord getRandomSnapshot(ActionOptions.Action action) {\n    // Log deprecation usage for metrics\n    DeprecationMetrics.log("getRandomSnapshot", "ActionOptions.Action");\n    // ...\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage metrics collection"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Track deprecated method usage in production"}),"\n",(0,t.jsx)(n.li,{children:"Generate deprecation reports"}),"\n",(0,t.jsx)(n.li,{children:"Identify high-impact areas"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Migration guides and tooling"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Automated code migration tool"}),"\n",(0,t.jsx)(n.li,{children:"IDE plugin for deprecation warnings"}),"\n",(0,t.jsx)(n.li,{children:"Comprehensive migration documentation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"deliverables-2",children:"Deliverables:"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Deprecation metrics system"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Automated migration tool"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Updated documentation"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","User communication plan"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-4-performance-optimization-2-3-weeks",children:"Phase 4: Performance Optimization (2-3 weeks)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Goal"}),": Optimize ActionConfigAdapter performance"]}),"\n",(0,t.jsx)(n.h4,{id:"tasks-3",children:"Tasks:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Caching implementation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Component\npublic class ActionConfigAdapter {\n    private final Map<Class<?>, ActionOptions.Action> typeCache = \n        new ConcurrentHashMap<>();\n    \n    public ActionOptions.Action getActionType(ActionConfig config) {\n        return typeCache.computeIfAbsent(\n            config.getClass(), \n            this::computeActionType\n        );\n    }\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Lazy initialization"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Defer ActionOptions creation until needed"}),"\n",(0,t.jsx)(n.li,{children:"Use weak references for infrequently used mappings"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Performance benchmarking"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Compare legacy vs modern API performance"}),"\n",(0,t.jsx)(n.li,{children:"Identify and optimize hotspots"}),"\n",(0,t.jsx)(n.li,{children:"Document performance characteristics"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"deliverables-3",children:"Deliverables:"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Optimized ActionConfigAdapter"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Performance benchmark suite"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Performance documentation"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-5-legacy-removal-version-200",children:"Phase 5: Legacy Removal (Version 2.0.0)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Goal"}),": Remove all deprecated code"]}),"\n",(0,t.jsx)(n.h4,{id:"tasks-4",children:"Tasks:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Remove deprecated methods"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Delete all @Deprecated ActionOptions.Action methods"}),"\n",(0,t.jsx)(n.li,{children:"Remove ActionOptions field from ActionRecord"}),"\n",(0,t.jsx)(n.li,{children:"Clean up ActionConfigAdapter legacy support"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Update all dependencies"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Update Pattern class usage"}),"\n",(0,t.jsx)(n.li,{children:"Update UI components"}),"\n",(0,t.jsx)(n.li,{children:"Update test suites"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Final migration verification"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure all data migrated"}),"\n",(0,t.jsx)(n.li,{children:"Verify no legacy API usage"}),"\n",(0,t.jsx)(n.li,{children:"Performance regression testing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"deliverables-4",children:"Deliverables:"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Clean codebase without legacy API"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Updated documentation"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Migration completion report"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"implementation-timeline",children:"Implementation Timeline"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Phase"}),(0,t.jsx)(n.th,{children:"Duration"}),(0,t.jsx)(n.th,{children:"Start Date"}),(0,t.jsx)(n.th,{children:"End Date"}),(0,t.jsx)(n.th,{children:"Dependencies"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Phase 1"}),(0,t.jsx)(n.td,{children:"2-3 weeks"}),(0,t.jsx)(n.td,{children:"Week 1"}),(0,t.jsx)(n.td,{children:"Week 3"}),(0,t.jsx)(n.td,{children:"None"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Phase 2"}),(0,t.jsx)(n.td,{children:"3-4 weeks"}),(0,t.jsx)(n.td,{children:"Week 4"}),(0,t.jsx)(n.td,{children:"Week 7"}),(0,t.jsx)(n.td,{children:"Phase 1"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Phase 3"}),(0,t.jsx)(n.td,{children:"2-3 months"}),(0,t.jsx)(n.td,{children:"Week 8"}),(0,t.jsx)(n.td,{children:"Week 20"}),(0,t.jsx)(n.td,{children:"Phase 2"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Phase 4"}),(0,t.jsx)(n.td,{children:"2-3 weeks"}),(0,t.jsx)(n.td,{children:"Week 16"}),(0,t.jsx)(n.td,{children:"Week 19"}),(0,t.jsx)(n.td,{children:"Parallel with Phase 3"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Phase 5"}),(0,t.jsx)(n.td,{children:"1 week"}),(0,t.jsx)(n.td,{children:"Version 2.0"}),(0,t.jsx)(n.td,{children:"Version 2.0"}),(0,t.jsx)(n.td,{children:"All phases"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"risk-mitigation",children:"Risk Mitigation"}),"\n",(0,t.jsx)(n.h3,{id:"high-risk-areas",children:"High-Risk Areas"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Serialized Data Compatibility"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Risk"}),": Breaking existing saved states"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mitigation"}),": Dual deserialization support for 2 major versions"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Performance Degradation"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Risk"}),": ActionConfigAdapter overhead"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mitigation"}),": Caching and optimization in Phase 4"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"User Adoption"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Risk"}),": Slow migration to modern API"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mitigation"}),": Automated migration tools and extended deprecation period"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"rollback-strategy",children:"Rollback Strategy"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Feature flags"})," for new functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Versioned APIs"})," during transition"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data backup"})," before migration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Phased rollout"})," with monitoring"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"success-metrics",children:"Success Metrics"}),"\n",(0,t.jsx)(n.h3,{id:"phase-1-metrics",children:"Phase 1 Metrics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Zero hardcoded ActionOptions.Action references"}),"\n",(0,t.jsx)(n.li,{children:"All tests passing with modern API"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-2-metrics",children:"Phase 2 Metrics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"100% of existing data migrateable"}),"\n",(0,t.jsx)(n.li,{children:"Migration tool processes 1000+ records/second"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-3-metrics",children:"Phase 3 Metrics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"< 5% deprecated API usage after 2 months"}),"\n",(0,t.jsx)(n.li,{children:"90% of users migrated to modern API"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-4-metrics",children:"Phase 4 Metrics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"< 10% performance overhead vs legacy API"}),"\n",(0,t.jsx)(n.li,{children:"Sub-millisecond ActionConfigAdapter operations"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-5-metrics",children:"Phase 5 Metrics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Zero legacy API code in codebase"}),"\n",(0,t.jsx)(n.li,{children:"All dependent modules updated"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"developer-migration-guide",children:"Developer Migration Guide"}),"\n",(0,t.jsx)(n.h3,{id:"for-library-users",children:"For Library Users"}),"\n",(0,t.jsx)(n.h4,{id:"step-1-update-method-calls",children:"Step 1: Update method calls"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// Old way (deprecated)\nActionRecord snapshot = history.getRandomSnapshot(ActionOptions.Action.FIND);\n\n// New way (recommended)\nPatternFindOptions findConfig = new PatternFindOptions.Builder()\n    .setStrategy(PatternFindOptions.Strategy.BEST)\n    .build();\nActionRecord snapshot = history.getRandomSnapshot(findConfig);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"step-2-update-actionrecord-creation",children:"Step 2: Update ActionRecord creation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// Old way (deprecated)\nActionRecord record = new ActionRecord.Builder()\n    .setActionOptions(new ActionOptions.Builder()\n        .setAction(ActionOptions.Action.CLICK)\n        .build())\n    .build();\n\n// New way (recommended)\nActionRecord record = new ActionRecord.Builder()\n    .setActionConfig(new ClickOptions.Builder()\n        .setClickType(ClickOptions.Type.LEFT)\n        .build())\n    .build();\n"})}),"\n",(0,t.jsx)(n.h4,{id:"step-3-run-migration-tool",children:"Step 3: Run migration tool"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"java -jar brobot-migration-tool.jar \\\n    --source ./src \\\n    --migrate-actionhistory \\\n    --backup ./backup\n"})}),"\n",(0,t.jsx)(n.h3,{id:"for-framework-contributors",children:"For Framework Contributors"}),"\n",(0,t.jsx)(n.h4,{id:"understanding-the-adapter-pattern",children:"Understanding the Adapter Pattern"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// ActionConfigAdapter handles the translation\npublic class ActionConfigAdapter {\n    public ActionOptions.Action getActionType(ActionConfig config) {\n        // Maps modern config to legacy action type\n        if (config instanceof PatternFindOptions) return FIND;\n        if (config instanceof ClickOptions) return CLICK;\n        // ...\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"testing-both-apis",children:"Testing Both APIs"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"@Test\npublic void testDualAPICompatibility() {\n    // Test legacy API\n    ActionRecord legacyResult = history.getRandomSnapshot(\n        ActionOptions.Action.FIND\n    );\n    \n    // Test modern API\n    ActionRecord modernResult = history.getRandomSnapshot(\n        new PatternFindOptions.Builder().build()\n    );\n    \n    // Results should be equivalent\n    assertEquals(legacyResult.getActionType(), modernResult.getActionType());\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"communication-plan",children:"Communication Plan"}),"\n",(0,t.jsx)(n.h3,{id:"version-120-phase-1-2-complete",children:"Version 1.2.0 (Phase 1-2 Complete)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Release notes highlighting new ActionConfig API"}),"\n",(0,t.jsx)(n.li,{children:"Migration guide publication"}),"\n",(0,t.jsx)(n.li,{children:"Deprecation warnings added"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"version-130-phase-3-start",children:"Version 1.3.0 (Phase 3 Start)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Enhanced deprecation warnings"}),"\n",(0,t.jsx)(n.li,{children:"Migration tool availability"}),"\n",(0,t.jsx)(n.li,{children:"Community workshops"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"version-150-phase-3-end",children:"Version 1.5.0 (Phase 3 End)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Final deprecation notice"}),"\n",(0,t.jsx)(n.li,{children:"Legacy API usage report"}),"\n",(0,t.jsx)(n.li,{children:"Version 2.0 timeline announcement"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"version-200-phase-5",children:"Version 2.0.0 (Phase 5)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Legacy API removal"}),"\n",(0,t.jsx)(n.li,{children:"Final migration guide"}),"\n",(0,t.jsx)(n.li,{children:"Success celebration \ud83c\udf89"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"This migration plan provides a structured approach to completing the ActionHistory transition from ActionOptions to ActionConfig. By following these phases, we can ensure:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Backward compatibility"})," during transition"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minimal disruption"})," to existing users"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance parity"})," or improvement"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clean, modern API"})," for future development"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The key to success is gradual migration with comprehensive tooling support and clear communication throughout the process."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(96540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);
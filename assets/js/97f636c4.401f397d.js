"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[581],{14680:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"core-library/guides/monitor-configuration","title":"Multi-Monitor Configuration Guide","description":"Brobot supports multi-monitor environments, allowing you to specify which monitor to use for automation operations. This is particularly useful when you want to run your IDE on one monitor while performing GUI automation on another.","source":"@site/docs/03-core-library/guides/monitor-configuration.md","sourceDirName":"03-core-library/guides","slug":"/core-library/guides/monitor-configuration","permalink":"/brobot/docs/core-library/guides/monitor-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/guides/monitor-configuration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Migration Status Report","permalink":"/brobot/docs/core-library/guides/migration-status-report"},"next":{"title":"Persistence Module User Guide","permalink":"/brobot/docs/core-library/guides/persistence-user-guide"}}');var r=i(74848),t=i(28453);const s={},l="Multi-Monitor Configuration Guide",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Basic Configuration",id:"basic-configuration",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:3},{value:"Using Configuration Profiles",id:"using-configuration-profiles",level:2},{value:"Monitor Indexing",id:"monitor-indexing",level:2},{value:"Example 3-Monitor Setup",id:"example-3-monitor-setup",level:3},{value:"Logging",id:"logging",level:2},{value:"Startup Logs",id:"startup-logs",level:3},{value:"Operation Logs",id:"operation-logs",level:3},{value:"Programmatic Access",id:"programmatic-access",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Development Setup",id:"development-setup",level:3},{value:"Testing Across Monitors",id:"testing-across-monitors",level:3},{value:"Monitor-Specific Operations",id:"monitor-specific-operations",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debugging",id:"debugging",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Configuration Properties",id:"configuration-properties",level:3},{value:"MonitorManager Methods",id:"monitormanager-methods",level:3}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"multi-monitor-configuration-guide",children:"Multi-Monitor Configuration Guide"})}),"\n",(0,r.jsx)(e.p,{children:"Brobot supports multi-monitor environments, allowing you to specify which monitor to use for automation operations. This is particularly useful when you want to run your IDE on one monitor while performing GUI automation on another."}),"\n",(0,r.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(e.p,{children:"By default, Brobot uses the primary monitor for all operations. With multi-monitor support enabled, you can:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Specify a default monitor for all operations"}),"\n",(0,r.jsx)(e.li,{children:"Assign specific operations to specific monitors"}),"\n",(0,r.jsx)(e.li,{children:"Enable logging to track which monitor is being used"}),"\n",(0,r.jsx)(e.li,{children:"Search across all monitors or limit to specific ones"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(e.h3,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,r.jsxs)(e.p,{children:["Add the following to your ",(0,r.jsx)(e.code,{children:"application.yml"})," or create a profile-specific configuration file:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"brobot:\n  monitor:\n    # Enable multi-monitor support\n    multi-monitor-enabled: true\n    \n    # Default monitor to use (0 = primary, 1 = secondary, etc.)\n    default-screen-index: 1\n    \n    # Enable logging of monitor information\n    log-monitor-info: true\n"})}),"\n",(0,r.jsx)(e.h3,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,r.jsx)(e.p,{children:"For more control, you can assign specific operations to specific monitors:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"brobot:\n  monitor:\n    multi-monitor-enabled: true\n    default-screen-index: 1\n    log-monitor-info: true\n    \n    # Search across all monitors when finding elements\n    search-all-monitors: false\n    \n    # Assign specific operations to specific monitors\n    operation-monitor-map:\n      find: 1\n      find-multiple: 1\n      click: 1\n      type: 1\n      drag: 1\n      screenshot: 1\n"})}),"\n",(0,r.jsx)(e.h2,{id:"using-configuration-profiles",children:"Using Configuration Profiles"}),"\n",(0,r.jsxs)(e.p,{children:["Create a profile-specific configuration file ",(0,r.jsx)(e.code,{children:"application-multimonitor.yml"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"brobot:\n  monitor:\n    multi-monitor-enabled: true\n    default-screen-index: 1\n    log-monitor-info: true\n"})}),"\n",(0,r.jsx)(e.p,{children:"Then activate it using one of these methods:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Command line argument:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"java -jar your-app.jar --spring.profiles.active=multimonitor\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Environment variable:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"export SPRING_PROFILES_ACTIVE=multimonitor\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"In application.yml:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"spring:\n  profiles:\n    active: multimonitor\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"monitor-indexing",children:"Monitor Indexing"}),"\n",(0,r.jsx)(e.p,{children:"Monitors are indexed starting from 0:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Monitor 0: Primary monitor"}),"\n",(0,r.jsx)(e.li,{children:"Monitor 1: First secondary monitor"}),"\n",(0,r.jsx)(e.li,{children:"Monitor 2: Second secondary monitor"}),"\n",(0,r.jsx)(e.li,{children:"etc."}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"example-3-monitor-setup",children:"Example 3-Monitor Setup"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"[Monitor 0 - Left]   [Monitor 1 - Middle]   [Monitor 2 - Right]\n   IDE/Development       GUI Automation          Other Apps\n"})}),"\n",(0,r.jsx)(e.h2,{id:"logging",children:"Logging"}),"\n",(0,r.jsxs)(e.p,{children:["When ",(0,r.jsx)(e.code,{children:"log-monitor-info"})," is enabled, you'll see detailed information about monitor detection and usage:"]}),"\n",(0,r.jsx)(e.h3,{id:"startup-logs",children:"Startup Logs"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"INFO  MonitorManager - Detected 3 monitor(s)\nINFO  MonitorManager - Monitor 0: :0.0 - Bounds: x=0, y=0, width=1920, height=1080\nINFO  MonitorManager - Monitor 1: :0.1 - Bounds: x=1920, y=0, width=1920, height=1080\nINFO  MonitorManager - Monitor 2: :0.2 - Bounds: x=3840, y=0, width=1920, height=1080\n"})}),"\n",(0,r.jsx)(e.h3,{id:"operation-logs",children:"Operation Logs"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"INFO  BufferedImageUtilities - Using monitor 1 for find operation\nINFO  MonitorManager - Operation 'click' assigned to monitor 1\n"})}),"\n",(0,r.jsx)(e.h2,{id:"programmatic-access",children:"Programmatic Access"}),"\n",(0,r.jsx)(e.p,{children:"You can also interact with monitors programmatically:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'@Autowired\nprivate MonitorManager monitorManager;\n\n// Get information about all monitors\nList<MonitorInfo> monitors = monitorManager.getAllMonitorInfo();\n\n// Set a specific monitor for an operation\nmonitorManager.setOperationMonitor("custom-operation", 2);\n\n// Get the monitor containing a specific point\nint monitorIndex = monitorManager.getMonitorAtPoint(new Point(2000, 500));\n'})}),"\n",(0,r.jsx)(e.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsx)(e.h3,{id:"development-setup",children:"Development Setup"}),"\n",(0,r.jsx)(e.p,{children:"Run your IDE on the left monitor while automation happens on the middle monitor:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"brobot:\n  monitor:\n    default-screen-index: 1  # Middle monitor\n    operation-monitor-map:\n      find: 1\n      click: 1\n"})}),"\n",(0,r.jsx)(e.h3,{id:"testing-across-monitors",children:"Testing Across Monitors"}),"\n",(0,r.jsx)(e.p,{children:"Search for elements across all monitors:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"brobot:\n  monitor:\n    search-all-monitors: true\n    log-monitor-info: true\n"})}),"\n",(0,r.jsx)(e.h3,{id:"monitor-specific-operations",children:"Monitor-Specific Operations"}),"\n",(0,r.jsx)(e.p,{children:"Different operations on different monitors:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"brobot:\n  monitor:\n    operation-monitor-map:\n      find: 0        # Search on primary\n      click: 1       # Click on secondary\n      screenshot: 2  # Capture from third monitor\n"})}),"\n",(0,r.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(e.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Monitor not detected:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Ensure the monitor is connected and recognized by the OS"}),"\n",(0,r.jsx)(e.li,{children:"Check startup logs for monitor detection information"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Operations happening on wrong monitor:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Verify the monitor index in configuration"}),"\n",(0,r.jsxs)(e.li,{children:["Enable ",(0,r.jsx)(e.code,{children:"log-monitor-info"})," to see which monitor is being used"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Configuration not taking effect:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Ensure the configuration profile is active"}),"\n",(0,r.jsxs)(e.li,{children:["Check that ",(0,r.jsx)(e.code,{children:"multi-monitor-enabled"})," is set to ",(0,r.jsx)(e.code,{children:"true"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"debugging",children:"Debugging"}),"\n",(0,r.jsx)(e.p,{children:"Enable debug logging for more detailed information:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"logging:\n  level:\n    io.github.jspinak.brobot.monitor: DEBUG\n"})}),"\n",(0,r.jsx)(e.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,r.jsx)(e.h3,{id:"configuration-properties",children:"Configuration Properties"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Property"}),(0,r.jsx)(e.th,{children:"Type"}),(0,r.jsx)(e.th,{children:"Default"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"multi-monitor-enabled"})}),(0,r.jsx)(e.td,{children:"boolean"}),(0,r.jsx)(e.td,{children:"false"}),(0,r.jsx)(e.td,{children:"Enable multi-monitor support"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"default-screen-index"})}),(0,r.jsx)(e.td,{children:"int"}),(0,r.jsx)(e.td,{children:"-1"}),(0,r.jsx)(e.td,{children:"Default monitor index (-1 uses primary)"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"search-all-monitors"})}),(0,r.jsx)(e.td,{children:"boolean"}),(0,r.jsx)(e.td,{children:"false"}),(0,r.jsx)(e.td,{children:"Search across all monitors"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"log-monitor-info"})}),(0,r.jsx)(e.td,{children:"boolean"}),(0,r.jsx)(e.td,{children:"true"}),(0,r.jsx)(e.td,{children:"Log monitor information"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"operation-monitor-map"})}),(0,r.jsx)(e.td,{children:"Map<String, Integer>"}),(0,r.jsx)(e.td,{children:"empty"}),(0,r.jsx)(e.td,{children:"Map operations to specific monitors"})]})]})]}),"\n",(0,r.jsx)(e.h3,{id:"monitormanager-methods",children:"MonitorManager Methods"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"getScreen(int monitorIndex)"}),": Get Screen for specific monitor"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"getScreen(String operationName)"}),": Get Screen based on operation mapping"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"getAllScreens()"}),": Get all available screens"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"getMonitorInfo(int index)"}),": Get information about a specific monitor"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"setOperationMonitor(String operation, int monitor)"}),": Assign operation to monitor"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>l});var o=i(96540);const r={},t=o.createContext(r);function s(n){const e=o.useContext(t);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),o.createElement(t.Provider,{value:e},n.children)}}}]);
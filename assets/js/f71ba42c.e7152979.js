"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2905],{28453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>r});var o=i(96540);const t={},l=o.createContext(t);function s(n){const e=o.useContext(l);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),o.createElement(l.Provider,{value:e},n.children)}},83504:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"core-library/action-config/conditional-chains-examples","title":"Enhanced Conditional Action Chains","description":"Overview","source":"@site/docs/03-core-library/action-config/15-conditional-chains-examples.md","sourceDirName":"03-core-library/action-config","slug":"/core-library/action-config/conditional-chains-examples","permalink":"/brobot/docs/core-library/action-config/conditional-chains-examples","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/action-config/15-conditional-chains-examples.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Pure Actions API Reference","permalink":"/brobot/docs/core-library/action-config/pure-actions-api"},"next":{"title":"ConditionalActionWrapper","permalink":"/brobot/docs/core-library/action-config/conditional-action-wrapper"}}');var t=i(74848),l=i(28453);const s={},r="Enhanced Conditional Action Chains",c={},a=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Basic Examples",id:"basic-examples",level:2},{value:"Simple Find and Click",id:"simple-find-and-click",level:3},{value:"Sequential Actions with then()",id:"sequential-actions-with-then",level:3},{value:"Real-World Scenarios",id:"real-world-scenarios",level:2},{value:"Login Flow",id:"login-flow",level:3},{value:"Save with Confirmation Dialog",id:"save-with-confirmation-dialog",level:3},{value:"Retry Pattern",id:"retry-pattern",level:3},{value:"Advanced Patterns",id:"advanced-patterns",level:2},{value:"Multi-Step Form Filling",id:"multi-step-form-filling",level:3},{value:"Dynamic UI Navigation with Scrolling",id:"dynamic-ui-navigation-with-scrolling",level:3},{value:"Keyboard Shortcuts Workflow",id:"keyboard-shortcuts-workflow",level:3},{value:"Conditional Patterns",id:"conditional-patterns",level:2},{value:"Error Handling with Control Flow",id:"error-handling-with-control-flow",level:3},{value:"Wait for Element to Disappear",id:"wait-for-element-to-disappear",level:3},{value:"Highlighting and Debugging",id:"highlighting-and-debugging",level:3},{value:"Model-Based Automation Principles",id:"model-based-automation-principles",level:2},{value:"No Explicit Waits",id:"no-explicit-waits",level:3},{value:"State-Based Navigation",id:"state-based-navigation",level:3},{value:"Testing Patterns",id:"testing-patterns",level:2},{value:"Mock-Friendly Chains",id:"mock-friendly-chains",level:3},{value:"Complete API Reference",id:"complete-api-reference",level:2},{value:"Core Methods",id:"core-methods",level:3},{value:"Convenience Methods",id:"convenience-methods",level:3},{value:"Keyboard Shortcuts",id:"keyboard-shortcuts",level:3},{value:"Control Flow",id:"control-flow",level:3},{value:"Logging &amp; Debugging",id:"logging--debugging",level:3},{value:"Custom Handlers",id:"custom-handlers",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Migration from Basic ConditionalActionChain",id:"migration-from-basic-conditionalactionchain",level:2},{value:"Common Pitfalls to Avoid",id:"common-pitfalls-to-avoid",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"enhanced-conditional-action-chains",children:"Enhanced Conditional Action Chains"})}),"\n",(0,t.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"ConditionalActionChain"})," provides a powerful fluent API for building complex action sequences with conditional execution. This enhanced implementation adds the missing features from the original design, including the crucial ",(0,t.jsx)(e.code,{children:"then()"})," method for sequential composition and numerous convenience methods."]}),"\n",(0,t.jsx)(e.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Sequential Composition"}),": The ",(0,t.jsx)(e.code,{children:"then()"})," method enables multi-step workflows"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Convenience Methods"}),": Direct methods like ",(0,t.jsx)(e.code,{children:"click()"}),", ",(0,t.jsx)(e.code,{children:"type()"}),", ",(0,t.jsx)(e.code,{children:"scrollDown()"})]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Keyboard Shortcuts"}),": Built-in support for common key combinations"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Control Flow"}),": Methods for stopping chains, retrying, and error handling"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"No Explicit Waits"}),": Follows model-based principles - timing via action configurations"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Proper Conditional Logic"}),": True if/then/else execution flow"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"basic-examples",children:"Basic Examples"}),"\n",(0,t.jsx)(e.h3,{id:"simple-find-and-click",children:"Simple Find and Click"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'// Basic find and click pattern\nConditionalActionChain.find(buttonImage)\n    .ifFoundClick()\n    .ifNotFoundLog("Button not found")\n    .perform(action, new ObjectCollection.Builder().build());\n'})}),"\n",(0,t.jsx)(e.h3,{id:"sequential-actions-with-then",children:"Sequential Actions with then()"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'// The then() method enables sequential workflows\nConditionalActionChain.find(menuButton)\n    .ifFoundClick()\n    .then(searchField)  // Move to next element\n    .ifFoundClick()\n    .ifFoundType("search query")\n    .then(submitButton) // Continue the flow\n    .ifFoundClick()\n    .perform(action, new ObjectCollection.Builder().build());\n'})}),"\n",(0,t.jsx)(e.h2,{id:"real-world-scenarios",children:"Real-World Scenarios"}),"\n",(0,t.jsx)(e.h3,{id:"login-flow",children:"Login Flow"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult performLogin(String username, String password) {\n    return ConditionalActionChain.find(loginButton)\n        .ifFoundClick()\n        .ifNotFoundLog("Login button not visible")\n        .then(usernameField)  // Sequential action using then()\n        .ifFoundClick()\n        .ifFoundType(username)\n        .then(passwordField)  // Continue to next field\n        .ifFoundClick()\n        .ifFoundType(password)\n        .then(submitButton)   // Move to submit\n        .ifFoundClick()\n        .then(successMessage) // Check for success\n        .ifFoundLog("Login successful!")\n        .ifNotFoundLog("Login might have failed")\n        .perform(action, new ObjectCollection.Builder().build());\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"save-with-confirmation-dialog",children:"Save with Confirmation Dialog"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult saveWithConfirmation() {\n    StateImage saveButton = new StateImage.Builder()\n        .addPattern("images/buttons/save.png")\n        .build();\n    \n    return ConditionalActionChain.find(saveButton)\n        .ifFoundClick()\n        .ifNotFoundLog("Save button not found")\n        .then(confirmDialog)  // Look for confirmation\n        .then(yesButton)      // Find yes button within dialog\n        .ifFoundClick()\n        .ifNotFoundLog("No confirmation needed")\n        .then(successMessage) // Verify success\n        .ifFoundLog("Save successful")\n        .ifNotFoundLog("Save may have failed")\n        .perform(action, new ObjectCollection.Builder().build());\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"retry-pattern",children:"Retry Pattern"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult clickWithRetry(StateImage target, int maxRetries) {\n    return ConditionalActionChain\n        .retry(new PatternFindOptions.Builder().build(), maxRetries)\n        .ifFoundClick()\n        .ifFoundLog("Successfully clicked after retries")\n        .ifNotFoundLog("Failed after all attempts")\n        .perform(action, new ObjectCollection.Builder()\n            .withImages(target)\n            .build());\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"advanced-patterns",children:"Advanced Patterns"}),"\n",(0,t.jsx)(e.h3,{id:"multi-step-form-filling",children:"Multi-Step Form Filling"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult fillComplexForm(FormData data) {\n    return ConditionalActionChain\n        .find(new PatternFindOptions.Builder().build())\n        .ifNotFoundLog("Form not visible")\n        .ifNotFoundDo(res -> { throw new RuntimeException("Cannot proceed without form"); })\n        \n        // Name field - using clearAndType\n        .then(nameField)\n        .ifFoundClick()\n        .clearAndType(data.getName())\n        \n        // Email field - using tab navigation\n        .pressTab()\n        .type(data.getEmail())\n        \n        // Phone field - using direct navigation\n        .then(phoneField)\n        .ifFoundClick()\n        .ifFoundType(data.getPhone())\n        \n        // Submit form\n        .then(submitButton)\n        .ifFoundClick()\n        .takeScreenshot("form-submission")\n        .perform(action, new ObjectCollection.Builder().build());\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"dynamic-ui-navigation-with-scrolling",children:"Dynamic UI Navigation with Scrolling"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult scrollToFind(StateImage target) {\n    return ConditionalActionChain.find(target)\n        .ifNotFound(chain -> chain.scrollDown())\n        .ifNotFound(new PatternFindOptions.Builder().build())\n        .ifNotFound(chain -> chain.scrollDown())\n        .ifNotFound(new PatternFindOptions.Builder().build())\n        .ifNotFound(chain -> chain.scrollDown())\n        .ifFoundClick()\n        .ifFoundLog("Found and clicked target after scrolling")\n        .ifNotFoundLog("Could not find target even after scrolling")\n        .perform(action, new ObjectCollection.Builder()\n            .withImages(target)\n            .build());\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"keyboard-shortcuts-workflow",children:"Keyboard Shortcuts Workflow"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult useKeyboardShortcuts() {\n    return ConditionalActionChain\n        .find(editorField)\n        .ifFoundClick()\n        .pressCtrlA()      // Select all\n        .pressDelete()     // Delete content\n        .type("New content here")\n        .pressCtrlS()      // Save\n        .then(savedIndicator)\n        .ifFoundLog("Document saved successfully")\n        .perform(action, new ObjectCollection.Builder().build());\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"conditional-patterns",children:"Conditional Patterns"}),"\n",(0,t.jsx)(e.h3,{id:"error-handling-with-control-flow",children:"Error Handling with Control Flow"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult handleErrors() {\n    return ConditionalActionChain\n        .find(submitButton)\n        .ifFoundClick()\n        .then(errorDialog)\n        .ifFoundLog("Error dialog appeared")\n        .ifFound(chain -> chain.takeScreenshot("error-state"))\n        .ifFoundDo(res -> {\n            log.error("Operation failed with error: {}", res.getText());\n        })\n        .stopIf(res -> res.getText() != null && \n                !res.getText().isEmpty() && \n                res.getText().get(0).contains("CRITICAL"))\n        .then(retryButton)\n        .ifFoundClick()\n        .ifFoundLog("Retrying operation")\n        .perform(action, new ObjectCollection.Builder().build());\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"wait-for-element-to-disappear",children:"Wait for Element to Disappear"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult waitForLoadingToComplete() {\n    StateImage loadingSpinner = new StateImage.Builder()\n        .addPattern("images/indicators/loading.png")\n        .build();\n    \n    return ConditionalActionChain\n        .find(submitButton)\n        .ifFoundClick()\n        .waitVanish(loadingSpinner)  // Wait for spinner to disappear\n        .then(successMessage)\n        .ifFoundLog("Operation completed successfully")\n        .then(errorDialog)\n        .ifFoundLog("Operation failed")\n        .perform(action, new ObjectCollection.Builder().build());\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"highlighting-and-debugging",children:"Highlighting and Debugging"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult debugWorkflow() {\n    return ConditionalActionChain\n        .find(targetElement)\n        .ifFound(chain -> chain.highlight())  // Highlight found element\n        .ifFoundLog("Found target element")   // Log for debugging\n        .takeScreenshot("debug-1")            // Take screenshot\n        .ifFoundClick()\n        .takeScreenshot("debug-2")            // Another screenshot\n        .perform(action, new ObjectCollection.Builder().build());\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"model-based-automation-principles",children:"Model-Based Automation Principles"}),"\n",(0,t.jsx)(e.h3,{id:"no-explicit-waits",children:"No Explicit Waits"}),"\n",(0,t.jsxs)(e.p,{children:["Unlike process-based automation, ConditionalActionChain does ",(0,t.jsx)(e.strong,{children:"not"})," include a ",(0,t.jsx)(e.code,{children:"wait()"})," method. This is intentional:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'// WRONG - Process-based approach with explicit waits\nchain.click().wait(2.0).type("text")  // Don\'t do this!\n\n// CORRECT - Model-based approach with action configurations\nPatternFindOptions findWithDelay = new PatternFindOptions.Builder()\n    .setPauseBeforeBegin(2.0)  // Timing in action configuration\n    .build();\n    \nConditionalActionChain.find(findWithDelay)\n    .ifFoundClick()\n    .then(new TypeOptions.Builder()\n        .setTypeDelay(0.1)  // Type-specific timing\n        .build())\n    .perform(action, objectCollection);\n'})}),"\n",(0,t.jsx)(e.h3,{id:"state-based-navigation",children:"State-Based Navigation"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'public ActionResult navigateToState(State targetState) {\n    // Focus on states, not processes\n    return ConditionalActionChain\n        .find(targetState.getIdentifyingImage())\n        .ifFoundLog("Already in target state")\n        .ifNotFound(navigationButton)\n        .ifFoundClick()\n        .then(targetState.getIdentifyingImage())\n        .ifFoundLog("Successfully navigated to state")\n        .ifNotFoundDo(res -> {\n            throw new StateTransitionException("Failed to reach target state");\n        })\n        .perform(action, new ObjectCollection.Builder().build());\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"testing-patterns",children:"Testing Patterns"}),"\n",(0,t.jsx)(e.h3,{id:"mock-friendly-chains",children:"Mock-Friendly Chains"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'@Test\npublic void testEnhancedChainFeatures() {\n    // Setup mock\n    Action mockAction = mock(Action.class);\n    ActionResult successResult = new ActionResult();\n    successResult.setSuccess(true);\n    \n    when(mockAction.perform(any(ActionConfig.class), any(ObjectCollection[].class)))\n        .thenReturn(successResult);\n    \n    // Test the then() method\n    ActionResult result = ConditionalActionChain\n        .find(loginButton)\n        .ifFoundClick()\n        .then(usernameField)  // Sequential composition\n        .ifFoundType("testuser")\n        .then(passwordField)  // Continue flow\n        .ifFoundType("password")\n        .perform(mockAction, new ObjectCollection.Builder().build());\n    \n    assertTrue(result.isSuccess());\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"complete-api-reference",children:"Complete API Reference"}),"\n",(0,t.jsx)(e.h3,{id:"core-methods",children:"Core Methods"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"find(PatternFindOptions)"})," / ",(0,t.jsx)(e.code,{children:"find(StateImage)"})," - Start chain with find"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"then(ActionConfig)"})," / ",(0,t.jsx)(e.code,{children:"then(StateImage)"})," - Sequential action composition"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"ifFound(ActionConfig)"})," - Execute if previous succeeded"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"ifNotFound(ActionConfig)"})," - Execute if previous failed"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"always(ActionConfig)"})," - Execute regardless"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"convenience-methods",children:"Convenience Methods"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"click()"})," / ",(0,t.jsx)(e.code,{children:"ifFoundClick()"})," - Click actions"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"type(String)"})," / ",(0,t.jsx)(e.code,{children:"ifFoundType(String)"})," - Type text"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"clearAndType(String)"})," - Clear field and type"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"scrollDown()"})," / ",(0,t.jsx)(e.code,{children:"scrollUp()"})," - Scroll actions"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"highlight()"})," - Highlight last found element"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"waitVanish(StateImage)"})," - Wait for element to disappear"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"keyboard-shortcuts",children:"Keyboard Shortcuts"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"pressEnter()"}),", ",(0,t.jsx)(e.code,{children:"pressTab()"}),", ",(0,t.jsx)(e.code,{children:"pressEscape()"})]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"pressCtrlS()"}),", ",(0,t.jsx)(e.code,{children:"pressCtrlA()"}),", ",(0,t.jsx)(e.code,{children:"pressDelete()"})]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"pressKey(int keyCode)"})," - Press specific key"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"pressKeyCombo(int modifier, int key)"})," - Key combinations"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"control-flow",children:"Control Flow"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"stopChain()"})," - Stop execution"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"stopIf(Predicate<ActionResult>)"})," - Conditional stop"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"retry(ActionConfig, int)"})," - Retry pattern"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"throwError(String)"})," - Throw exception"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"logging--debugging",children:"Logging & Debugging"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"log(String)"})," - Log message"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"ifFoundLog(String)"})," / ",(0,t.jsx)(e.code,{children:"ifNotFoundLog(String)"})," - Conditional logging"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"takeScreenshot(String)"})," - Capture screenshot"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"custom-handlers",children:"Custom Handlers"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"ifFoundDo(Consumer<ActionResult>)"})," - Custom success handler"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"ifNotFoundDo(Consumer<ActionResult>)"})," - Custom failure handler"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"ifFound(Consumer<ConditionalActionChain>)"})," - Chain operations"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"ifNotFound(Consumer<ConditionalActionChain>)"})," - Chain operations"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Use then() for Sequential Actions"}),": The then() method is essential for multi-step workflows"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"No Explicit Waits"}),": Use action configurations for timing, not wait() calls"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Leverage Convenience Methods"}),": Use built-in methods like click() and type()"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Add Logging"}),": Use ifFoundLog/ifNotFoundLog for debugging"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Handle Failures"}),": Always provide ifNotFound alternatives"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Keep Chains Focused"}),": Break complex workflows into smaller methods"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Think States, Not Processes"}),": Focus on state transitions, not step-by-step procedures"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"migration-from-basic-conditionalactionchain",children:"Migration from Basic ConditionalActionChain"}),"\n",(0,t.jsx)(e.p,{children:"The original ConditionalActionChain was limited. Here's how to migrate:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'// OLD - Limited ConditionalActionChain (no then() method!)\nConditionalActionChain.find(button)\n    .ifFound(click())\n    // Can\'t continue to next element without then()!\n    \n// NEW - ConditionalActionChain\nConditionalActionChain.find(button)\n    .ifFoundClick()\n    .then(nextElement)  // Now you can continue!\n    .ifFoundClick()\n    .then(anotherElement)  // And continue further!\n    .ifFoundType("text")\n'})}),"\n",(0,t.jsx)(e.h2,{id:"common-pitfalls-to-avoid",children:"Common Pitfalls to Avoid"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Don't Use Explicit Waits"}),": No wait() method by design - use action configurations"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Don't Forget then()"}),": Use then() to move between different elements"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Don't Mix APIs"}),": Use ConditionalActionChain, not the basic version"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Don't Ignore State"}),": Think in terms of application states, not process steps"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Don't Skip Error Handling"}),": Always handle the ifNotFound case"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}}}]);
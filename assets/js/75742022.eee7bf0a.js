"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3868],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var a=n(96540);const o={},r=a.createContext(o);function i(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:t},e.children)}},56353:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"core-library/tutorials/tutorial-mrdoob/states","title":"States","description":"This tutorial was originally created for an earlier version of Brobot but has been updated for version 1.1.0 with the new annotation system.","source":"@site/docs/03-core-library/tutorials/tutorial-mrdoob/states.md","sourceDirName":"03-core-library/tutorials/tutorial-mrdoob","slug":"/core-library/tutorials/tutorial-mrdoob/states","permalink":"/brobot/docs/core-library/tutorials/tutorial-mrdoob/states","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/tutorials/tutorial-mrdoob/states.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docSidebar","previous":{"title":"State Images","permalink":"/brobot/docs/core-library/tutorials/tutorial-mrdoob/images"},"next":{"title":"Transitions","permalink":"/brobot/docs/core-library/tutorials/tutorial-mrdoob/transitions"}}');var o=n(74848),r=n(28453);const i={sidebar_position:4},s="States",l={},c=[{value:"Homepage State",id:"homepage-state",level:2},{value:"Harmony State",id:"harmony-state",level:2},{value:"About State",id:"about-state",level:2},{value:"Key Improvements with Annotations",id:"key-improvements-with-annotations",level:2},{value:"Before (Manual Registration)",id:"before-manual-registration",level:3},{value:"After (Automatic Registration)",id:"after-automatic-registration",level:3},{value:"Benefits",id:"benefits",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"states",children:"States"})}),"\n",(0,o.jsx)(t.admonition,{title:"Version Note",type:"info",children:(0,o.jsx)(t.p,{children:"This tutorial was originally created for an earlier version of Brobot but has been updated for version 1.1.0 with the new annotation system."})}),"\n",(0,o.jsxs)(t.p,{children:["Now we can define our states using the new annotation system. Each state is automatically registered with Brobot using the ",(0,o.jsx)(t.code,{children:"@State"})," annotation."]}),"\n",(0,o.jsx)(t.p,{children:"Here are our 3 state classes:"}),"\n",(0,o.jsx)(t.h2,{id:"homepage-state",children:"Homepage State"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'package com.example.mrdoob.states;\n\nimport io.github.jspinak.brobot.annotations.State;\nimport io.github.jspinak.brobot.model.state.StateImage;\nimport lombok.Getter;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Component;\n\n@State(initial = true)\n@Component\n@Getter\n@Slf4j\npublic class Homepage {\n    \n    private final StateImage harmony;\n    \n    public Homepage() {\n        harmony = new StateImage.Builder()\n                .addPattern("harmonyIcon")\n                .build();\n        log.info("Homepage state created");\n    }\n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"harmony-state",children:"Harmony State"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'package com.example.mrdoob.states;\n\nimport io.github.jspinak.brobot.annotations.State;\nimport io.github.jspinak.brobot.model.state.StateImage;\nimport lombok.Getter;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Component;\n\n@State\n@Component\n@Getter\n@Slf4j\npublic class Harmony {\n    \n    private final StateImage about;\n    \n    public Harmony() {\n        about = new StateImage.Builder()\n                .addPattern("aboutButton")\n                .build();\n        log.info("Harmony state created");\n    }\n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"about-state",children:"About State"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'package com.example.mrdoob.states;\n\nimport io.github.jspinak.brobot.annotations.State;\nimport io.github.jspinak.brobot.model.state.StateImage;\nimport lombok.Getter;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Component;\n\n@State\n@Component\n@Getter\n@Slf4j\npublic class About {\n    \n    private final StateImage aboutText;\n    \n    public About() {\n        aboutText = new StateImage.Builder()\n                .addPattern("aboutText")\n                .build();\n        log.info("About state created");\n    }\n}\n'})}),"\n",(0,o.jsx)(t.h2,{id:"key-improvements-with-annotations",children:"Key Improvements with Annotations"}),"\n",(0,o.jsx)(t.h3,{id:"before-manual-registration",children:"Before (Manual Registration)"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'@Component\n@Getter\npublic class Homepage {\n    private State state = new State.Builder("homepage")\n            .withImages(harmony)\n            .build();\n    \n    public Homepage(AllStatesInProjectService stateService) {\n        stateService.save(state);  // Manual registration\n    }\n}\n'})}),"\n",(0,o.jsx)(t.h3,{id:"after-automatic-registration",children:"After (Automatic Registration)"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:"@State(initial = true)\n@Getter\n@Slf4j\npublic class Homepage {\n    // No manual registration needed!\n    // No State.Builder required!\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"benefits",children:"Benefits"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Automatic Registration"}),": The ",(0,o.jsx)(t.code,{children:"@State"})," annotation handles all registration"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Less Boilerplate"}),": No need for State.Builder or constructor injection"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Clear Initial State"}),": Use ",(0,o.jsx)(t.code,{children:"@State(initial = true)"})," to mark the starting state"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Better Focus"}),": State classes focus on their UI elements, not framework setup"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Standard Annotations"}),": Use ",(0,o.jsx)(t.code,{children:"@Getter"})," and ",(0,o.jsx)(t.code,{children:"@Slf4j"})," for clean, consistent code"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Always include these annotations:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:"@State              // Brobot state registration\n@Component          // Spring component registration\n@Getter             // Lombok getter generation\n@Slf4j              // Lombok logging\n"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Mark your initial state:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:"@State(initial = true)  // This is where the automation starts\n"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Use descriptive names for your StateImage fields - they should match the UI elements they represent"}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Initialize StateImages in the constructor for clarity"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["With our states defined, we can now create transitions between them using the ",(0,o.jsx)(t.code,{children:"@Transition"})," annotation."]})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);
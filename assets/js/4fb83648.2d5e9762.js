"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5848],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}},53569:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"core-library/guides/dynamic-transitions","title":"Dynamic Transitions","description":"Hidden States","source":"@site/versioned_docs/version-1.0.7/03-core-library/guides/dynamic-transitions.md","sourceDirName":"03-core-library/guides","slug":"/core-library/guides/dynamic-transitions","permalink":"/brobot/docs/1.0.7/core-library/guides/dynamic-transitions","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/versioned_docs/version-1.0.7/03-core-library/guides/dynamic-transitions.md","tags":[],"version":"1.0.7","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Dynamic Transitions"},"sidebar":"docSidebar","previous":{"title":"Processes as Objects","permalink":"/brobot/docs/1.0.7/core-library/guides/processes-as-objects"},"next":{"title":"Intro","permalink":"/brobot/docs/1.0.7/core-library/tutorials/tutorial-basics/intro"}}');var s=n(74848),o=n(28453);const r={sidebar_position:7,title:"Dynamic Transitions"},a=void 0,d={},c=[{value:"Hidden States",id:"hidden-states",level:2}];function l(e){const t={h2:"h2",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"hidden-states",children:"Hidden States"}),"\n",(0,s.jsx)(t.p,{children:"Imagine in the program you are controlling you have a menu that covers\npart of the screen. When it is opened, it covers any States in this area,\nand when it is closed these States reappear. Since the menu can be opened at\nany time while the program is running, you don't know beforehand which\nStates will be hidden. The easiest path to one of the hidden States is\nsimply closing the menu, but how can Brobot know this? The answer is through\nmanagement of hidden States, which are\nregistered for each State when the State is opened, and removed from the\nState's hidden States field when the State is closed. Transitions allow for\na variable State name called PREVIOUS to specify how to move to a hidden State."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1916],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(96540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}},63325:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"integrations/mcp-server/getting-started","title":"Getting Started with MCP Server","description":"The Model Context Protocol (MCP) Server enables AI agents to control Brobot automations through a RESTful API. This guide will help you set up and start using the MCP server in minutes.","source":"@site/docs/06-integrations/mcp-server/getting-started.md","sourceDirName":"06-integrations/mcp-server","slug":"/integrations/mcp-server/getting-started","permalink":"/brobot/docs/integrations/mcp-server/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/06-integrations/mcp-server/getting-started.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docSidebar","previous":{"title":"MCP Server","permalink":"/brobot/docs/category/mcp-server"},"next":{"title":"Installation Guide","permalink":"/brobot/docs/integrations/mcp-server/installation"}}');var r=t(74848),i=t(28453);const o={sidebar_position:1},l="Getting Started with MCP Server",a={},c=[{value:"What is MCP Server?",id:"what-is-mcp-server",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"1. Install MCP Server",id:"1-install-mcp-server",level:3},{value:"2. Build the CLI Bridge",id:"2-build-the-cli-bridge",level:3},{value:"3. Configure the Server",id:"3-configure-the-server",level:3},{value:"4. Start the Server",id:"4-start-the-server",level:3},{value:"Your First AI Automation",id:"your-first-ai-automation",level:2},{value:"Using Python Client",id:"using-python-client",level:3},{value:"Using Direct API Calls",id:"using-direct-api-calls",level:3},{value:"Core Concepts",id:"core-concepts",level:2},{value:"States and Observations",id:"states-and-observations",level:3},{value:"Actions",id:"actions",level:3},{value:"Integration Patterns",id:"integration-patterns",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Getting Help",id:"getting-help",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getting-started-with-mcp-server",children:"Getting Started with MCP Server"})}),"\n",(0,r.jsx)(n.p,{children:"The Model Context Protocol (MCP) Server enables AI agents to control Brobot automations through a RESTful API. This guide will help you set up and start using the MCP server in minutes."}),"\n",(0,r.jsx)(n.h2,{id:"what-is-mcp-server",children:"What is MCP Server?"}),"\n",(0,r.jsx)(n.p,{children:"The MCP Server acts as a bridge between AI systems and Brobot's automation capabilities:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"AI Agent (GPT-4, Claude) \u2192 MCP Server \u2192 Brobot \u2192 Your Application\n"})}),"\n",(0,r.jsx)(n.p,{children:"This enables:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83e\udd16 ",(0,r.jsx)(n.strong,{children:"Natural Language Control"}),": Tell AI what to do in plain English"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udc41\ufe0f ",(0,r.jsx)(n.strong,{children:"Visual Feedback"}),": AI can see screenshots and make decisions"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd04 ",(0,r.jsx)(n.strong,{children:"State-Based Automation"}),": Leverage Brobot's reliable state management"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\ude80 ",(0,r.jsx)(n.strong,{children:"Parallel Processing"}),": Handle multiple automation requests"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before starting, ensure you have:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Python 3.8 or higher"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Java 11 or higher"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Brobot framework installed"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 A GUI application to automate"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsx)(n.h3,{id:"1-install-mcp-server",children:"1. Install MCP Server"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/jspinak/brobot-mcp-server.git\ncd brobot-mcp-server\n\n# Install Python dependencies\npip install -e .\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-build-the-cli-bridge",children:"2. Build the CLI Bridge"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Build the Java CLI that connects to Brobot\ncd brobot-cli\ngradle shadowJar\ncd ..\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-configure-the-server",children:"3. Configure the Server"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-env",children:"# Disable mock mode to use real Brobot\nUSE_MOCK_DATA=false\n\n# Path to the CLI JAR\nBROBOT_CLI_JAR=brobot-cli/build/libs/brobot-cli.jar\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-start-the-server",children:"4. Start the Server"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"python -m mcp_server.main\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The server is now running at ",(0,r.jsx)(n.code,{children:"http://localhost:8000"}),"!"]}),"\n",(0,r.jsxs)(n.p,{children:["Visit ",(0,r.jsx)(n.code,{children:"http://localhost:8000/docs"})," for interactive API documentation."]}),"\n",(0,r.jsx)(n.h2,{id:"your-first-ai-automation",children:"Your First AI Automation"}),"\n",(0,r.jsx)(n.h3,{id:"using-python-client",children:"Using Python Client"}),"\n",(0,r.jsx)(n.p,{children:"Install the client library:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install brobot-client\n"})}),"\n",(0,r.jsx)(n.p,{children:"Create a simple automation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from brobot_client import BrobotClient\nimport openai\n\n# Initialize clients\nbrobot = BrobotClient()\nopenai.api_key = "your-api-key"\n\n# Get current screen state\nobservation = brobot.get_observation()\n\n# Ask AI what to do\nresponse = openai.ChatCompletion.create(\n    model="gpt-4",\n    messages=[{\n        "role": "user",\n        "content": f"I see these UI elements: {observation.active_states}. How do I log in?"\n    }]\n)\n\n# AI might respond: "Click on the login button, enter credentials, then submit"\n# Execute the suggested actions\nbrobot.click("login_button.png")\nbrobot.type_text("username@example.com")\nbrobot.click("submit_button.png")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"using-direct-api-calls",children:"Using Direct API Calls"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Get current observation\nresponse = requests.get("http://localhost:8000/api/v1/observation")\nobservation = response.json()\n\n# Execute an action\naction = {\n    "action_type": "click",\n    "parameters": {\n        "image_pattern": "login_button.png"\n    }\n}\nresponse = requests.post("http://localhost:8000/api/v1/execute", json=action)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,r.jsx)(n.h3,{id:"states-and-observations",children:"States and Observations"}),"\n",(0,r.jsx)(n.p,{children:"Brobot uses a state-based approach. The MCP server exposes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State Structure"}),": The complete map of your application's states"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Observations"}),": Current state with screenshot and confidence scores"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"actions",children:"Actions"}),"\n",(0,r.jsx)(n.p,{children:"Available actions mirror Brobot's capabilities:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"click"}),": Click on UI elements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Enter text"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"drag"}),": Drag and drop"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wait"}),": Wait for state changes"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"integration-patterns",children:"Integration Patterns"}),"\n",(0,r.jsx)(n.p,{children:"Common patterns for AI integration:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Autonomous Agent"}),": AI observes and acts independently"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Guided Automation"}),": AI suggests actions for approval"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hybrid Control"}),": Mix manual and AI-driven steps"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83d\udcd6 Read the ",(0,r.jsx)(n.a,{href:"./api-reference",children:"API Reference"})," for detailed endpoint documentation"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 Learn about ",(0,r.jsx)(n.a,{href:"./configuration",children:"Configuration Options"})]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udca1 Explore ",(0,r.jsx)(n.a,{href:"./examples",children:"AI Integration Examples"})]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udc1b Check ",(0,r.jsx)(n.a,{href:"./troubleshooting",children:"Troubleshooting Guide"})," if you encounter issues"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GitHub Issues"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/jspinak/brobot-mcp-server/issues",children:"Report bugs or request features"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Discord Community"}),": Join our Discord for real-time help"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": Full docs at ",(0,r.jsx)(n.a,{href:"https://brobot.dev",children:"brobot.dev"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
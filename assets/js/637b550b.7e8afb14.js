"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5917],{28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var t=r(96540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},61873:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>g});const t=JSON.parse('{"id":"logging/usage","title":"Logging Usage Guide","description":"Automatic Action Logging","source":"@site/docs/07-logging/usage.md","sourceDirName":"07-logging","slug":"/logging/usage","permalink":"/brobot/docs/logging/usage","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/07-logging/usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Logging Performance Guide","permalink":"/brobot/docs/logging/performance"}}');var i=r(74848),o=r(28453);const a={},l="Logging Usage Guide",s={},g=[{value:"Automatic Action Logging",id:"automatic-action-logging",level:2},{value:"Example Action Execution",id:"example-action-execution",level:3},{value:"Generated Log Output",id:"generated-log-output",level:3},{value:"Programmatic Logging",id:"programmatic-logging",level:2},{value:"Inject the Logger",id:"inject-the-logger",level:3},{value:"Simple Logging",id:"simple-logging",level:3},{value:"Fluent API",id:"fluent-api",level:3},{value:"Event-Based Logging",id:"event-based-logging",level:3},{value:"Correlation Tracking",id:"correlation-tracking",level:2},{value:"Structured Event Types",id:"structured-event-types",level:2},{value:"ActionEvent",id:"actionevent",level:3},{value:"TransitionEvent",id:"transitionevent",level:3},{value:"MatchEvent",id:"matchevent",level:3},{value:"PerformanceEvent",id:"performanceevent",level:3},{value:"Conditional Logging",id:"conditional-logging",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Use Appropriate Categories",id:"1-use-appropriate-categories",level:3},{value:"2. Use Appropriate Levels",id:"2-use-appropriate-levels",level:3},{value:"3. Include Context",id:"3-include-context",level:3},{value:"4. Use Structured Events",id:"4-use-structured-events",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"logging-usage-guide",children:"Logging Usage Guide"})}),"\n",(0,i.jsx)(n.h2,{id:"automatic-action-logging",children:"Automatic Action Logging"}),"\n",(0,i.jsx)(n.p,{children:"All Brobot actions automatically log their execution and results. No additional code is required."}),"\n",(0,i.jsx)(n.h3,{id:"example-action-execution",children:"Example Action Execution"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// This automatically logs the action\r\nActionResult result = action.find(stateImage);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"generated-log-output",children:"Generated Log Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[ACTIONS] INFO  FIND submitButton \u2192 SUCCESS [25ms] loc:(100,200) sim:0.95\n"})}),"\n",(0,i.jsx)(n.h2,{id:"programmatic-logging",children:"Programmatic Logging"}),"\n",(0,i.jsx)(n.p,{children:"For custom logging needs, use the BrobotLogger directly:"}),"\n",(0,i.jsx)(n.h3,{id:"inject-the-logger",children:"Inject the Logger"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"@Autowired\r\nprivate BrobotLogger logger;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"simple-logging",children:"Simple Logging"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Log a simple message\r\nlogger.info(LogCategory.ACTIONS, "Processing form submission");\r\n\r\n// Log with format parameters\r\nlogger.debug(LogCategory.MATCHING, "Found {} matches in {}ms", 3, 150);\r\n\r\n// Log errors\r\nlogger.error(LogCategory.SYSTEM, "Failed to connect: {}", exception.getMessage());\n'})}),"\n",(0,i.jsx)(n.h3,{id:"fluent-api",children:"Fluent API"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Build complex log entries\r\nlogger.builder(LogCategory.ACTIONS)\r\n    .level(LogLevel.INFO)\r\n    .message("Processing batch operation")\r\n    .context("batch_id", batchId)\r\n    .context("items_count", items.size())\r\n    .duration(Duration.ofMillis(500))\r\n    .log();\n'})}),"\n",(0,i.jsx)(n.h3,{id:"event-based-logging",children:"Event-Based Logging"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Log action events\r\nActionEvent event = ActionEvent.builder()\r\n    .type("CLICK")\r\n    .target("submitButton")\r\n    .success(true)\r\n    .duration(Duration.ofMillis(25))\r\n    .location(new Location(100, 200))\r\n    .similarity(0.95)\r\n    .build();\r\n\r\nlogger.logAction(event);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"correlation-tracking",children:"Correlation Tracking"}),"\n",(0,i.jsx)(n.p,{children:"Track related operations with correlation IDs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Autowired\r\nprivate CorrelationContext correlation;\r\n\r\n// Start a new session\r\ncorrelation.startSession("user_registration");\r\n\r\n// All subsequent logs include the session ID\r\naction.click(submitButton);  // Logs include correlation ID\r\naction.type(emailField, email);  // Same correlation ID\r\n\r\n// End the session\r\ncorrelation.endSession();\n'})}),"\n",(0,i.jsx)(n.h2,{id:"structured-event-types",children:"Structured Event Types"}),"\n",(0,i.jsx)(n.h3,{id:"actionevent",children:"ActionEvent"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'ActionEvent event = ActionEvent.builder()\r\n    .type("FIND")\r\n    .target("loginButton")\r\n    .success(true)\r\n    .duration(Duration.ofMillis(50))\r\n    .location(new Location(500, 300))\r\n    .similarity(0.92)\r\n    .metadata("attempts", 2)\r\n    .build();\r\n\r\nlogger.logAction(event);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"transitionevent",children:"TransitionEvent"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'TransitionEvent event = TransitionEvent.builder()\r\n    .fromState("MainMenu")\r\n    .toState("Settings")\r\n    .success(true)\r\n    .duration(Duration.ofMillis(200))\r\n    .method(TransitionMethod.CLICK)\r\n    .build();\r\n\r\nlogger.logTransition(event);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"matchevent",children:"MatchEvent"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'MatchEvent event = MatchEvent.builder()\r\n    .pattern("submitButton.png")\r\n    .matches(matchList)\r\n    .searchTime(Duration.ofMillis(75))\r\n    .strategy(SearchStrategy.BEST)\r\n    .searchRegion(region)\r\n    .build();\r\n\r\nlogger.logMatch(event);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"performanceevent",children:"PerformanceEvent"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'PerformanceEvent event = PerformanceEvent.builder()\r\n    .operation("batch_process")\r\n    .duration(Duration.ofSeconds(5))\r\n    .memoryUsed(1024 * 1024 * 50) // 50MB\r\n    .breakdown(Map.of(\r\n        "initialization", Duration.ofMillis(100),\r\n        "processing", Duration.ofMillis(4500),\r\n        "cleanup", Duration.ofMillis(400)\r\n    ))\r\n    .build();\r\n\r\nlogger.logPerformance(event);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"conditional-logging",children:"Conditional Logging"}),"\n",(0,i.jsx)(n.p,{children:"Check log levels before expensive operations:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"if (logger.shouldLog(LogCategory.MATCHING, LogLevel.DEBUG)) {\r\n    // Expensive operation only when DEBUG is enabled\r\n    String details = generateDetailedReport();\r\n    logger.debug(LogCategory.MATCHING, details);\r\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-use-appropriate-categories",children:"1. Use Appropriate Categories"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Good - use specific category\r\nlogger.info(LogCategory.ACTIONS, "Button clicked");\r\n\r\n// Bad - wrong category\r\nlogger.info(LogCategory.SYSTEM, "Button clicked");\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-use-appropriate-levels",children:"2. Use Appropriate Levels"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// ERROR - Something failed that needs attention\r\nlogger.error(LogCategory.ACTIONS, "Critical action failed");\r\n\r\n// WARN - Something unexpected but recoverable\r\nlogger.warn(LogCategory.MATCHING, "Low similarity match: 0.65");\r\n\r\n// INFO - Normal operation events\r\nlogger.info(LogCategory.TRANSITIONS, "Navigation completed");\r\n\r\n// DEBUG - Detailed information for debugging\r\nlogger.debug(LogCategory.MATCHING, "Search region: {}", region);\r\n\r\n// TRACE - Most detailed, typically method entry/exit\r\nlogger.trace(LogCategory.LIFECYCLE, "Entering processAction()");\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-include-context",children:"3. Include Context"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Good - includes context\r\nlogger.builder(LogCategory.ACTIONS)\r\n    .message("Processing failed")\r\n    .context("item_id", itemId)\r\n    .context("error", exception.getMessage())\r\n    .log();\r\n\r\n// Bad - no context\r\nlogger.error(LogCategory.ACTIONS, "Processing failed");\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-use-structured-events",children:"4. Use Structured Events"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Good - structured event with metadata\r\nActionEvent event = ActionEvent.success("CLICK", "button", Duration.ofMillis(50));\r\nlogger.logAction(event);\r\n\r\n// Less ideal - plain text\r\nlogger.info(LogCategory.ACTIONS, "Clicked button in 50ms");\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7867],{22241:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"logging/modular-logging-guide","title":"Modular Logging System Guide","description":"A practical guide to using Brobot\'s Modular Logging System for clean, configurable action logging.","source":"@site/docs/07-logging/modular-logging-guide.md","sourceDirName":"07-logging","slug":"/logging/modular-logging-guide","permalink":"/brobot/docs/logging/modular-logging-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/07-logging/modular-logging-guide.md","tags":[],"version":"current","sidebarPosition":25,"frontMatter":{"sidebar_position":25},"sidebar":"docSidebar","previous":{"title":"Modular Logging System","permalink":"/brobot/docs/logging/modular-logging-system"},"next":{"title":"Options Logging Methods Guide","permalink":"/brobot/docs/logging/options-logging-guide"}}');var o=i(74848),r=i(28453);const s={sidebar_position:25},l="Modular Logging System Guide",a={},c=[{value:"Quick Start",id:"quick-start",level:2},{value:"Enable Modular Logging",id:"enable-modular-logging",level:3},{value:"View Different Output Formats",id:"view-different-output-formats",level:3},{value:"QUIET Mode (Default)",id:"quiet-mode-default",level:4},{value:"NORMAL Mode",id:"normal-mode",level:4},{value:"VERBOSE Mode",id:"verbose-mode",level:4},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"Production Monitoring",id:"production-monitoring",level:3},{value:"Development Debugging",id:"development-debugging",level:3},{value:"CI/CD Pipeline",id:"cicd-pipeline",level:3},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Basic Configuration",id:"basic-configuration",level:3},{value:"Environment-Specific Configuration",id:"environment-specific-configuration",level:3},{value:"Runtime Configuration",id:"runtime-configuration",level:3},{value:"Output Format Reference",id:"output-format-reference",level:2},{value:"QUIET Format",id:"quiet-format",level:3},{value:"NORMAL Format",id:"normal-format",level:3},{value:"VERBOSE Format",id:"verbose-format",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"No Output Appearing",id:"no-output-appearing",level:3},{value:"Wrong Verbosity Level",id:"wrong-verbosity-level",level:3},{value:"Incomplete Output",id:"incomplete-output",level:3},{value:"Performance Impact",id:"performance-impact",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Environment-Appropriate Verbosity",id:"1-environment-appropriate-verbosity",level:3},{value:"2. Structured Logging for Analysis",id:"2-structured-logging-for-analysis",level:3},{value:"3. Correlation IDs for Tracing",id:"3-correlation-ids-for-tracing",level:3},{value:"4. Custom Metrics Collection",id:"4-custom-metrics-collection",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"With ELK Stack",id:"with-elk-stack",level:3},{value:"With Monitoring Systems",id:"with-monitoring-systems",level:3},{value:"With CI/CD Pipelines",id:"with-cicd-pipelines",level:3},{value:"Migration Guide",id:"migration-guide",level:2},{value:"From Old Logging System",id:"from-old-logging-system",level:3},{value:"Custom Output Requirements",id:"custom-output-requirements",level:3},{value:"Advanced Topics",id:"advanced-topics",level:2},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Multi-Destination Logging",id:"multi-destination-logging",level:3},{value:"Conditional Logging",id:"conditional-logging",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"modular-logging-system-guide",children:"Modular Logging System Guide"})}),"\n",(0,o.jsx)(n.p,{children:"A practical guide to using Brobot's Modular Logging System for clean, configurable action logging."}),"\n",(0,o.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsx)(n.h3,{id:"enable-modular-logging",children:"Enable Modular Logging"}),"\n",(0,o.jsxs)(n.p,{children:["Add to your ",(0,o.jsx)(n.code,{children:"application.yml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  logging:\n    verbosity: QUIET  # Options: QUIET, NORMAL, VERBOSE\n    console:\n      enabled: true\n"})}),"\n",(0,o.jsx)(n.h3,{id:"view-different-output-formats",children:"View Different Output Formats"}),"\n",(0,o.jsx)(n.h4,{id:"quiet-mode-default",children:"QUIET Mode (Default)"}),"\n",(0,o.jsx)(n.p,{children:"Perfect for CI/CD and production monitoring:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'\u2713 Find Working.ClaudeIcon \u2022 234ms\n\u2717 Click Button.Submit \u2022 156ms\n\u2713 Type "username" \u2022 89ms\n'})}),"\n",(0,o.jsx)(n.h4,{id:"normal-mode",children:"NORMAL Mode"}),"\n",(0,o.jsx)(n.p,{children:"Balanced output with timestamps and context:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"[12:34:56] \u2713 Find Working.ClaudeIcon completed in 234ms (1 match)\n[12:34:57] \u2717 Click Button.Submit failed in 156ms (No matches found)\n[12:34:58] \u2713 Type TextInput.Username completed in 89ms\n"})}),"\n",(0,o.jsx)(n.h4,{id:"verbose-mode",children:"VERBOSE Mode"}),"\n",(0,o.jsx)(n.p,{children:"Comprehensive debugging information:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"=== ACTION EXECUTION ===\nStarted:    2024-01-20 12:34:56.123\nCompleted:  2024-01-20 12:34:56.357\nAction ID:  a1b2c3d4-e5f6-7890-abcd-ef1234567890\nType:       FIND\nStatus:     SUCCESS \u2713\nDuration:   234ms\n...\n"})}),"\n",(0,o.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,o.jsx)(n.h3,{id:"production-monitoring",children:"Production Monitoring"}),"\n",(0,o.jsx)(n.p,{children:"Use QUIET mode for minimal overhead:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# production.yml\nbrobot:\n  logging:\n    verbosity: QUIET\n    console:\n      enabled: true\n    file:\n      enabled: true\n      path: /var/log/brobot/actions.log\n"})}),"\n",(0,o.jsx)(n.p,{children:"Monitor output:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'tail -f /var/log/brobot/actions.log | grep "\u2717"  # Watch for failures\n'})}),"\n",(0,o.jsx)(n.h3,{id:"development-debugging",children:"Development Debugging"}),"\n",(0,o.jsx)(n.p,{children:"Use VERBOSE mode during development:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# application-dev.yml\nbrobot:\n  logging:\n    verbosity: VERBOSE\n    console:\n      enabled: true\n"})}),"\n",(0,o.jsx)(n.h3,{id:"cicd-pipeline",children:"CI/CD Pipeline"}),"\n",(0,o.jsx)(n.p,{children:"Configure for clean test output:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# application-test.yml\nbrobot:\n  logging:\n    verbosity: QUIET\n    console:\n      enabled: true\n      capture-enabled: false  # Prevent output interception\n"})}),"\n",(0,o.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,o.jsx)(n.h3,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  logging:\n    # Verbosity level for all formatters\n    verbosity: QUIET  # QUIET | NORMAL | VERBOSE\n    \n    # Console output settings\n    console:\n      enabled: true\n      capture-enabled: false  # Set false to prevent output capture\n    \n    # File output settings (future feature)\n    file:\n      enabled: false\n      path: logs/actions.log\n      max-size: 10MB\n      max-files: 5\n"})}),"\n",(0,o.jsx)(n.h3,{id:"environment-specific-configuration",children:"Environment-Specific Configuration"}),"\n",(0,o.jsx)(n.p,{children:"Create profile-specific configurations:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# application-dev.yml\nbrobot:\n  logging:\n    verbosity: VERBOSE\n\n# application-prod.yml\nbrobot:\n  logging:\n    verbosity: QUIET\n"})}),"\n",(0,o.jsx)(n.p,{children:"Activate with Spring profiles:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"java -jar app.jar --spring.profiles.active=prod\n"})}),"\n",(0,o.jsx)(n.h3,{id:"runtime-configuration",children:"Runtime Configuration"}),"\n",(0,o.jsx)(n.p,{children:"Change verbosity programmatically:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@Autowired\nprivate ActionLoggingService loggingService;\n\n// For debugging a specific issue\nloggingService.setVerbosityLevel(VerbosityLevel.VERBOSE);\n\n// After debugging\nloggingService.setVerbosityLevel(VerbosityLevel.QUIET);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"output-format-reference",children:"Output Format Reference"}),"\n",(0,o.jsx)(n.h3,{id:"quiet-format",children:"QUIET Format"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Pattern"}),": ",(0,o.jsx)(n.code,{children:"[symbol] [action] [target] \u2022 [duration]ms"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\u2713 Find Working.ClaudeIcon \u2022 234ms\n\u2717 Click Button.Submit \u2022 156ms\n\u2713 Type \u2022 89ms\n\u2713 Wait \u2022 1000ms\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Components"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Symbol"}),": \u2713 (success) or \u2717 (failure)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Action"}),": Cleaned action type (Find, Click, Type, etc.)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Target"}),": State.Object format when available"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Duration"}),": Execution time in milliseconds"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"normal-format",children:"NORMAL Format"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Pattern"}),": ",(0,o.jsx)(n.code,{children:"[timestamp] [symbol] [action] [target] [status] in [duration]ms ([details])"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"[12:34:56] \u2713 Find Working.ClaudeIcon completed in 234ms (1 match)\n[12:34:57] \u2717 Click Button.Submit failed in 156ms (No matches found)\n[12:34:58] \u2713 Type TextInput.Username completed in 89ms\n[12:34:59] \u2717 Wait failed in 5000ms (Timeout exceeded)\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Additional Components"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Timestamp"}),": HH:mm",":ss"," format"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Status"}),': "completed" or "failed"']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Details"}),": Match count, error messages, etc."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"verbose-format",children:"VERBOSE Format"}),"\n",(0,o.jsx)(n.p,{children:"Multi-line structured output with sections:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"=== ACTION EXECUTION ===\nStarted:    2024-01-20 12:34:56.123\nCompleted:  2024-01-20 12:34:56.357\nAction ID:  a1b2c3d4-e5f6-7890-abcd-ef1234567890\nThread:     main\n\n--- ACTION DETAILS ---\nType:       FIND\nStatus:     SUCCESS \u2713\nDuration:   234ms\n\n--- TARGETS ---\nImages (1):\n  [1] Working.ClaudeIcon\n\n--- RESULTS ---\nMatches:    1\n  [1] Score: 0.987 Region: R[100,200 300x400]\n\n--- ENVIRONMENT ---\nOS:         Mac OS X\nJava:       21.0.7\nMonitors:   1\n\n--- METRICS ---\nExecution Time:   234ms\nMatch Count:      1\nBest Match Score: 0.987\n========================\n"})}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"no-output-appearing",children:"No Output Appearing"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Check if logging is enabled"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  logging:\n    console:\n      enabled: true  # Must be true\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Verify AspectJ is enabled"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@SpringBootApplication\n@EnableAspectJAutoProxy  // Required annotation\npublic class MyApplication {\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Check output capture settings"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  logging:\n    console:\n      capture-enabled: false  # Set to false if output is being intercepted\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"wrong-verbosity-level",children:"Wrong Verbosity Level"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Check configuration hierarchy"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Command line args override"}),"\n",(0,o.jsx)(n.li,{children:"Environment variables override"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"application-{profile}.yml"})," overrides"]}),"\n",(0,o.jsx)(n.li,{children:"application.yml defaults"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Verify active profile"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check which profile is active\necho $SPRING_PROFILES_ACTIVE\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Debug configuration loading"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Value("${brobot.logging.verbosity}")\nprivate String verbosity;\n\n@PostConstruct\npublic void logConfig() {\n    log.info("Active verbosity: {}", verbosity);\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"incomplete-output",children:"Incomplete Output"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Missing target information"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\u2717 Find \u2022 9ms  # Missing target\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Ensure StateImages have proper names:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@StateImage(name = "ClaudeIcon")  // Name is required\nprivate Image claudeIcon;\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Verify state registration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@State(name = "Working")  // State name is required\npublic class WorkingState {\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"performance-impact",children:"Performance Impact"}),"\n",(0,o.jsx)(n.p,{children:"If logging is impacting performance:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Use QUIET mode"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  logging:\n    verbosity: QUIET  # Minimal overhead\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Disable file logging"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  logging:\n    file:\n      enabled: false  # Reduce I/O\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Consider sampling"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Custom formatter that samples\n@Component\npublic class SamplingFormatter implements ActionLogFormatter {\n    private final AtomicInteger counter = new AtomicInteger();\n    \n    @Override\n    public boolean shouldLog(ActionResult result) {\n        // Log every 10th action\n        return counter.incrementAndGet() % 10 == 0;\n    }\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"1-environment-appropriate-verbosity",children:"1. Environment-Appropriate Verbosity"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# Development\nverbosity: VERBOSE  # See everything\n\n# Testing\nverbosity: NORMAL   # Balanced information\n\n# Production\nverbosity: QUIET    # Minimal overhead\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-structured-logging-for-analysis",children:"2. Structured Logging for Analysis"}),"\n",(0,o.jsx)(n.p,{children:"When you need machine-readable logs:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Component\npublic class JsonFormatter implements ActionLogFormatter {\n    @Override\n    public String format(ActionResult result) {\n        return String.format(\n            "{\\"action\\":\\"%s\\",\\"success\\":%b,\\"duration\\":%d,\\"target\\":\\"%s\\"}",\n            result.getExecutionContext().getActionType(),\n            result.getExecutionContext().isSuccess(),\n            result.getExecutionContext().getExecutionDuration().toMillis(),\n            result.getExecutionContext().getPrimaryTargetName()\n        );\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"3-correlation-ids-for-tracing",children:"3. Correlation IDs for Tracing"}),"\n",(0,o.jsx)(n.p,{children:"Track related actions:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// In your automation\nString correlationId = UUID.randomUUID().toString();\nMDC.put("correlationId", correlationId);\n\n// Actions will include this ID in VERBOSE mode\naction.find(image);  // Logs will include correlationId\naction.click();      // Same correlationId\n'})}),"\n",(0,o.jsx)(n.h3,{id:"4-custom-metrics-collection",children:"4. Custom Metrics Collection"}),"\n",(0,o.jsx)(n.p,{children:"Extend ActionMetrics for domain-specific metrics:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'ActionResult.ActionMetrics metrics = result.getActionMetrics();\nmetrics.getTimingBreakdown().put("imageProcessing", 45L);\nmetrics.getTimingBreakdown().put("screenCapture", 189L);\n'})}),"\n",(0,o.jsx)(n.h2,{id:"integration-examples",children:"Integration Examples"}),"\n",(0,o.jsx)(n.h3,{id:"with-elk-stack",children:"With ELK Stack"}),"\n",(0,o.jsx)(n.p,{children:"Configure file output for Logstash:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  logging:\n    file:\n      enabled: true\n      path: /var/log/brobot/actions.json\n      formatter: json  # Future feature\n"})}),"\n",(0,o.jsx)(n.p,{children:"Logstash configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'input {\n  file {\n    path => "/var/log/brobot/actions.json"\n    codec => "json"\n  }\n}\n\nfilter {\n  if [action] == "FIND" and [success] == false {\n    mutate {\n      add_tag => [ "find_failure" ]\n    }\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts => ["localhost:9200"]\n    index => "brobot-actions-%{+YYYY.MM.dd}"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"with-monitoring-systems",children:"With Monitoring Systems"}),"\n",(0,o.jsx)(n.p,{children:"Export metrics to Prometheus:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Component\npublic class PrometheusExporter {\n    private final Counter actionCounter = Counter.builder("brobot_actions_total")\n        .help("Total number of actions executed")\n        .labelNames("action", "success")\n        .register();\n    \n    @EventListener\n    public void onActionLogged(ActionLoggedEvent event) {\n        actionCounter.labels(\n            event.getActionType(),\n            String.valueOf(event.isSuccess())\n        ).inc();\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"with-cicd-pipelines",children:"With CI/CD Pipelines"}),"\n",(0,o.jsx)(n.p,{children:"Parse QUIET output in Jenkins:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-groovy",children:"pipeline {\n    stages {\n        stage('Test') {\n            steps {\n                script {\n                    def output = sh(\n                        script: 'java -jar app.jar',\n                        returnStdout: true\n                    )\n                    \n                    def failures = output.findAll(/\u2717.*/)\n                    if (failures) {\n                        error \"Found ${failures.size()} failed actions\"\n                    }\n                }\n            }\n        }\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,o.jsx)(n.h3,{id:"from-old-logging-system",children:"From Old Logging System"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Before"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// Scattered logging\nSystem.out.println("Found: " + matches.size());\nConsoleReporter.log(OutputLevel.HIGH, "Click successful");\nactionLogger.logAction(sessionId, result, collection);\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"After"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"// Unified logging - happens automatically\naction.find(image);  // Logged by ActionLoggingService\n"})}),"\n",(0,o.jsx)(n.h3,{id:"custom-output-requirements",children:"Custom Output Requirements"}),"\n",(0,o.jsx)(n.p,{children:"If you need custom output format:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Create custom formatter"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@Component\npublic class TeamCityFormatter implements ActionLogFormatter {\n    @Override\n    public String format(ActionResult result) {\n        return String.format(\n            \"##teamcity[testStarted name='%s' captureStandardOutput='true']\",\n            result.getExecutionContext().getActionType()\n        );\n    }\n}\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Register with Spring"}),":\nThe ",(0,o.jsx)(n.code,{children:"@Component"})," annotation automatically registers it."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Configure to use it"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"brobot:\n  logging:\n    formatter: teamcity  # Future feature\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"advanced-topics",children:"Advanced Topics"}),"\n",(0,o.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,o.jsx)(n.p,{children:"For high-frequency actions:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Component\npublic class BatchingLogService extends ActionLoggingService {\n    private final BlockingQueue<ActionResult> queue = new LinkedBlockingQueue<>();\n    \n    @Scheduled(fixedDelay = 1000)\n    public void flushBatch() {\n        List<ActionResult> batch = new ArrayList<>();\n        queue.drainTo(batch);\n        \n        if (!batch.isEmpty()) {\n            String combined = batch.stream()\n                .map(this::formatSingle)\n                .collect(Collectors.joining("\\n"));\n            System.out.println(combined);\n        }\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"multi-destination-logging",children:"Multi-Destination Logging"}),"\n",(0,o.jsx)(n.p,{children:"Log to multiple destinations:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"@Component\npublic class MultiDestinationLogger extends ActionLoggingService {\n    @Override\n    protected void outputFormattedMessage(String message, VerbosityLevel level) {\n        // Console\n        System.out.println(message);\n        \n        // File\n        fileWriter.write(message);\n        \n        // Remote\n        if (level == VerbosityLevel.VERBOSE) {\n            remoteLogger.send(message);\n        }\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"conditional-logging",children:"Conditional Logging"}),"\n",(0,o.jsx)(n.p,{children:"Log based on conditions:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Component\npublic class ConditionalFormatter implements ActionLogFormatter {\n    @Value("${app.debug.actions:}")\n    private Set<String> debugActions;\n    \n    @Override\n    public boolean shouldLog(ActionResult result) {\n        String actionType = result.getExecutionContext().getActionType();\n        \n        // Always log failures\n        if (!result.getExecutionContext().isSuccess()) {\n            return true;\n        }\n        \n        // Log specific actions in debug mode\n        return debugActions.contains(actionType);\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(n.p,{children:"The Modular Logging System provides:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Clean Output"}),": Single-line format in QUIET mode"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Flexibility"}),": Three verbosity levels for different needs"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Extensibility"}),": Easy to add custom formatters"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Performance"}),": Minimal overhead in production"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Maintainability"}),": Centralized logging logic"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Start with QUIET mode for clean output, use NORMAL for development, and switch to VERBOSE when debugging issues."})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(96540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);
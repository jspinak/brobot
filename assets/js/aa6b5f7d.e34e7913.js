"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3213],{28453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>l});var n=t(96540);const r={},a=n.createContext(r);function s(e){const i=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(a.Provider,{value:i},e.children)}},98415:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"core-library/configuration/initial-states","title":"Initial State Configuration Guide","description":"Overview","source":"@site/docs/03-core-library/configuration/initial-states.md","sourceDirName":"03-core-library/configuration","slug":"/core-library/configuration/initial-states","permalink":"/brobot/docs/core-library/configuration/initial-states","draft":false,"unlisted":false,"editUrl":"https://github.com/jspinak/brobot/edit/main/docs/docs/03-core-library/configuration/initial-states.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Auto-Configuration in Brobot","permalink":"/brobot/docs/core-library/configuration/auto-configuration"},"next":{"title":"Brobot Configuration Properties Reference","permalink":"/brobot/docs/core-library/configuration/properties-reference"}}');var r=t(74848),a=t(28453);const s={},l="Initial State Configuration Guide",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"1. Mark Your Initial State",id:"1-mark-your-initial-state",level:3},{value:"Configuration Properties",id:"configuration-properties",level:2},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Priority-Based Selection",id:"priority-based-selection",level:3},{value:"Profile-Specific Initial States",id:"profile-specific-initial-states",level:3},{value:"Test Profile Optimization",id:"test-profile-optimization",level:3},{value:"How It Works",id:"how-it-works",level:2},{value:"In Mock Mode",id:"in-mock-mode",level:3},{value:"In Real Mode",id:"in-real-mode",level:3},{value:"Monitoring Initial States",id:"monitoring-initial-states",level:2},{value:"Logging",id:"logging",level:3},{value:"Programmatic Access",id:"programmatic-access",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Initial State Not Activating",id:"initial-state-not-activating",level:3},{value:"Wrong State Activated",id:"wrong-state-activated",level:3},{value:"No States Found (Real Mode)",id:"no-states-found-real-mode",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Example: Complete Application",id:"example-complete-application",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"initial-state-configuration-guide",children:"Initial State Configuration Guide"})}),"\n",(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(i.p,{children:["Brobot provides automatic initial state management through the ",(0,r.jsx)(i.code,{children:"@State(initial = true)"})," annotation. This guide explains how to configure and use initial states in your Brobot applications."]}),"\n",(0,r.jsx)(i.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsx)(i.h3,{id:"1-mark-your-initial-state",children:"1. Mark Your Initial State"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:'@State(initial = true)\r\n@Getter\r\n@Slf4j\r\npublic class HomeState {\r\n    private StateImage logo = new StateImage.Builder()\r\n        .addPatterns("home-logo")\r\n        .build();\r\n}\n'})}),"\n",(0,r.jsx)(i.p,{children:"That's it! The framework will automatically:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Detect the initial state annotation"}),"\n",(0,r.jsx)(i.li,{children:"Create startup configuration"}),"\n",(0,r.jsx)(i.li,{children:"Activate the state when the application starts"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"configuration-properties",children:"Configuration Properties"}),"\n",(0,r.jsxs)(i.p,{children:["All initial state behavior can be configured via ",(0,r.jsx)(i.code,{children:"application.properties"}),":"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-properties",children:"# Enable/disable automatic activation (default: true)\r\nbrobot.startup.auto-activate=true\r\n\r\n# Enable/disable verification (default: true)\r\nbrobot.startup.verify=true\r\n\r\n# Seconds to wait before verification in real mode (default: 5)\r\n# This allows the GUI to stabilize before searching for states\r\nbrobot.startup.initial-delay=5\r\n\r\n# Additional startup delay (default: 1)\r\nbrobot.startup.delay=1\r\n\r\n# Search all states if initial states not found (default: false)\r\nbrobot.startup.fallback-search=false\r\n\r\n# Only activate the first found state (default: true)\r\n# Set to false to activate all found initial states\r\nbrobot.startup.activate-first-only=true\n"})}),"\n",(0,r.jsx)(i.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,r.jsx)(i.h3,{id:"priority-based-selection",children:"Priority-Based Selection"}),"\n",(0,r.jsx)(i.p,{children:"When multiple initial states exist, use priority to influence selection probability:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:"@State(initial = true, priority = 200)  // Higher priority\r\npublic class LoginState { }\r\n\r\n@State(initial = true, priority = 100)  // Default priority\r\npublic class HomeState { }\r\n\r\n@State(initial = true, priority = 50)   // Lower priority\r\npublic class DashboardState { }\n"})}),"\n",(0,r.jsx)(i.p,{children:"In mock mode, states with higher priority are more likely to be selected."}),"\n",(0,r.jsx)(i.h3,{id:"profile-specific-initial-states",children:"Profile-Specific Initial States"}),"\n",(0,r.jsx)(i.p,{children:"Different initial states for different environments:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:'// Only initial in test profile\r\n@State(initial = true, profiles = {"test"})\r\npublic class TestLoginState { }\r\n\r\n// Initial in production and staging\r\n@State(initial = true, profiles = {"production", "staging"})\r\npublic class MainMenuState { }\r\n\r\n// Initial in all profiles (default)\r\n@State(initial = true)\r\npublic class DefaultState { }\n'})}),"\n",(0,r.jsx)(i.h3,{id:"test-profile-optimization",children:"Test Profile Optimization"}),"\n",(0,r.jsx)(i.p,{children:"The framework automatically optimizes settings for the test profile:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:"// When running with --spring.profiles.active=test\r\n// These settings are applied automatically:\r\n// - No startup delays (immediate activation)\r\n// - Deterministic behavior (activate first only)\r\n// - No fallback search\n"})}),"\n",(0,r.jsx)(i.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsx)(i.h3,{id:"in-mock-mode",children:"In Mock Mode"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Initial states are registered with their priorities"}),"\n",(0,r.jsx)(i.li,{children:"A weighted random selection chooses one state set"}),"\n",(0,r.jsx)(i.li,{children:"Selected states are immediately activated"}),"\n",(0,r.jsx)(i.li,{children:"No screen verification needed"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"in-real-mode",children:"In Real Mode"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Initial states are registered"}),"\n",(0,r.jsxs)(i.li,{children:["Application waits for ",(0,r.jsx)(i.code,{children:"initial-delay"})," seconds (GUI stabilization)"]}),"\n",(0,r.jsx)(i.li,{children:"Framework searches for registered initial states on screen"}),"\n",(0,r.jsx)(i.li,{children:"Found states are activated in StateMemory"}),"\n",(0,r.jsxs)(i.li,{children:["If no states found and ",(0,r.jsx)(i.code,{children:"fallback-search=true"}),", searches all states"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"monitoring-initial-states",children:"Monitoring Initial States"}),"\n",(0,r.jsx)(i.h3,{id:"logging",children:"Logging"}),"\n",(0,r.jsx)(i.p,{children:"The framework provides detailed logging of initial state activation:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"INFO  Auto-configuring BrobotStartupConfiguration from @State(initial = true) annotations\r\nINFO  Found 1 initial states from annotations: [Home]\r\nINFO  \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\r\nINFO    AUTO-ACTIVATING INITIAL STATES\r\nINFO  \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\r\nINFO  Waiting 5 seconds before initial state verification (real mode)\r\nINFO  Searching for initial states: [Home]\r\nINFO  \u2705 Successfully activated initial states: [Home]\n"})}),"\n",(0,r.jsx)(i.h3,{id:"programmatic-access",children:"Programmatic Access"}),"\n",(0,r.jsx)(i.p,{children:"Check initial states programmatically:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:"@Autowired\r\nprivate InitialStates initialStates;\r\n\r\n@Autowired\r\nprivate StateMemory stateMemory;\r\n\r\n// Get registered initial states\r\nList<String> registered = initialStates.getRegisteredInitialStates();\r\n\r\n// Check if any are registered\r\nboolean hasInitial = initialStates.hasRegisteredInitialStates();\r\n\r\n// Get currently active states\r\nSet<String> active = stateMemory.getActiveStateNames();\n"})}),"\n",(0,r.jsx)(i.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(i.h3,{id:"initial-state-not-activating",children:"Initial State Not Activating"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Check annotation"}),": Ensure ",(0,r.jsx)(i.code,{children:"@State(initial = true)"})," is present"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Check profile"}),": Verify profile matches if using ",(0,r.jsx)(i.code,{children:"profiles"})," attribute"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Check timing"}),": Increase ",(0,r.jsx)(i.code,{children:"initial-delay"})," if GUI needs more time"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Check logs"}),': Look for "AUTO-ACTIVATING INITIAL STATES" messages']}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Check property"}),": Ensure ",(0,r.jsx)(i.code,{children:"brobot.startup.auto-activate=true"})]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"wrong-state-activated",children:"Wrong State Activated"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Check priorities"}),": Higher priority states are selected more often"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Check profiles"}),": Ensure correct profile is active"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use deterministic mode"}),": Set ",(0,r.jsx)(i.code,{children:"activate-first-only=true"})]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"no-states-found-real-mode",children:"No States Found (Real Mode)"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Increase delay"}),": Set higher ",(0,r.jsx)(i.code,{children:"initial-delay"})," value"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Enable fallback"}),": Set ",(0,r.jsx)(i.code,{children:"fallback-search=true"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Check images"}),": Verify pattern images exist and are correct"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Check similarity"}),": Adjust pattern matching thresholds"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"One Initial State"}),": Keep it simple with a single initial state when possible"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use Profiles"}),": Different initial states for test vs production"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Set Appropriate Delays"}),": Allow enough time for GUI to stabilize"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Monitor Logs"}),": Enable INFO logging for troubleshooting"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Test Both Modes"}),": Verify behavior in both mock and real modes"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"example-complete-application",children:"Example: Complete Application"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:'// HomeState.java\r\n@State(initial = true, priority = 100)\r\n@Getter\r\n@Slf4j\r\npublic class HomeState {\r\n    private StateImage logo = new StateImage.Builder()\r\n        .addPatterns("home-logo")\r\n        .setName("HomeLogo")\r\n        .build();\r\n}\r\n\r\n// Application.java\r\n@SpringBootApplication\r\n@ComponentScan(basePackages = {\r\n    "com.myapp",\r\n    "io.github.jspinak.brobot"\r\n})\r\npublic class MyApp {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(MyApp.class, args);\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-properties",children:"# application.properties\r\nbrobot.startup.auto-activate=true\r\nbrobot.startup.initial-delay=3\r\nbrobot.startup.activate-first-only=true\r\nbrobot.framework.mock=false\n"})}),"\n",(0,r.jsx)(i.p,{children:"With this configuration, the HomeState will automatically be found and activated 3 seconds after application startup."})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
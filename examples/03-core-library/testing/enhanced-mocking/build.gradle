plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '21'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    // Brobot 1.1.0+ includes Spring, Lombok, SLF4J as transitive dependencies
    implementation 'io.github.jspinak:brobot:1.1.0'
    
    // Only need annotation processor for Lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    
    // Add test dependencies as needed
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.assertj:assertj-core'
}

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
    mainClass = 'com.example.mocking.SimpleStandaloneApp'
}

// Task to run specific examples
task runExample(type: JavaExec) {
    mainClass = 'com.example.mocking.EnhancedMockingApplication'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}

// Task to run with specific scenario
task runScenario(type: JavaExec) {
    mainClass = 'com.example.mocking.EnhancedMockingApplication'
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty('scenario')) {
        args = ['--scenario', project.getProperty('scenario')]
    }
    standardInput = System.in
}
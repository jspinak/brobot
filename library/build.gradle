// In brobot/library/build.gradle

plugins {
    id 'java-library'
    id 'org.springframework.boot' apply false  // Don't apply boot plugin to library
    id 'maven-publish'
    id 'signing'
    id 'org.jreleaser'
    id 'jacoco'
}

dependencies {
    // These dependencies are part of the library's public API.
    api('com.sikulix:sikulixapi:2.0.5') {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
        exclude group: 'commons-logging', module: 'commons-logging'
        // This excludes the old JSON library to resolve the classpath conflict.
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    api 'org.bytedeco:javacv-platform:1.5.10'
    // Explicit OpenCV dependency for Linux
    api 'org.bytedeco:opencv-platform:4.9.0-1.5.10'
    api 'org.bytedeco:ffmpeg-platform:6.1.1-1.5.10'
    api 'org.apache.commons:commons-lang3:3.0'
    
    // These dependencies are exposed as part of Brobot's public API
    api 'org.springframework:spring-context'
    api 'org.springframework.boot:spring-boot-autoconfigure'
    api 'org.springframework.boot:spring-boot-starter-aop'
    api 'org.slf4j:slf4j-api:2.0.9'

    // These dependencies are internal implementation details.
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    implementation 'com.github.erosb:everit-json-schema:1.14.5'
    implementation 'org.json:json:20240303'
    implementation 'com.networknt:json-schema-validator:1.4.0'

    // Test dependencies for the unit tests within this module
    testImplementation platform('org.junit:junit-bom:5.10.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'

    // Lombok is handled by the io.freefair.lombok plugin
    // But we need to explicitly add annotation processor for proper generation
    annotationProcessor 'org.projectlombok:lombok'
}

java {
    withJavadocJar()
    withSourcesJar()
}

// Handle duplicate files in jar tasks
tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Handle duplicate files in resource processing tasks
processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

processTestResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Ensure standard source sets configuration
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

test {
    // Standard Spring Boot test setup
    useJUnitPlatform()
    
    // Minimal excludes
    exclude '**/MotionDetectorTest.class'
    exclude '**/GridBasedClustererTest.class'
    
    // Simple memory settings
    maxHeapSize = '2g'
    
    // Standard test logging
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = false
    }
    
    // Ensure test classes can access main classes
    classpath = sourceSets.test.runtimeClasspath
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

javadoc {
    dependsOn compileJava
    
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    exclude '**/module-info.java.disabled'
    options.addStringOption('Xdoclint:none', '-quiet')
    options.windowTitle = "Brobot 1.1.0 API" // This sets the browser tab title
    options.docTitle = "Brobot 1.1.0 API" // This sets the main header on the page
    
    // Include compiled classes in classpath for Lombok-generated code
    classpath = configurations.compileClasspath + sourceSets.main.output
    
    // Disable javadoc temporarily due to Lombok builder issues
    enabled = false
}

// -- Publishing Configuration --
publishing {
    publications {
        mavenJava(MavenPublication) {
            // Explicitly set the coordinates for this publication.
            // This ensures the POM and the upload path are correct.
            groupId = 'io.github.jspinak'
            artifactId = 'brobot'
            version = '1.1.0'

            from components.java
            pom {
                name = 'Brobot'
                description = 'Model-based GUI Automation'
                url = 'https://github.com/jspinak/brobot'
                inceptionYear = '2022'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'jspinak'
                        name = 'Joshua Spinak'
                        email = 'jspinak@hotmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/jspinak/brobot.git'
                    developerConnection = 'scm:git:ssh://github.com:jspinak/brobot.git'
                    url = 'https://github.com/jspinak/brobot'
                }
            }
        }
    }
    repositories {
        maven {
            name = "CentralPortal"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.property('centralPortalUsername')
                password = project.property('centralPortalPassword')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

// JReleaser configuration
jreleaser {
    // Git configuration
    gitRootSearch = true
    
    // Project configuration
    project {
        name = 'brobot'
        description = 'Model-based GUI Automation'
        website = 'https://github.com/jspinak/brobot'
        authors = ['Joshua Spinak']
        license = 'MIT'
        inceptionYear = '2022'
        stereotype = 'NONE'
        
        java {
            groupId = 'io.github.jspinak'
            version = '21'
            multiProject = true
        }
    }
    
    // Release configuration
    release {
        github {
            overwrite = true
            draft = false
            prerelease {
                enabled = false
            }
            changelog {
                formatted = 'ALWAYS'
                preset = 'conventional-commits'
                contributors {
                    enabled = false
                }
            }
        }
    }
    
    // Signing configuration
    signing {
        active = 'ALWAYS'
        armored = true
        mode = 'MEMORY'
    }
    
    // Deploy configuration for Maven Central
    deploy {
        maven {
            nexus2 {
                'maven-central' {
                    active = 'ALWAYS'
                    url = 'https://s01.oss.sonatype.org/service/local'
                    closeRepository = true
                    releaseRepository = true
                    stagingRepositories = ['build/staging-deploy']
                }
            }
        }
    }
}

// Apply coverage tasks
// apply from: 'gradle-coverage-tasks.gradle'  // Temporarily disabled for testing

// build.gradle library module

///In a library, you typically want to avoid the org.springframework.boot plugin, as Spring Boot is designed for standalone applications. Your library should not impose Spring Boot's conventions on the projects that use it. So, you can exclude this plugin.
plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'io.freefair.lombok' version '8.6' //'6.6.3' // the lombok version is aligned with the gradle version
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.kotlin.jvm' version '2.1.20-Beta2'
}

java {
    sourceCompatibility = '21'
}

configurations {
 compileOnly {
     extendsFrom annotationProcessor
 }
}

group 'io.github.jspinak.brobot'
version '1.0.7'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(':log')
    implementation 'org.springframework:spring-core:6.1.3'
    implementation 'org.springframework:spring-context:6.1.3'
    implementation 'org.springframework:spring-beans:6.1.3'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation('com.sikulix:sikulixapi:2.0.5') {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
    }
    implementation 'com.github.stephenc.monte:monte-screen-recorder:0.7.7.0'

    implementation group: 'org.bytedeco', name: 'javacv-platform', version: '1.5.10'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    implementation 'com.github.kwhat:jnativehook:2.2.2'

    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Kotlin test dependencies
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'

    // JUnit 5 dependencies
    testImplementation(platform('org.junit:junit-bom:5.10.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'

    // mockito
    testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'
    testImplementation("org.mockito.kotlin:mockito-kotlin:4.1.0") // new tests are written in Kotlin

    testImplementation 'org.assertj:assertj-core:3.24.2'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

// This configures Kotlin to work with Java
kotlin {
    jvmToolchain(21)  // Use the Java version here
}

// This tells Gradle where to find Kotlin source files
sourceSets {
    test {
        kotlin {
            srcDirs += 'src/test/kotlin'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId = 'io.github.jspinak'
            artifactId = 'brobot'
            version = '1.0.7'
            from components.java

            pom {
                name = 'brobot'
                description = 'testable state-based automation'
                url = 'https://github.com/jspinak/brobot'
                inceptionYear = '2022'

                licenses {
                    license {
                        name = 'MIT license'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id = 'jspinak'
                        name = 'Joshua Spinak'
                        email = 'jspinak@hotmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:git:github.com/jspinak/brobot.git'
                    developerConnection = 'scm:git"ssh//github.com:jspinak/brobot.git'
                    url = 'https://github.com/jspinak/brobot'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            //url = "https://s01.oss.sonatype.org/content/repositories/snapshots/" // for snapshots
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/" // for releases
            credentials {
                username = project.properties["ossrhUsername"]
                password = project.properties["ossrhPassword"]
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
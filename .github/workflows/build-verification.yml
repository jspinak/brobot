name: Build Verification

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

env:
  JAVA_VERSION: '21'
  GRADLE_OPTS: -Dorg.gradle.daemon=false

jobs:
  build:
    name: Verify Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'gradle'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      if: runner.os != 'Windows'

    - name: Build all modules
      shell: bash
      run: |
        echo "Building on ${{ matrix.os }}..."
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          # Run build and capture exit code
          ./gradlew.bat build -x test --no-daemon --stacktrace
          BUILD_EXIT_CODE=$?

          # If build failed on Windows, capture javadoc options for debugging
          if [ $BUILD_EXIT_CODE -ne 0 ]; then
            echo "Build failed with exit code $BUILD_EXIT_CODE, capturing javadoc.options file for debugging..."
            if [ -f library/build/tmp/javadoc/javadoc.options ]; then
              echo "===== JAVADOC OPTIONS FILE CONTENT ====="
              cat library/build/tmp/javadoc/javadoc.options
              echo ""
              echo "===== CHECKING FOR PROBLEMATIC PATTERNS ====="
              grep -n " -$" library/build/tmp/javadoc/javadoc.options || echo "No trailing dash found"
              grep -n "' -" library/build/tmp/javadoc/javadoc.options || echo "No quote-dash pattern found"
              echo "===== HEX DUMP OF OPTIONS FILE (first 500 bytes) ====="
              xxd -l 500 library/build/tmp/javadoc/javadoc.options 2>/dev/null || od -c library/build/tmp/javadoc/javadoc.options | head -20
              echo "========================================="
            else
              echo "javadoc.options file not found at library/build/tmp/javadoc/javadoc.options"
            fi
            exit $BUILD_EXIT_CODE
          fi
        else
          ./gradlew build -x test --no-daemon --stacktrace
        fi
        echo "✅ Build successful on ${{ matrix.os }}"

    - name: Verify artifacts created
      shell: bash
      run: |
        echo "Checking build artifacts..."
        if ls library/build/libs/library-*.jar 1> /dev/null 2>&1; then
          echo "✅ Library JAR created"
          ls -la library/build/libs/library-*.jar
        else
          echo "❌ Library JAR not found"
          echo "Contents of library/build/libs (if exists):"
          ls -la library/build/libs/ 2>/dev/null || echo "Directory doesn't exist"
          exit 1
        fi

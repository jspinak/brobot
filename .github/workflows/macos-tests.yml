name: macOS Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Enable debug logging'
        required: false
        default: false

jobs:
  macos-java21:
    name: macOS Java 21 Tests
    runs-on: macos-latest
    timeout-minutes: 60
    
    env:
      # Disable Gradle daemon to prevent hanging
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Xmx1g
      # Force headless mode
      JAVA_TOOL_OPTIONS: -Djava.awt.headless=true -Dapple.awt.UIElement=true
      # CI environment variables
      CI: true
      GITHUB_ACTIONS: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: System information
      run: |
        echo "macOS version:"
        sw_vers
        echo "Available memory:"
        vm_stat | perl -ne '/page size of (\d+)/ and $size=$1; /Pages\s+([^:]+)[^\d]+(\d+)/ and printf("%-16s % 16.2f Mi\n", "$1:", $2 * $size / 1048576);'
        echo "CPU info:"
        sysctl -n machdep.cpu.brand_string
        echo "Disk space:"
        df -h
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        # Minimal cache to prevent extraction timeouts
        cache: 'gradle'
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Clean environment
      run: |
        # Kill any existing Java processes
        pkill -9 java || true
        pkill -9 gradle || true
        
        # Clean Gradle caches
        rm -rf ~/.gradle/caches/modules-2/modules-2.lock
        rm -rf ~/.gradle/caches/*/plugin-resolution/
        rm -rf ~/.gradle/daemon/
        rm -rf .gradle/
        rm -rf build/
        rm -rf */build/
        
        # Ensure gradlew is executable
        chmod +x gradlew
    
    - name: Pre-compile tests
      run: |
        echo "Pre-compiling test classes to avoid timeout during test execution..."
        ./gradlew :library:compileTestJava --no-daemon --no-parallel --console=plain
      timeout-minutes: 10
      continue-on-error: true
    
    - name: Run CI-optimized tests (Batch 1 - Fast Tests)
      run: |
        echo "Running fast tests first..."
        python3 library/scripts/run-tests-ci.py library \
          --timeout 20 \
          --batch-size 5
      timeout-minutes: 15
      continue-on-error: true
    
    - name: Run CI-optimized tests (Batch 2 - Remaining Tests)
      if: success() || failure()
      run: |
        echo "Running remaining tests..."
        python3 library/scripts/run-tests-ci.py library \
          --timeout 30 \
          --batch-size 3
      timeout-minutes: 20
      continue-on-error: true
    
    - name: Generate test summary
      if: always()
      run: |
        echo "## Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "Platform: macOS $(sw_vers -productVersion)" >> $GITHUB_STEP_SUMMARY
        echo "Java Version: 21" >> $GITHUB_STEP_SUMMARY
        echo "Test Results:" >> $GITHUB_STEP_SUMMARY
        
        # Find and parse test results if available
        if ls test-results-library-*.json 1> /dev/null 2>&1; then
          python3 -c "
        import json
        import glob
        for file in glob.glob('test-results-library-*.json'):
            with open(file) as f:
                data = json.load(f)
                summary = data.get('summary', {})
                print(f'- Passed: {len(summary.get(\"passed\", []))}')
                print(f'- Failed: {len(summary.get(\"failed\", []))}')
                print(f'- Timed Out: {len(summary.get(\"timed_out\", []))}')
          " >> $GITHUB_STEP_SUMMARY
        else
          echo "No test results file found" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: macos-java21-test-results
        path: |
          test-results-*.json
          library/build/reports/tests/
          library/build/test-results/
        retention-days: 7
    
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: macos-java21-failure-logs
        path: |
          *.log
          library/build/reports/
          ~/.gradle/daemon/*/daemon-*.log
        retention-days: 3

  macos-java17:
    name: macOS Java 17 Tests
    runs-on: macos-latest
    timeout-minutes: 60
    
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Xmx1g
      JAVA_TOOL_OPTIONS: -Djava.awt.headless=true -Dapple.awt.UIElement=true
      CI: true
      GITHUB_ACTIONS: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Clean environment
      run: |
        pkill -9 java || true
        pkill -9 gradle || true
        rm -rf ~/.gradle/caches/modules-2/modules-2.lock
        rm -rf ~/.gradle/daemon/
        chmod +x gradlew
    
    - name: Run CI-optimized tests
      run: |
        python3 library/scripts/run-tests-ci.py library \
          --timeout 25 \
          --batch-size 5
      timeout-minutes: 30
      continue-on-error: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: macos-java17-test-results
        path: |
          test-results-*.json
          library/build/reports/tests/
        retention-days: 7
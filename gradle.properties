#The gradle.properties file is used to define global properties that can be accessed by all modules in the project. Placing it in the root directory ensures that these properties are accessible to all sub-modules.
#If you have module-specific properties that should only be available to a particular module, you can create a gradle.properties file within that module's directory. However, for properties that need to be shared across multiple modules or the entire project, it's best to keep them in the root gradle.properties file.
#Additionally, the root gradle.properties file is a good place to store sensitive information like passwords, API keys, or other credentials that should not be committed to version control. You can reference these properties in your build scripts or application code without hardcoding sensitive values.

signing.keyId=2EEC69E7
signing.password=NinigakKhelyKhubHast
signing.secretKeyRingFile=../secretKey/secring.kbx

ossrhUsername=jspinak
ossrhPassword=X8k$6nBAkqE#qFR

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

elastic.username=elastic
elastic.password=brobot-testing-repo
kibana.password=kibana-vorstellung

# Truststore configuration
spring.elasticsearch.rest.ssl.trust-store-type=PKCS12
spring.elasticsearch.rest.ssl.trust-store-location=/tmp/truststore.p12
spring.elasticsearch.rest.ssl.trust-store-password=password
spring.elasticsearch.rest.uris=localhost:9200
spring.elasticsearch.client.certificate=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEU2pDQ0FqS2dBd0lCQWdJVkFNd1NFOHpPODJ3RGZKalJQRFJFdUNUdWxkSThNQTBHQ1NxR1NJYjNEUUVCDQpDd1VBTURReE1qQXdCZ05WQkFNVEtVVnNZWE4wYVdNZ1EyVnlkR2xtYVdOaGRHVWdWRzl2YkNCQmRYUnZaMlZ1DQpaWEpoZEdWa0lFTkJNQjRYRFRJek1UQXdNakV4TURZeU9Wb1hEVEkyTVRBd01URXhNRFl5T1Zvd05ERXlNREFHDQpBMVVFQXhNcFJXeGhjM1JwWXlCRFpYSjBhV1pwWTJGMFpTQlViMjlzSUVGMWRHOW5aVzVsY21GMFpXUWdRMEV3DQpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEV2k1KzNxbWdEWURBVWhRYk0yUm9ZDQpNZ1Y5b1JHck5udkNlbzJET0VycnpOaytyaWVzV29vMSs5aFNudHczQU5zM0UyT3MwOXZ4bkl1aDFaMkdpMUo3DQo0Tlg2MzM0elBDTHRCMGh4RTJVcElscXBwT1pVV3pROHFzR280VmFjZFRLUHFFWEJEVGI3R0JCN1I2SmlOOUdQDQpid3RtM2VuQnJoZDVyQ1RoWjF2UGJrQUtNbEdwNWlLTk1kMkxqV2pGeTNQUWd1ekVSaTl5cm5xb1NPN1N2TTA0DQpvWmFrZkw2ODhnTjdNb2t2TC9qQVhmSUJxK3VTUHc2VnZ5SXNQWFB1T29lRXZvZ1BIRjRhZFpCamdoZHJSMXNYDQp4V2s3eFpCaUdpK2k1Z0VQM3NPQzF1bTUxK2NQNmxRVnpGK3JyR3h6cnNPWE41UEUza0FMcGEraTJvZmdtNWlaDQpBZ01CQUFHalV6QlJNQjBHQTFVZERnUVdCQlRldDhkN2ZjYnU4ZkdLdWlSQU9HaitYMjFwa2pBZkJnTlZIU01FDQpHREFXZ0JUZXQ4ZDdmY2J1OGZHS3VpUkFPR2orWDIxcGtqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHDQpTSWIzRFFFQkN3VUFBNElCQVFCcHdUVERJRWc4UVJpRmZBOTFRVGMvWnQ0QWVIUG5KbkU5ejFNUVVxb2RqUk4vDQpmaXpleERMMm1QWURaODNVaCtoZk1ITkJva01MRGJOa2ZUMEZXMEgrMjFIMXp5OGwrUkhkd3F2WVFicm96ZzhvDQpydTNqdkVkNjl5ODBoQngyUEhJZnRIU2gwMmtwNlNRK3QrNlU2RDY1MTFOYjlPaTU1bGRzMi91NWxkZlNXZDltDQpZR0pnRGpMa25iaXpZQ1Z4Zk1DdlJiaW1zMHVsK1ZESmY5ck50ZU9NRCtvc21WVUNUNDlSc3M3cnpTbVVxUjAvDQpkcEhnL1pPT1N0NUp4bUthNzBRS1BsRk83dUZLNU9WN0oyU1gzLzJtZ1UveWZnOEcyMmdCdXg1aEdkOU1SNERpDQpEVkl2eXIzaHNlSC9wSVZMRlhjSkRzS2FpMGVJcE5LSnFwamJJdFpKDQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=

# Enable debug logging for Spring
logging.level.org.springframework=INFO
spring.main.allow-circular-references=true

#lombok.verbose=true
#lombok.debug=true